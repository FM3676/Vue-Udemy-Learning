1
00:00:02,160 --> 00:00:05,550
所以现在我打开了这个生成的文件夹，

2
00:00:05,550 --> 00:00:08,220
我们使用 vue create 命令生成的，

3
00:00:08,220 --> 00:00:11,550
就我而言，vue-first 应用程序文件夹。

4
00:00:11,550 --> 00:00:13,990
我用 Visual Studio Code 打开它

5
00:00:13,990 --> 00:00:16,329
使用迄今为止我们一直在使用的编辑器，

6
00:00:16,329 --> 00:00:18,240
只需打开文件，

7
00:00:18,240 --> 00:00:21,293
然后通过选择创建的整个文件夹。

8
00:00:22,810 --> 00:00:26,410
现在在那个文件夹中，你会看到一堆文件，

9
00:00:26,410 --> 00:00:28,633
还有子文件夹。

10
00:00:30,120 --> 00:00:32,860
就我而言，我有一个节点模块子文件夹，

11
00:00:32,860 --> 00:00:34,240
一个公共子文件夹，

12
00:00:34,240 --> 00:00:35,940
和一个源子文件夹。

13
00:00:35,940 --> 00:00:38,420
然后，一堆文件。

14
00:00:38,420 --> 00:00:40,300
这就是建立的项目

15
00:00:40,300 --> 00:00:43,053
这里为我们生成的 vue CLI。

16
00:00:44,080 --> 00:00:45,530
现在，让我快速带你走

17
00:00:45,530 --> 00:00:47,940
通过我们这里的结构。

18
00:00:47,940 --> 00:00:51,030
在此项目文件夹的根级别。

19
00:00:51,030 --> 00:00:53,780
我们有一堆配置文件。

20
00:00:53,780 --> 00:00:56,050
你不需要太在意他们。

21
00:00:56,050 --> 00:00:57,920
除非你知道自己在做什么，

22
00:00:57,920 --> 00:01:00,650
您可以将所有默认值保留在那里。

23
00:01:00,650 --> 00:01:03,210
package.json 文件很有趣。

24
00:01:03,210 --> 00:01:05,260
这最终定义了

25
00:01:05,260 --> 00:01:08,580
我们可以像 NPM run serve 一样执行的脚本，

26
00:01:08,580 --> 00:01:12,303
我们开始启动开发服务器。

27
00:01:13,260 --> 00:01:15,350
在引擎盖下，你可以看到那些脚本

28
00:01:15,350 --> 00:01:18,870
似乎都使用了 vue CLI 中的一些东西，

29
00:01:18,870 --> 00:01:22,053
所以他们正在做为我们预先配置好的东西。

30
00:01:23,090 --> 00:01:25,110
我们这里也有依赖关系。

31
00:01:25,110 --> 00:01:27,270
例如，你会看到 vue，

32
00:01:27,270 --> 00:01:29,880
框架作为依赖。

33
00:01:29,880 --> 00:01:33,720
这些是现在在我们的代码中可用的包。

34
00:01:33,720 --> 00:01:37,790
而包只是意味着这将被导入

35
00:01:37,790 --> 00:01:40,290
并自动添加到我们的代码中。

36
00:01:40,290 --> 00:01:45,000
我们不需要在任何 HTML 文件中添加任何脚本标签

37
00:01:45,000 --> 00:01:47,760
使这些软件包可用。

38
00:01:47,760 --> 00:01:50,460
在整个课程中，我们将添加更多包。

39
00:01:50,460 --> 00:01:52,710
但是现在，我们可以从这些开始

40
00:01:52,710 --> 00:01:54,880
我们这里有的包。

41
00:01:54,880 --> 00:01:57,770
我们还得到了某些开发依赖项。

42
00:01:57,770 --> 00:01:59,700
这些也是包，

43
00:01:59,700 --> 00:02:02,410
但只有我们的项目在这里设置的包

44
00:02:02,410 --> 00:02:03,770
在引擎盖下使用，

45
00:02:03,770 --> 00:02:06,270
例如，开发服务器

46
00:02:06,270 --> 00:02:08,763
在其中一个包中。

47
00:02:09,770 --> 00:02:11,520
所以这些都是包，

48
00:02:11,520 --> 00:02:13,220
我们不必关心。

49
00:02:13,220 --> 00:02:15,460
这些是我们将要使用的包

50
00:02:15,460 --> 00:02:18,823
当我们编写代码时主动或隐含地。

51
00:02:19,680 --> 00:02:21,550
现在就是这个文件。

52
00:02:21,550 --> 00:02:23,810
我们现在可以忽略所有其他文件，

53
00:02:23,810 --> 00:02:26,520
而是查看其他文件夹。

54
00:02:26,520 --> 00:02:29,100
末端的节点模块

55
00:02:29,100 --> 00:02:31,850
package.json 中提到的包。

56
00:02:31,850 --> 00:02:35,500
这里我们指定我们需要它们，NPM，

57
00:02:35,500 --> 00:02:37,410
节点包管理器工具

58
00:02:37,410 --> 00:02:39,590
我们与节点一起安装的，

59
00:02:39,590 --> 00:02:40,560
然后最后

60
00:02:40,560 --> 00:02:44,140
继续并将这些包下载到我们的项目中

61
00:02:44,140 --> 00:02:46,953
并将它们存储在节点模块文件夹中。

62
00:02:48,410 --> 00:02:52,010
它使用您可以运行的特定命令来做到这一点

63
00:02:52,010 --> 00:02:53,100
在终端，

64
00:02:53,100 --> 00:02:55,260
如果我们退出正在运行的开发服务器，

65
00:02:55,260 --> 00:02:57,350
你可以用 Ctrl+C 来做，

66
00:02:57,350 --> 00:02:59,130
你可以运行 NPM 安装

67
00:02:59,130​​ --> 00:03:02,220
告诉 NPM 看看 package.json，

68
00:03:02,220 --> 00:03:06,200
将所有这些依赖项下载到节点模块文件夹中。

69
00:03:06,200 --> 00:03:08,300
好吧，然后它们就可用了。

70
00:03:08,300 --> 00:03:10,990
一旦 NPM 安装过程完成，

71
00:03:10,990 --> 00:03:12,550
你现在不需要做的，

72
00:03:12,550 --> 00:03:14,690
因为 vue CLI 为我们做到了

73
00:03:14,690 --> 00:03:16,360
当它创建项目时。

74
00:03:16,360 --> 00:03:17,530
一旦完成，

75
00:03:17,530 --> 00:03:19,300
你可以再次运行 NPM run serve

76
00:03:19,300 --> 00:03:21,400
再次启动该开发服务器。

77
00:03:22,300 --> 00:03:23,133
顺便说一下，

78
00:03:23,133 --> 00:03:25,260
您应该保持该服务器正常运行，

79
00:03:25,260 --> 00:03:27,700
您应该保持该过程正常运行。

80
00:03:27,700 --> 00:03:29,420
因为你只能测试你的应用

81
00:03:29,420 --> 00:03:31,480
只要它正在运行。

82
00:03:31,480 --> 00:03:32,710
如果你完成了一天，

83
00:03:32,710 --> 00:03:34,980
您可以使用 Ctrl+C 退出。

84
00:03:34,980 --> 00:03:37,830
但是如果你开始在那个项目中再次编写代码，

85
00:03:37,830 --> 00:03:39,610
您需要再次运行该服务器。

86
00:03:39,610 --> 00:03:42,160
这是关于该服务器的重要说明

87
00:03:42,160 --> 00:03:45,380
它应该在您编写代码时启动并运行。

88
00:03:45,380 --> 00:03:47,170
需要安装 NPM

89
00:03:47,170 --> 00:03:49,470
每当您共享项目时

90
00:03:49,470 --> 00:03:52,090
例如，没有节点模块，

91
00:03:52,090 --> 00:03:53,830
喜欢未来的代码附件

92
00:03:53,830 --> 00:03:55,470
你会在本课程中发现，

93
00:03:55,470 --> 00:03:57,120
那么你需要运行 NPM 安装

94
00:03:57,120 --> 00:04:00,650
一次以确保所有软件包都可用

95
00:04:00,650 --> 00:04:03,840
在使用 vue create 创建的全新项目中，

96
00:04:03,840 --> 00:04:05,830
你不需要运行 NPM install

97
00:04:05,830 --> 00:04:08,830
因为vue create，我们执行的命令

98
00:04:08,830 --> 00:04:11,720
创建一个项目已经为我们做到了。

99
00:04:11,720 --> 00:04:13,853
这就是节点模块文件夹。

100
00:04:14,930 --> 00:04:16,410
说了很多，

101
00:04:16,410 --> 00:04:18,769
但重要的是要了解它的作用。

102
00:04:18,769 --> 00:04:20,670
它包含我们的依赖项，

103
00:04:20,670 --> 00:04:22,470
比如vue框架，

104
00:04:22,470 --> 00:04:25,180
以及依赖项的依赖项。

105
00:04:25,180 --> 00:04:26,883
这就是为什么它这么大。

106
00:04:28,410 --> 00:04:31,300
您应该单独保留节点模块文件夹，

107
00:04:31,300 --> 00:04:33,060
不要在那里更改代码，

108
00:04:33,060 --> 00:04:34,340
不要删除它，

109
00:04:34,340 --> 00:04:37,850
这都会以负面的方式影响您的应用程序。

110
00:04:37,850 --> 00:04:39,463
你应该把它留在这里。

111
00:04:40,330 --> 00:04:42,870
公共文件夹是一个非常简单的文件夹。

112
00:04:42,870 --> 00:04:45,810
最后，我们得到了一个 HTML 文件。

113
00:04:45,810 --> 00:04:48,590
这是一个看起来很简单的文件

114
00:04:48,590 --> 00:04:50,630
那是文件的最后，

115
00:04:50,630 --> 00:04:53,980
最后将包含我们的 vue 应用程序。

116
00:04:53,980 --> 00:04:56,550
您会看到它有一个带有 ID 应用程序的 div

117
00:04:56,550 --> 00:04:59,360
最后你很快就会看到

118
00:04:59,360 --> 00:05:02,323
我们的 vue 应用程序将被挂载到的位置。

119
00:05:03,170 --> 00:05:07,020
而且我们这里只有一个 HTML 文件，

120
00:05:07,020 --> 00:05:10,570
由于我们正在构建一个 vue 单页应用程序，

121
00:05:10,570 --> 00:05:13,030
这意味着我们在屏幕上看到的一切

122
00:05:13,030 --> 00:05:16,070
将由 vue 和 JavaScript 控制。

123
00:05:16,070 --> 00:05:18,680
我们只有一个 HTML 文件

124
00:05:18,680 --> 00:05:22,363
并使用 vue 将不同的东西带到屏幕上。

125
00:05:23,210 --> 00:05:25,640
现在这里可能需要的所有进口，

126
00:05:25,640 --> 00:05:28,810
所有这些都将自动管理，

127
00:05:28,810 --> 00:05:32,120
通过 vue CLI 和该开发服务器，

128
00:05:32,120 --> 00:05:36,000
所以我们现在不需要编辑这个 HTML 文件。

129
00:05:36,000 --> 00:05:38,890
相反，我们在这里有那个源文件夹。

130
00:05:38,890 --> 00:05:42,640
该源文件夹包含 JavaScript 代码

131
00:05:42,640 --> 00:05:44,470
我们要写

132
00:05:44,470 --> 00:05:47,600
所以它最后包含了我们的vue代码，

133
00:05:47,600 --> 00:05:49,340
值得仔细看看。

134
00:05:49,340 --> 00:05:50,720
因为你已经可以告诉

135
00:05:50,720 --> 00:05:53,050
这里有一些奇怪的文件，

136
00:05:53,050 --> 00:05:55,650
例如，一个 .vue 文件。

137
00:05:55,650 --> 00:05:57,033
那是怎么回事？