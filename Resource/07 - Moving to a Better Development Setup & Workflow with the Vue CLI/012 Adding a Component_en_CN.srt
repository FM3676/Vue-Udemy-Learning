1
00:00:02,290 --> 00:00:04,970
所以现在让我们添加我们的第一个组件

2
00:00:04,970 --> 00:00:08,420
因为这只是我们的主要 Vue 应用程序。

3
00:00:08,420 --> 00:00:11,900
但是我之前在组件介绍模块中提到过，

4
00:00:11,900 --> 00:00:14,180
在 Vue 中你两者都有。

5
00:00:14,180 --> 00:00:18,240
你有 Vue 应用程序和 Vue 组件。

6
00:00:18,240 --> 00:00:22,580
每个组件都像一个迷你应用程序，你刚刚拥有

7
00:00:22,580 --> 00:00:25,290
组合多个组件的可能性

8
00:00:25,290 --> 00:00:28,940
进入一个应用程序并最终覆盖

9
00:00:28,940 --> 00:00:30,370
在下一个模块中。

10
00:00:30,370 --> 00:00:31,530
那些小程序，

11
00:00:31,530 --> 00:00:34,750
这些组件也将能够相互通信

12
00:00:34,750 --> 00:00:38,270
你将能够构建复杂的用户界面

13
00:00:38,270 --> 00:00:41,820
通过将不同的组件组合在一起。

14
00:00:41,820 --> 00:00:45,270
现在，您创建一个新文件夹是一个惯例

15
00:00:45,270 --> 00:00:48,260
然后折叠另一个名为 components 的文件

16
00:00:48,260 --> 00:00:51,683
和你的源文件夹来保存你的组件。

17
00:00:53,540 --> 00:00:57,250
只是为了说明这些现在是组件

18
00:00:57,250 --> 00:00:59,423
而不仅仅是任何 Vue 应用程序。

19
00:01:00,430 --> 00:01:01,263
现在在这里，

20
00:01:01,263 --> 00:01:06,263
我要添加我的新 FriendContact.vue 文件来保存

21
00:01:06,360 --> 00:01:08,180
朋友联系组件，

22
00:01:08,180 --> 00:01:09,480
我想创建的。

23
00:01:09,480 --> 00:01:12,320
你可能还记得那是我们创建的组件

24
00:01:12,320 --> 00:01:14,453
在组件介绍模块中。

25
00:01:15,490 --> 00:01:17,930
现在，如果我们看一下文件名，

26
00:01:17,930 --> 00:01:19,830
就像 app.vue 一样，

27
00:01:19,830 --> 00:01:22,790
我想弄清楚这个文件里面有什么。

28
00:01:22,790 --> 00:01:24,830
它将成为其他方面的一个组成部分，

29
00:01:24,830 --> 00:01:26,930
它不会在组件文件夹中，

30
00:01:26,930 --> 00:01:28,330
但它将是组件

31
00:01:28,330 --> 00:01:31,520
用于显示朋友联系人。

32
00:01:31,520 --> 00:01:33,710
你可以随便命名。

33
00:01:33,710 --> 00:01:36,400
都可以命名它，只是联系。

34
00:01:36,400 --> 00:01:39,320
但是因为我打算命名组件

35
00:01:39,320 --> 00:01:42,590
自定义 HTML 元素 FriendContact，

36
00:01:42,590 --> 00:01:45,160
我也想反映这一点和文件名。

37
00:01:45,160 --> 00:01:47,720
你也可以这样命名。

38
00:01:47,720 --> 00:01:50,910
这就是所谓的 cab up case 命名约定，

39
00:01:50,910 --> 00:01:55,280
但更常见的是使用这种 PacalCase 命名，

40
00:01:55,280 --> 00:01:57,130
你有一个词

41
00:01:57,130 --> 00:01:59,580
可能由多个单词组成，

42
00:01:59,580 --> 00:02:02,020
每个单词的开头，

43
00:02:02,020 --> 00:02:04,110
包括单词里面的单词

44
00:02:04,110 --> 00:02:05,623
带有大写字母。

45
00:02:07,040 --> 00:02:09,990
现在在 FriendContact.vue 中，

46
00:02:09,990 --> 00:02:11,570
因为它是一个 Vue 文件，

47
00:02:11,570 --> 00:02:14,940
我们可以在这里再次创建我们的模板区域

48
00:02:15,950 --> 00:02:20,923
还有我们的脚本区域，就像以前一样。

49
00:02:22,390 --> 00:02:24,530
再一次，在这个脚本区域，

50
00:02:24,530 --> 00:02:28,000
我将导出一个默认对象。

51
00:02:28,000 --> 00:02:31,710
这将是该组件的配置对象。

52
00:02:31,710 --> 00:02:33,130
因为记住，

53
00:02:33,130 --> 00:02:36,120
应用程序组件就像一个小型 Vue 应用程序。

54
00:02:36,120 --> 00:02:38,490
它采用相同的配置对象。

55
00:02:38,490 --> 00:02:40,653
所以我们当然需要导出一个。

56
00:02:42,490 --> 00:02:45,120
现在在组件介绍模块中，

57
00:02:45,120 --> 00:02:48,700
然后我们在这里添加了一个模板键来定义

58
00:02:48,700 --> 00:02:52,760
这个组件的 HTML 代码在一个字符串中。

59
00:02:52,760 --> 00:02:54,370
我们不再需要这样做了。

60
00:02:54,370 --> 00:02:56,370
我们现在得到了这个模板区域

61
00:02:56,370 --> 00:02:58,720
在 Vue 文件的 FriendContact 中。

62
00:02:58,720 --> 00:03:01,950
这正是我们使用这些 .vue 文件的原因。

63
00:03:01,950 --> 00:03:05,530
它使创建此类组件更加方便

64
00:03:05,530 --> 00:03:07,450
并定义了他们的模板。

65
00:03:07,450 --> 00:03:10,660
我们不再需要在 JavaScript 字符串中执行此操作，

66
00:03:10,660 --> 00:03:14,416
我们没有自动完成的地方，实际上，

67
00:03:14,416 --> 00:03:17,030
真的只是不好玩。

68
00:03:17,030 --> 00:03:18,170
所以在这里，

69
00:03:18,170 --> 00:03:21,456
我'我要创建我的组件标记。

70
00:03:21,456 --> 00:03:23,410
这就是我使用的相同标记

71
00:03:23,410 --> 00:03:27,030
在组件中，介绍模块，我们的列表项，

72
00:03:27,030 --> 00:03:31,880
在那里和我输出的h2标签

73
00:03:31,880 --> 00:03:34,263
朋友的名字，

74
00:03:35,330 --> 00:03:39,443
然后下面还有一个按钮，

75
00:03:40,770 --> 00:03:45,770
我说显示细节的地方，

76
00:03:46,910 --> 00:03:48,970
我们很快就会使这种动态

77
00:03:49,980 --> 00:03:53,110
然后是一个嵌套的无序列表

78
00:03:54,110 --> 00:03:55,053
像这样，

79
00:03:56,990 --> 00:03:58,470
哎呀，像这样，

80
00:03:58,470 --> 00:04:01,240
然后我们必须列出项目

81
00:04:01,240 --> 00:04:02,470
一个为电话号码，

82
00:04:02,470 --> 00:04:04,610
一个用于电子邮件地址，

83
00:04:04,610 --> 00:04:07,973
在这里我有一个很强的标签，我说电话，

84
00:04:09,810 --> 00:04:14,193
然后在这里我们输出friend.phone，

85
00:04:15,140 --> 00:04:19,910
在第二个列表元素中，我们说电子邮件

86
00:04:21,310 --> 00:04:25,100
然后我们输出friend.email。

87
00:04:25,100 --> 00:04:27,430
这与我们之前使用的标记相同

88
00:04:27,430 --> 00:04:29,603
在组件介绍模块中。

89
00:04:30,650 --> 00:04:31,820
现在为了这个工作，

90
00:04:31,820 --> 00:04:34,728
我们需要在这里再次添加数据字段

91
00:04:34,728 --> 00:04:37,450
并返回该组件的一些数据，

92
00:04:37,450 --> 00:04:39,890
现在特定于该组件，

93
00:04:39,890 --> 00:04:41,740
并且仅限于该组件。

94
00:04:41,740 --> 00:04:46,040
所以这与我们的主要 Vue 应用程序数据无关。

95
00:04:46,040 --> 00:04:49,570
那里我们有细节或可见的财产，

96
00:04:49,570 --> 00:04:51,820
最初是错误的，

97
00:04:51,820 --> 00:04:54,650
我们将用它来使这个按钮工作

98
00:04:54,650 --> 00:04:56,163
并切换了这个列表。

99
00:04:57,060 --> 00:05:00,040
我们有一个虚拟的朋友财产，

100
00:05:00,040 --> 00:05:02,020
稍后将替换，

101
00:05:02,020 --> 00:05:03,810
但目前在哪里

102
00:05:03,810 --> 00:05:07,180
我将只存储手册，以便

103
00:05:07,180 --> 00:05:08,480
我们可以在这里输出一些东西。

104
00:05:08,480 --> 00:05:11,760
不过，这也是以后会改变的。

105
00:05:11,760 --> 00:05:14,620
现在我们还需要在这里添加方法

106
00:05:14,620 --> 00:05:16,260
在我们的冲突对象中

107
00:05:16,260 --> 00:05:19,710
并在此处添加切换详细信息方法

108
00:05:21,610 --> 00:05:24,240
设置此详细信息可用

109
00:05:24,240 --> 00:05:25,990
他们目前不是。

110
00:05:25,990 --> 00:05:27,710
在这里我已经得到

111
00:05:27,710 --> 00:05:30,142
更好的 IDE 自动完成

112
00:05:30,142 --> 00:05:33,740
仅仅因为我们在这样一个 .vue 文件中

113
00:05:33,740 --> 00:05:36,530
我们安装了虚拟扩展。

114
00:05:36,530 --> 00:05:39,640
所以这已经是行动中的第一个优势。

115
00:05:39,640 --> 00:05:42,520
我们刚刚通过切换到这个项目设置，

116
00:05:42,520 --> 00:05:44,653
有了这个额外的视图扩展。

117
00:05:46,380 --> 00:05:50,490
现在我们可以在这里连接我们的模板

118
00:05:50,490 --> 00:05:53,460
并向按钮添加点击事件侦听器

119
00:05:53,460 --> 00:05:57,320
我们触发切换细节和

120
00:05:57,320 --> 00:06:01,070
在前进列表中添加 V=if 并检查

121
00:06:01,070 --> 00:06:03,660
如果细节可见是真的

122
00:06:03,660 --> 00:06:05,423
并且只向我们展示它是否属实。

123
00:06:06,600 --> 00:06:10,260
现在我们已经完成了朋友联系组件。

124
00:06:10,260 --> 00:06:13,360
现在我们按照您学习的方式注册它

125
00:06:13,360 --> 00:06:16,290
在 Vue 组件介绍模块中。

126
00:06:16,290 --> 00:06:20,060
在 main.js 中，我们创建了我们的应用程序。

127
00:06:20,060 --> 00:06:23,070
我们可以将这个应用程序存储在一个常量中

128
00:06:23,070 --> 00:06:27,310
并在这个应用程序上调用 mount，

129
00:06:27,310 --> 00:06:30,283
但是我们也可以在这里调用组件方法。

130
00:06:32,170 --> 00:06:33,160
再次，在这里，

131
00:06:33,160 --> 00:06:35,800
顺便说一句，我现在正在自动完成，

132
00:06:35,800 --> 00:06:38,670
IDE向我建议有一个组件方法

133
00:06:38,670 --> 00:06:42,270
它甚至告诉我应该提供哪些论据。

134
00:06:42,270 --> 00:06:45,610
并且我们提供姓名好友联系方式。

135
00:06:45,610 --> 00:06:47,000
作为第二个论点，

136
00:06:47,000 --> 00:06:49,930
此组件的冲突对象，

137
00:06:49,930 --> 00:06:52,070
它位于不同的文件中

138
00:06:52,070 --> 00:06:54,320
因此需要进口。

139
00:06:54,320 --> 00:06:58,810
所以我正在进口FriendContact 来自 ./

140
00:06:58,810 --> 00:07:01,090
现在我们需要进入组件文件夹

141
00:07:01,090 --> 00:07:04,103
在那里，我们有 FriendContact.vue。

142
00:07:05,794 --> 00:07:07,952
这就是我们这里需要的导入路径

143
00:07:07,952 --> 00:07:10,590
联系您文件的朋友联系人，

144
00:07:10,590 --> 00:07:12,360
和朋友联系。

145
00:07:12,360 --> 00:07:13,640
现在，再次，最后，

146
00:07:13,640 --> 00:07:16,820
只是指向这个 JavaScript 对象，

147
00:07:16,820 --> 00:07:21,470
我们在朋友contact.vue文件中导出。

148
00:07:21,470 --> 00:07:24,240
这就是我们作为第二个参数传递的内容

149
00:07:24,240 --> 00:07:25,657
到组件方法。

150
00:07:26,500 --> 00:07:27,333
接着就，随即，

151
00:07:27,333 --> 00:07:30,750
我们在我们的应用程序中解锁朋友联系组件。

152
00:07:30,750 --> 00:07:34,410
所以我们解锁为自定义 HTML 元素。

153
00:07:34,410 --> 00:07:38,380
现在在我们前进列表中的应用程序视图中，

154
00:07:38,380 --> 00:07:42,900
我们可以根据需要随时添加朋友联系人。

155
00:07:42,900 --> 00:07:44,503
在这里我将编辑两次。

156
00:07:45,500 --> 00:07:47,200
如果我们全部保存，

157
00:07:47,200 --> 00:07:52,000
它会重建并在我们连接的页面上，

158
00:07:52,000 --> 00:07:54,310
我们将看到我们的组件。

159
00:07:54,310 --> 00:07:55,550
没有造型，

160
00:07:55,550 --> 00:07:58,300
因为目前缺少 CSS 代码，

161
00:07:58,300 --> 00:08:02,802
但我们看到了我们的组件，它和以前一样工作。

162
00:08:02,802 --> 00:08:05,270
当然，这样很丑。

163
00:08:05,270 --> 00:08:08,270
所以接下来让我们看看我们如何在这里添加样式

164
00:08:08,270 --> 00:08:09,650
在我们最终

165
00:08:09,650 --> 00:08:12,523
了解更多关于组件的新事物。