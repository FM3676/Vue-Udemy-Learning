1
00:00:02,170 --> 00:00:05,550
为此，我为你准备了一个全新的项目。

2
00:00:05,550 --> 00:00:09,400
你会发现它附在这个讲座中，只需下载它，

3
00:00:09,400 --> 00:00:12,400
提取文件夹并存储该文件夹

4
00:00:12,400 --> 00:00:15,830
您系统上的任何位置，就像您以前多次所做的那样。

5
00:00:15,830 --> 00:00:18,320
你会注意到一件重要的事情。

6
00:00:18,320 --> 00:00:22,100
这是我为您创建的项目

7
00:00:22,100 --> 00:00:24,070
使用 Vue CLI。

8
00:00:24,070 --> 00:00:26,770
因此，在这里，您不需要自己创建它。

9
00:00:26,770 --> 00:00:28,790
你可以只使用这个附加的。

10
00:00:28,790 --> 00:00:32,950
这是一个我用 Vue create 创建的项目。

11
00:00:32,950 --> 00:00:34,010
我附上，

12
00:00:34,010 --> 00:00:37,490
这样我们都使用相同的项目设置。

13
00:00:37,490 --> 00:00:40,920
现在在这里，你会注意到一些有趣的事情。

14
00:00:40,920 --> 00:00:43,300
源文件夹非常空。

15
00:00:43,300 --> 00:00:45,900
里面只有一个主JS文件

16
00:00:45,900 --> 00:00:48,370
内容不多。

17
00:00:48,370 --> 00:00:51,350
所以这里我没有查看代码，

18
00:00:51,350 --> 00:00:54,560
那里没有视图应用程序和视图组件。

19
00:00:54,560 --> 00:00:57,510
我是故意这样做的，这样我们就可以开始了

20
00:00:57,510 --> 00:01:00,850
一起，你会一步一步地学习，

21
00:01:00,850 --> 00:01:05,400
如何编写Vue代码以及如何添加Vue组件

22
00:01:05,400 --> 00:01:09,090
在这样一个全新的 Vue 项目中。

23
00:01:09,090 --> 00:01:11,160
除此之外，我们得到了公共文件夹

24
00:01:11,160 --> 00:01:13,080
使用索引 HTML 文件，

25
00:01:13,080 --> 00:01:15,793
我已经在上一个模块中解释过。

26
00:01:16,900 --> 00:01:18,950
现在开始编写代码，

27
00:01:18,950 --> 00:01:22,430
我们首先需要做两件事。

28
00:01:22,430 --> 00:01:26,340
第一个是我们安装所有依赖项

29
00:01:26,340 --> 00:01:27,500
这个项目的。

30
00:01:27,500 --> 00:01:31,200
所以包点Json文件中提到的依赖关系。

31
00:01:31,200 --> 00:01:35,670
这些依赖以及 D 开发依赖。

32
00:01:35,670 --> 00:01:39,140
因为附加文件夹 D 附加 sip 文件

33
00:01:39,140 --> 00:01:41,830
没有节点模块文件夹。

34
00:01:41,830 --> 00:01:43,800
不是因为忘记了，

35
00:01:43,800 --> 00:01:47,020
但因为它超级大而且 sip 文件

36
00:01:47,020 --> 00:01:49,830
将有数百兆字节大，

37
00:01:49,830 --> 00:01:51,780
如果我会添加它。

38
00:01:51,780 --> 00:01:54,530
太大了，没必要加

39
00:01:54,530 --> 00:01:58,420
因为你需要做的就是运行 NPM install

40
00:01:58,420 --> 00:02:00,430
在项目文件夹中。

41
00:02:00,430 --> 00:02:03,170
这是最简单的方法，

42
00:02:03,170 --> 00:02:04,760
在视觉工作室代码中，

43
00:02:04,760 --> 00:02:07,520
您应该在其中打开此附加文件夹。

44
00:02:07,520 --> 00:02:10,122
去终端，新终端。

45
00:02:11,009 --> 00:02:14,770
这将打开您的默认系统终端，

46
00:02:14,770 --> 00:02:18,170
您的默认系统命令提示符在这里

47
00:02:18,170 --> 00:02:21,330
作为视觉工作室代码的一部分。

48
00:02:21,330 --> 00:02:23,810
优点是不用切换

49
00:02:23,810 --> 00:02:26,450
到不同的屏幕，甚至更好，

50
00:02:26,450 --> 00:02:30,010
您已经导航到此文件夹。

51
00:02:30,010 --> 00:02:32,550
所以你不需要使用 CD 命令

52
00:02:32,550 --> 00:02:34,050
导航到其他地方。

53
00:02:34,050 --> 00:02:37,420
相反，这个终端已经被导航

54
00:02:37,420 --> 00:02:39,880
进入这个项目文件夹。

55
00:02:39,880 --> 00:02:41,840
因此在这个终端中，

56
00:02:41,840 --> 00:02:44,380
你现在应该运行 NPM install

57
00:02:44,380 --> 00:02:47,550
安装此项目的所有依赖项。

58
00:02:47,550 --> 00:02:51,080
每当你下载我的一个代码快照时，

59
00:02:51,080 --> 00:02:53,090
你会在整个课程中发现，

60
00:02:53,090 --> 00:02:56,760
如果你想运行我的代码，你也应该运行这个命令。

61
00:02:56,760 --> 00:03:00,500
因为任何讲座都附有所有代码快照

62
00:03:00,500 --> 00:03:02,853
将缺少节点模块文件夹。

63
00:03:04,210 --> 00:03:05,220
所以按 Enter，

64
00:03:05,220 --> 00:03:08,740
现在将下载所有必需的依赖项

65
00:03:08,740 --> 00:03:11,860
以及依赖关系的依赖关系。

66
00:03:11,860 --> 00:03:15,110
它会生成这些节点模块文件夹，

67
00:03:15,110 --> 00:03:17,860
并将所有依赖项存储在那里。

68
00:03:17,860 --> 00:03:20,383
所以让我们等待这个过程完成。

69
00:03:23,240 --> 00:03:26,270
完成后，我们得到了节点模块文件夹，

70
00:03:26,270 --> 00:03:28,580
我们现在准备开始

71
00:03:28,580 --> 00:03:30,493
运行我们的开发服务器。

72
00:03:31,500 --> 00:03:32,333
顺便一提，

73
00:03:32,333 --> 00:03:35,700
你可以忽略这个文件在这里改变了颜色。

74
00:03:35,700 --> 00:03:37,940
那只是因为我正在使用Git，

75
00:03:37,940 --> 00:03:40,360
还有一个版本控制系统，

76
00:03:40,360 --> 00:03:41,480
但你不需要使用它。

77
00:03:41,480 --> 00:03:42,630
所以你可以忽略它。

78
00:03:45,460 --> 00:03:50,220
因此，下一步，让我们现在运行 NPM run serve。

79
00:03:50,220 --> 00:03:52,850
这将启动这个开发脚本，

80
00:03:52,850 --> 00:03:54,910
它启动了 D 开发服务器。

81
00:03:54,910 --> 00:03:56,910
我在同一个终端做这个，

82
00:03:56,910 --> 00:03:59,270
我用于运行 NPM 安装。

83
00:03:59,270 --> 00:04:01,940
我是在这个项目文件夹中做的吗，

84
00:04:01,940 --> 00:04:04,520
这是你应该运行这个命令的地方。

85
00:04:04,520 --> 00:04:07,620
现在我们让开发服务器启动并运行

86
00:04:07,620 --> 00:04:11,160
我们应该如前所述保持它正常运行，

87
00:04:11,160 --> 00:04:13,260
只要我们在写代码。

88
00:04:13,260 --> 00:04:16,950
这确保了任何更改都会被拾取

89
00:04:16,950 --> 00:04:19,500
我们可以在服务页面上看到它们。

90
00:04:19,500 --> 00:04:23,020
服务页面甚至会自动重新加载

91
00:04:23,020 --> 00:04:25,340
每当我们改变任何东西时。

92
00:04:25,340 --> 00:04:27,240
因此，我们将继续运行

93
00:04:27,240 --> 00:04:28,740
它只会缩小一点

94
00:04:28,740 --> 00:04:31,520
这样它就不会占用太多空间。

95
00:04:31,520 --> 00:04:33,153
但我仍然会拥有它。

96
00:04:34,360 --> 00:04:36,770
现在我们可以访问本地主机 8080。

97
00:04:36,770 --> 00:04:39,530
这就是我们正在运行的 Vue 应用程序。

98
00:04:39,530 --> 00:04:42,680
正如您可以清楚地看到的，最初它是空的。

99
00:04:42,680 --> 00:04:44,440
这里什么都没有。

100
00:04:44,440 --> 00:04:46,560
原因很简单，

101
00:04:46,560 --> 00:04:48,910
好吧，我们这里什么都没有。

102
00:04:48,910 --> 00:04:51,410
我们刚刚得到这个主 JS 文件，

103
00:04:51,410 --> 00:04:55,890
它创建了一个没有任何配置的空视图应用程序。

104
00:04:55,890 --> 00:04:58,230
好了，既然我们都准备好了，

105
00:04:58,230 --> 00:05:01,010
让我们开始编写一些组件代码

106
00:05:01,010 --> 00:05:03,453
让我们更多地了解组件。