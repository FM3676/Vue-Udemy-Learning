1
00:00:02,370 --> 00:00:04,520
这就是我们可以使用计算的方式。

2
00:00:04,520 --> 00:00:06,680
让我回到那些输入。

3
00:00:06,680 --> 00:00:10,620
我提到事件监听和以前一样工作。

4
00:00:10,620 --> 00:00:13,640
您可以根据需要调用这些方法。

5
00:00:13,640 --> 00:00:17,410
您可以转发默认事件参数。

6
00:00:17,410 --> 00:00:19,790
如果您只是指向它会自动转发

7
00:00:19,790 --> 00:00:22,891
在方法中，您可以转发任何其他参数

8
00:00:22,891 --> 00:00:25,163
你的方法可能需要。

9
00:00:26,250 --> 00:00:29,500
但你也可以使用我们的核心 vue 功能

10
00:00:29,500 --> 00:00:31,040
使用组合 API。

11
00:00:31,040 --> 00:00:35,470
比如V-model添加双向绑定

12
00:00:35,470 --> 00:00:37,990
如果你今年想要它。

13
00:00:37,990 --> 00:00:41,760
所以与其手动监听输入事件，

14
00:00:41,760 --> 00:00:43,960
并在这里调用我们的函数。

15
00:00:43,960 --> 00:00:45,910
当然延长了很好，

16
00:00:45,910 --> 00:00:50,380
但不仅如此，您还可以使用 V-model。

17
00:00:50,380 --> 00:00:54,580
这是很酷的事情，V-model 也接受 refs

18
00:00:54,580 --> 00:00:56,470
和反应值。

19
00:00:56,470 --> 00:00:58,910
所以在这里我可以绑定名字

20
00:00:58,910 --> 00:01:01,430
在这里我只是绑定那个姓氏，

21
00:01:01,430 --> 00:01:05,950
vue 会自动检测这些是 refs。

22
00:01:05,950 --> 00:01:08,770
它会更新值属性

23
00:01:08,770 --> 00:01:11,273
每当您输入这些字段时。

24
00:01:12,240 --> 00:01:16,730
所以你不绑定点值，相反，如前所述，

25
00:01:16,730 --> 00:01:19,420
在模板中，使用 ref 时，

26
00:01:19,420 --> 00:01:23,240
您将始终像这样使用 ref 而无需钻孔

27
00:01:23,240 --> 00:01:24,800
进入价值属性。

28
00:01:24,800 --> 00:01:27,743
Vue 会在幕后为你做这件事。

29
00:01:29,160 --> 00:01:30,930
因此，我们绑定了名字

30
00:01:30,930 --> 00:01:33,580
和姓在这里，但如果我们保存它，我们会看到

31
00:01:33,580 --> 00:01:35,160
它不会工作。

32
00:01:35,160 --> 00:01:37,200
如果我重新加载，我已经收到警告。

33
00:01:37,200 --> 00:01:40,900
如果我在这里输入，我们在屏幕上看不到任何更新。

34
00:01:40,900 --> 00:01:43,350
警告是该属性的姓氏

35
00:01:43,350 --> 00:01:47,170
在渲染期间访问过，但未定义。

36
00:01:47,170 --> 00:01:48,730
等什么？

37
00:01:48,730 --> 00:01:50,780
它在这里定义。

38
00:01:50,780 --> 00:01:55,122
嗯，它是在设置中定义的，我们在模板中使用它，

39
00:01:55,122 --> 00:01:57,440
但缺少一件事。

40
00:01:57,440 --> 00:01:59,800
我们不会将它暴露给模板。

41
00:01:59,800 --> 00:02:04,236
无论您想在模板中使用什么，都需要成为其中的一部分

42
00:02:04,236 --> 00:02:07,610
该对象，您在设置结束时返回。

43
00:02:07,610 --> 00:02:11,203
在这里，我们不返回名字和姓氏。

44
00:02:12,060 --> 00:02:16,120
我们正在返回旧的更新功能，

45
00:02:16,120 --> 00:02:18,260
但我们实际上不再使用这些了，

46
00:02:18,260 --> 00:02:20,240
所以我们甚至不能删除它们。

47
00:02:20,240 --> 00:02:23,820
相反，我们现在应该公开名字

48
00:02:23,820 --> 00:02:26,160
和点和我们的名字或参考。

49
00:02:26,160 --> 00:02:29,470
或者使用简写，如果我们使用相同的键名

50
00:02:29,470 --> 00:02:31,630
正如我们对变量名所做的那样，

51
00:02:31,630 --> 00:02:33,653
并公开姓氏。

52
00:02:34,800 --> 00:02:38,510
所以我们需要暴露这两个 ref

53
00:02:38,510 --> 00:02:40,190
以我们选择的任何名称，

54
00:02:40,190 --> 00:02:42,550
例如，在相同的名称下，

55
00:02:42,550 --> 00:02:44,423
这样我们就可以在这里访问它们。

56
00:02:45,950 --> 00:02:48,870
现在有了这个，如果我们保存并重新加载，

57
00:02:48,870 --> 00:02:50,430
警告消失了。

58
00:02:50,430 --> 00:02:55,240
现在你会看到双向绑定和以前一样

59
00:02:55,240 --> 00:02:56,483
这里有参考。