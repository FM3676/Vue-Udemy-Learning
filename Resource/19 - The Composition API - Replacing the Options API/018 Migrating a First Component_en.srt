1
00:00:02,200 --> 00:00:03,550
Were you successful?

2
00:00:03,550 --> 00:00:05,130
In case you try this on your own

3
00:00:05,130 --> 00:00:06,990
and you succeeded, great job.

4
00:00:06,990 --> 00:00:08,760
In case you face some problems,

5
00:00:08,760 --> 00:00:11,040
well, that is no problem at all.

6
00:00:11,040 --> 00:00:13,860
We just got started with the Composition API.

7
00:00:13,860 --> 00:00:15,500
So it is absolutely normal

8
00:00:15,500 --> 00:00:17,940
that you're maybe not 100% sure

9
00:00:17,940 --> 00:00:19,813
about all the concepts yet.

10
00:00:20,910 --> 00:00:25,590
Now we'll migrate this QD Composition API together.

11
00:00:25,590 --> 00:00:28,970
And I will start in App Vue.

12
00:00:28,970 --> 00:00:31,530
App Vue is a very simple component,

13
00:00:31,530 --> 00:00:33,340
it has a very simple template,

14
00:00:33,340 --> 00:00:36,560
where I in the end just use to overall components

15
00:00:36,560 --> 00:00:39,260
and pass data to those components.

16
00:00:39,260 --> 00:00:42,330
And then we got two pieces of data here,

17
00:00:42,330 --> 00:00:44,409
the currently selectedUser,

18
00:00:44,409 --> 00:00:47,390
when we select a user here to view the project

19
00:00:47,390 --> 00:00:49,550
and the activeUsers,

20
00:00:49,550 --> 00:00:53,220
which simply are our users which we want to display.

21
00:00:53,220 --> 00:00:57,980
And the activeUsers are populated with some dummy User_Data,

22
00:00:57,980 --> 00:01:00,910
which is coming from the dummy data JavaScript file,

23
00:01:00,910 --> 00:01:03,660
in there, I'm simply exporting a long array,

24
00:01:03,660 --> 00:01:06,570
and I just outsourced this into a separate file

25
00:01:06,570 --> 00:01:09,020
so that I don't have to as long array

26
00:01:09,020 --> 00:01:10,740
in my App Vue file.

27
00:01:10,740 --> 00:01:12,240
Of course, that could be data

28
00:01:12,240 --> 00:01:13,680
which be fetched from a server,

29
00:01:13,680 --> 00:01:17,217
in reality, here, it's just this dummy User_Data.

30
00:01:18,340 --> 00:01:21,410
So in order to migrate this component

31
00:01:21,410 --> 00:01:23,200
to the Composition API,

32
00:01:23,200 --> 00:01:25,300
in the end, we will replace the data

33
00:01:25,300 --> 00:01:29,480
and the methods option with the new setup option,

34
00:01:29,480 --> 00:01:31,860
because that's what you learned in this module.

35
00:01:31,860 --> 00:01:33,310
The setup option,

36
00:01:33,310 --> 00:01:37,600
this setup method is the key to using the Composition API,

37
00:01:37,600 --> 00:01:41,230
because in there you set up your component,

38
00:01:41,230 --> 00:01:44,160
the data you want to be able to use in your template,

39
00:01:44,160 --> 00:01:46,950
and also all the functions that should be callable

40
00:01:46,950 --> 00:01:47,853
and so on.

41
00:01:49,090 --> 00:01:51,120
And here we got two pieces of data,

42
00:01:51,120 --> 00:01:54,350
our activeUsers, and our selectedUser.

43
00:01:54,350 --> 00:01:57,290
So now we can make our first decision

44
00:01:57,290 --> 00:01:59,550
on how we want to manage that data.

45
00:01:59,550 --> 00:02:02,140
We could manage that data in an object,

46
00:02:02,140 --> 00:02:04,480
and then we can create that object

47
00:02:04,480 --> 00:02:08,009
either as a ref or with the reactive function

48
00:02:08,009 --> 00:02:09,169
as you learned,

49
00:02:09,169 --> 00:02:12,985
or we managed two separate pieces of data,

50
00:02:12,985 --> 00:02:15,913
selectedUser, and this User_Data array.

51
00:02:16,770 --> 00:02:18,710
It's up to you, what you want to do,

52
00:02:18,710 --> 00:02:21,570
I will actually go forward to separated data.

53
00:02:21,570 --> 00:02:24,600
So I will import from Vue

54
00:02:24,600 --> 00:02:27,580
and I will import is ref function,

55
00:02:27,580 --> 00:02:30,890
because I wanna create two separate refs here.

56
00:02:30,890 --> 00:02:32,660
Again, this is just want to approach,

57
00:02:32,660 --> 00:02:36,270
and if you want to manage one object with reactive maybe,

58
00:02:36,270 --> 00:02:38,330
that is fine as well.

59
00:02:38,330 --> 00:02:40,880
But I will go forward is ref here

60
00:02:40,880 --> 00:02:42,360
or for these two refs,

61
00:02:42,360 --> 00:02:45,363
and then we have to selectedUser here,

62
00:02:46,230 --> 00:02:50,110
where I create a new ref where the initial value is null,

63
00:02:50,110 --> 00:02:54,260
and then we have the activeUsers also ref,

64
00:02:54,260 --> 00:02:56,537
where I pass in my User_Data.

65
00:02:58,070 --> 00:02:59,700
Now actually, by the way,

66
00:02:59,700 --> 00:03:03,210
User_Data, this doesn't need to be a ref,

67
00:03:03,210 --> 00:03:04,910
because in this entire component

68
00:03:04,910 --> 00:03:08,970
I got no logic for changing activeUsers.

69
00:03:08,970 --> 00:03:10,760
And if you never change data,

70
00:03:10,760 --> 00:03:13,050
this probably doesn't need to be a ref

71
00:03:13,050 --> 00:03:16,130
because Vue doesn't need to know about any changes then

72
00:03:16,130 --> 00:03:18,020
if there are no changes.

73
00:03:18,020 --> 00:03:22,410
So actually, activeUsers could also just be managed

74
00:03:22,410 --> 00:03:24,750
as regular data like this,

75
00:03:24,750 --> 00:03:27,123
because it's data that never changes.

76
00:03:28,180 --> 00:03:30,440
So I will not even turn this into a ref here

77
00:03:30,440 --> 00:03:33,870
to make it clear that we don't need a ref here.

78
00:03:33,870 --> 00:03:37,820
Well, and then we want to expose this to our template.

79
00:03:37,820 --> 00:03:40,500
So we returned as object in the setup method,

80
00:03:40,500 --> 00:03:42,070
which is a key concept.

81
00:03:42,070 --> 00:03:44,700
You always return in object in setup

82
00:03:44,700 --> 00:03:48,090
to tell Vue which features you could say,

83
00:03:48,090 --> 00:03:50,540
which constants and variables and functions

84
00:03:50,540 --> 00:03:53,720
from inside to set up method should be available

85
00:03:53,720 --> 00:03:55,240
in the template.

86
00:03:55,240 --> 00:03:58,033
And here, I wanna expose the selectedUser

87
00:03:59,330 --> 00:04:01,500
using this JavaScript shorthand,

88
00:04:01,500 --> 00:04:03,460
where instead of writing this,

89
00:04:03,460 --> 00:04:07,183
I write this and I expose my activeUsers.

90
00:04:08,917 --> 00:04:10,810
ActiveUsers can't change

91
00:04:10,810 --> 00:04:14,400
or Vue will not notice any changes since it isn't a ref.

92
00:04:14,400 --> 00:04:16,310
But of course this does not mean

93
00:04:16,310 --> 00:04:18,399
that we can't expose it to the template.

94
00:04:18,399 --> 00:04:19,663
We absolutely can.

95
00:04:22,150 --> 00:04:24,850
And was that we can get rid of the data method here

96
00:04:24,850 --> 00:04:26,300
and I will remove it here.

97
00:04:26,300 --> 00:04:28,010
You could, of course, all the commented out

98
00:04:28,010 --> 00:04:30,600
if you wanna see it in comparison.

99
00:04:30,600 --> 00:04:34,110
Now with that, we migrated our data.

100
00:04:34,110 --> 00:04:36,230
Now we all wanna migrate the method

101
00:04:36,230 --> 00:04:38,570
because right now this method wouldn't work.

102
00:04:38,570 --> 00:04:41,590
We try to work with this selectedUser

103
00:04:41,590 --> 00:04:44,040
and this property doesn't exist anymore

104
00:04:44,040 --> 00:04:46,290
because I just deleted data.

105
00:04:46,290 --> 00:04:48,400
As a side note, theoretically,

106
00:04:48,400 --> 00:04:52,050
you can use data methods and set up side by side,

107
00:04:52,050 --> 00:04:53,480
if there is some data

108
00:04:53,480 --> 00:04:55,440
and functionality you wanna manage

109
00:04:55,440 --> 00:04:56,890
with the Composition API,

110
00:04:56,890 --> 00:04:59,200
and other data and functionality

111
00:04:59,200 --> 00:05:02,100
you wanna manage with the options API.

112
00:05:02,100 --> 00:05:04,430
So even inside of the same component,

113
00:05:04,430 --> 00:05:06,710
you could mix those concepts.

114
00:05:06,710 --> 00:05:09,900
In reality, I would say you will typically migrate

115
00:05:09,900 --> 00:05:12,920
an entire component to the Composition API

116
00:05:12,920 --> 00:05:16,410
or stick to the options API and not mix it,

117
00:05:16,410 --> 00:05:18,433
but theoretically, you could mix it.

118
00:05:19,440 --> 00:05:22,030
Anyways, here I wanna migrate everything.

119
00:05:22,030 --> 00:05:24,920
So therefore in setup, we can define a function,

120
00:05:24,920 --> 00:05:27,390
maybe keep the name selectUser,

121
00:05:27,390 --> 00:05:31,010
expect to get the user ID as argument here,

122
00:05:31,010 --> 00:05:36,010
and then set selectedUser.value equal to,

123
00:05:37,560 --> 00:05:39,230
well, basically this logic.

124
00:05:39,230 --> 00:05:42,310
So I can copy this except for this keyword,

125
00:05:42,310 --> 00:05:45,680
and find the user with that ID in my activeUsers

126
00:05:45,680 --> 00:05:48,523
and set my selectedUser equal to that user.

127
00:05:49,960 --> 00:05:52,670
And now we can also get rid of methods here

128
00:05:52,670 --> 00:05:56,203
and expose selectUser, no selectUser like this

129
00:05:58,310 --> 00:05:59,890
to the template as well.

130
00:05:59,890 --> 00:06:02,390
So did our event binding here,

131
00:06:02,390 --> 00:06:04,730
here sorry, still works.

132
00:06:04,730 --> 00:06:06,200
And that should be all.

133
00:06:06,200 --> 00:06:08,650
If we saved this and reload,

134
00:06:08,650 --> 00:06:12,650
this application works just as it does before,

135
00:06:12,650 --> 00:06:15,340
because as I also mentioned throughout this module,

136
00:06:15,340 --> 00:06:18,270
you can absolutely combine components

137
00:06:18,270 --> 00:06:20,160
that use the options API,

138
00:06:20,160 --> 00:06:23,030
which in this case are all our components

139
00:06:23,030 --> 00:06:26,120
and components that use the Composition API,

140
00:06:26,120 --> 00:06:28,120
the App Vue component in this case.

141
00:06:28,120 --> 00:06:29,840
This is absolutely possible

142
00:06:29,840 --> 00:06:31,890
and that's exactly what we're doing here.

143
00:06:33,090 --> 00:06:36,320
So with that, we migrated our first component,

144
00:06:36,320 --> 00:06:38,503
let's now move on to the next one.

