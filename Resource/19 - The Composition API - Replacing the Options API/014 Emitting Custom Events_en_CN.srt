1
00:00:02,140 --> 00:00:03,910
现在，设置不只是得到

2
00:00:03,910 --> 00:00:05,689
这个道具参数。

3
00:00:05,689 --> 00:00:07,760
它还获得了第二个参数。

4
00:00:07,760 --> 00:00:11,280
第二个参数总是由 vue 输入

5
00:00:11,280 --> 00:00:14,200
这就是上下文对象。

6
00:00:14,200 --> 00:00:15,807
我们可以在这里 console.log(context)

7
00:00:16,750 --> 00:00:18,200
看看里面有什么。

8
00:00:19,740 --> 00:00:22,040
如果我保存并重新加载，

9
00:00:22,040 --> 00:00:23,530
它看起来像一个空物体，

10
00:00:23,530 --> 00:00:24,750
但实际上如果我们检查它，

11
00:00:24,750 --> 00:00:27,600
我们在那里看到了三个重要的属性。

12
00:00:27,600 --> 00:00:30,463
属性、发射和插槽。

13
00:00:31,590 --> 00:00:35,760
attrs 是您可能拥有的任何属性。

14
00:00:35,760 --> 00:00:39,580
因此，如果您设置类似的内容，

15
00:00:39,580 --> 00:00:43,030
关于用户数据的课程

16
00:00:43,030 --> 00:00:46,140
并且 class 不是您在此处定义的道具，

17
00:00:46,140 --> 00:00:49,300
然后它自动成为一个跌倒的道具。

18
00:00:49,300 --> 00:00:51,630
你可以说这是一个可选的道具。

19
00:00:51,630 --> 00:00:54,090
在这种情况下，实际上，如果我重新加载，

20
00:00:54,090 --> 00:00:57,240
我会收到警告，因为行为有问题

21
00:00:57,240 --> 00:01:00,500
如果您有多个路由节点，则实际上不起作用。

22
00:01:00,500 --> 00:01:05,373
但是，如果我在这里将它包装在一个路由节点中，就像这样，

23
00:01:07,240 --> 00:01:09,680
然后重新加载，警告消失了

24
00:01:09,680 --> 00:01:13,230
现在在 attrs 下，如果我们检查目标，

25
00:01:13,230 --> 00:01:16,670
我们在这里看到我们的类带有测试值。

26
00:01:16,670 --> 00:01:19,070
这就是它的属性，

27
00:01:19,070 --> 00:01:21,120
你没有定义为属性，

28
00:01:21,120 --> 00:01:22,883
这只是失败了。

29
00:01:23,940 --> 00:01:27,460
插槽可以让您访问任何插槽数据

30
00:01:27,460 --> 00:01:29,420
你可能有你的组件。

31
00:01:29,420 --> 00:01:31,690
这当然是一个没有插槽的组件

32
00:01:31,690 --> 00:01:33,650
但如果你在那里有一个插槽，

33
00:01:33,650 --> 00:01:36,430
您可以以编程方式访问插槽数据，

34
00:01:36,430 --> 00:01:39,203
通过上下文中的那个槽属性。

35
00:01:40,270 --> 00:01:41,990
而emit是一个函数，

36
00:01:41,990 --> 00:01:44,680
您可以调用它来发出自定义事件

37
00:01:44,680 --> 00:01:47,090
因为当然，这也是

38
00:01:47,090 --> 00:01:48,720
你经常需要做的。

39
00:01:48,720 --> 00:01:51,460
使用选项 API，

40
00:01:51,460 --> 00:01:54,570
我们总是使用这个美元符号 $emit。

41
00:01:54,570 --> 00:01:56,230
现在，由于这个关键字，

42
00:01:56,230 --> 00:01:58,630
如您所知，此处不可用。

43
00:01:58,630 --> 00:02:02,610
此美元符号发出在 setup 方法中不可用。

44
00:02:02,610 --> 00:02:06,580
当然，您仍然可能有需要发出的代码。

45
00:02:06,580 --> 00:02:09,490
在这种情况下，您有上下文发出

46
00:02:09,490 --> 00:02:13,270
这就像这个发射一样工作。

47
00:02:13,270 --> 00:02:17,110
因此，例如，如果您有一个安全的数据自定义事件，

48
00:02:17,110 --> 00:02:19,310
有一些你想发出的数据，

49
00:02:19,310 --> 00:02:23,970
与此选项 API 语法等效的是

50
00:02:23,970 --> 00:02:27,553
这个语法在这里与上下文发出。

51
00:02:28,670 --> 00:02:29,860
我们这里不需要

52
00:02:29,860 --> 00:02:31,763
但值得意识到这一点。