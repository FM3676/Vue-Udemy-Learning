1
00:00:02,130 --> 00:00:06,230
现在，这就是组合 API 的核心。

2
00:00:06,230 --> 00:00:10,090
我们在上一课中介绍了核心功能，

3
00:00:10,090 --> 00:00:14,250
参考和反应，计算，观察，

4
00:00:14,250 --> 00:00:18,260
并从模板内部调用函数。

5
00:00:18,260 --> 00:00:21,780
对我来说真正重要的是你意识到

6
00:00:21,780 --> 00:00:24,890
模板代码不会改变。

7
00:00:24,890 --> 00:00:29,780
我们仍然使用插值，我们仍然可以使用 v-bind。

8
00:00:29,780 --> 00:00:32,490
我们仍然准确地监听事件

9
00:00:32,490 --> 00:00:34,150
和我们之前做的一样。

10
00:00:34,150 --> 00:00:36,010
我们仍然可以使用 v-model。

11
00:00:36,010 --> 00:00:37,433
那都是一样的。

12
00:00:38,680 --> 00:00:42,350
我们可能拥有的其他选项，例如组件或道具，

13
00:00:42,350 --> 00:00:44,130
也不会改变。

14
00:00:44,130 --> 00:00:47,380
只是这里的逻辑和设置是新的，

15
00:00:47,380 --> 00:00:49,870
正如你所了解的，它取代了，

16
00:00:49,870 --> 00:00:52,563
数据、方法、计算和观察。

17
00:00:53,740 --> 00:00:57,520
现在，当然，还有很多其他的小事

18
00:00:57,520 --> 00:01:00,510
你必须知道在使用组合 API 时，

19
00:01:00,510 --> 00:01:05,030
您最终会遇到的一些问题和问题，

20
00:01:05,030 --> 00:01:07,870
切换时你必须知道如何解决

21
00:01:07,870 --> 00:01:11,560
从选项 API 到组合 API，

22
00:01:11,560 --> 00:01:14,930
这就是为什么我们也将应用于组合 API

23
00:01:14,930 --> 00:01:17,770
去一个更大的项目，看看所有这些

24
00:01:17,770 --> 00:01:19,923
特殊情况在行动。

25
00:01:21,010 --> 00:01:23,730
有几个特殊情况，

26
00:01:23,730 --> 00:01:27,670
不过，在我们深入研究项目之前，我想先介绍一下。

27
00:01:27,670 --> 00:01:29,010
所以在接下来的讲座中，

28
00:01:29,010 --> 00:01:31,900
我将深入探讨您应该了解的一些个别方面

29
00:01:31,900 --> 00:01:35,463
使用组合 API 时要注意。