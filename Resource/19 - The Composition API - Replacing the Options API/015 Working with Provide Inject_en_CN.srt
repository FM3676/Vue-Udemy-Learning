1
00:00:02,220 --> 00:00:04,300
现在我还有两个要介绍的功能

2
00:00:04,300 --> 00:00:05,950
使用组合 API。

3
00:00:05,950 --> 00:00:08,710
第一个是提供注入。

4
00:00:08,710 --> 00:00:11,190
我们没有在这里使用它，但是让我们说，

5
00:00:11,190 --> 00:00:15,290
而不是将年龄转发给用户数据

6
00:00:15,290 --> 00:00:18,790
通过年龄道具，在这里当然可以，

7
00:00:18,790 --> 00:00:20,930
实际上是推荐的方式，

8
00:00:20,930 --> 00:00:22,010
但不是那样做，

9
00:00:22,010 --> 00:00:25,170
假设我们想提供注入它。

10
00:00:25,170 --> 00:00:28,550
所以我从用户数据中删除了年龄属性。

11
00:00:28,550 --> 00:00:31,483
我还将它从 props 数组中删除，

12
00:00:32,540 --> 00:00:35,570
而现在，我想提供并注入它。

13
00:00:35,570 --> 00:00:40,570
使用 Options API，我们只是添加了这个提供选项，

14
00:00:41,260 --> 00:00:43,260
这可能是一个函数

15
00:00:43,260 --> 00:00:46,150
如果您还记得的话，我们会返回我们提供的对象。

16
00:00:46,150 --> 00:00:49,523
在那里，我们可以像这样提供我们的年龄。

17
00:00:52,100 --> 00:00:56,560
好吧，有了 Composition API，我们就有了等价物。

18
00:00:56,560 --> 00:01:00,883
我们可以从 Vue 导入提供。

19
00:01:02,330 --> 00:01:05,930
这是 Vue 框架暴露的另一个特性

20
00:01:05,930 --> 00:01:07,740
我们可以导入。

21
00:01:07,740 --> 00:01:11,340
并提供，就像这里的所有这些东西一样

22
00:01:11,340 --> 00:01:13,493
我们导入的，是一个函数。

23
00:01:14,970 --> 00:01:17,430
例如，我们可以在这里调用它，

24
00:01:17,430 --> 00:01:20,570
在我初始化我的 uAge 参考后，

25
00:01:20,570 --> 00:01:25,570
并通过传递两个参数来提供一个值。

26
00:01:26,880 --> 00:01:29,570
第一个是您选择的密钥。

27
00:01:29,570 --> 00:01:31,660
例如，用户年龄。

28
00:01:31,660 --> 00:01:34,870
然后第二个参数是实际值

29
00:01:34,870 --> 00:01:36,060
你想提供。

30
00:01:36,060 --> 00:01:38,913
所以在这里，uAge，这个 uAge 参考。

31
00:01:40,040 --> 00:01:42,060
既然我在这里提供了一个参考，

32
00:01:42,060 --> 00:01:44,700
以后会注入的地方

33
00:01:44,700 --> 00:01:46,990
会自动更新

34
00:01:46,990 --> 00:01:49,510
并收到有关年龄变化的通知，

35
00:01:49,510 --> 00:01:51,223
所以这是一件好事。

36
00:01:52,430 --> 00:01:55,220
所以现在我们像这样提供 userAge，

37
00:01:55,220 --> 00:01:57,570
现在我们唯一要做的另一件事

38
00:01:57,570 --> 00:02:01,110
我们必须去我们想注射的地方吗？

39
00:02:01,110 --> 00:02:03,100
在这种情况下，用户数据，

40
00:02:03,100 --> 00:02:07,620
现在我们在这里不使用注入选项。

41
00:02:07,620 --> 00:02:12,620
相反，我们从 Vue 导入注入函数，

42
00:02:14,930 --> 00:02:17,530
然后在这里，在设置方法中，

43
00:02:17,530 --> 00:02:22,530
我可以调用注入并使用与提供相同的密钥，

44
00:02:23,890 --> 00:02:28,223
所以就我而言，这里的 userAge，

45
00:02:29,150 --> 00:02:32,120
这会给我这个提供的价值。

46
00:02:32,120 --> 00:02:36,450
然后我可以将它存储在我选择的常量中。

47
00:02:36,450 --> 00:02:40,010
我在这里得到的将是我在这里提供的价值，

48
00:02:40,010 --> 00:02:42,120
所以在这种情况下，这个参考。

49
00:02:42,120 --> 00:02:45,220
所以在这里，年龄也将是一个参考。

50
00:02:45,220 --> 00:02:49,820
现在你不应该从那里改变年龄。

51
00:02:49,820 --> 00:02:53,080
这会起作用，但它会非常不可预测。

52
00:02:53,080 --> 00:02:55,340
作为强烈推荐，

53
00:02:55,340 --> 00:02:58,810
你应该只改变注入的值

54
00:02:58,810 --> 00:03:01,460
在您提供它们的地方。

55
00:03:01,460 --> 00:03:04,550
所以在这种情况下，在 App.vue 文件中。

56
00:03:04,550 --> 00:03:07,960
您绝对可以读取注入的值，

57
00:03:07,960 --> 00:03:11,830
或者在这种情况下，将其暴露给模板。

58
00:03:11,830 --> 00:03:16,140
在年龄键下暴露年龄，

59
00:03:16,140 --> 00:03:18,160
因此我们可以使用这个速记，

60
00:03:18,160 --> 00:03:21,180
现在年龄在模板中再次可用，

61
00:03:21,180 --> 00:03:23,540
即使它不再是道具了。

62
00:03:23,540 --> 00:03:26,627
但是如果我们保存它，你会看到这里的年龄，

63
00:03:26,627 --> 00:03:29,883
如果我单击更改年龄，它也会正确更新。

64
00:03:30,770 --> 00:03:34,350
这就是使用组合 API 提供注入。

65
00:03:34,350 --> 00:03:38,650
我认为它甚至更容易，代码更少

66
00:03:38,650 --> 00:03:40,403
与选项 API 相比。