1
00:00:02,120 --> 00:00:04,370
现在我们知道了如何使用路由

2
00:00:04,370 --> 00:00:06,040
使用组合 API。

3
00:00:06,040 --> 00:00:07,580
Vuex 呢？

4
00:00:07,580 --> 00:00:10,900
我们如何将它与组合 API 一起使用？

5
00:00:10,900 --> 00:00:12,730
为此，附上你找到另一个

6
00:00:12,730 --> 00:00:15,050
非常简单的虚拟项目。

7
00:00:15,050 --> 00:00:16,500
我们在那里有一个柜台和一个按钮，

8
00:00:16,500 --> 00:00:18,430
目前什么都不做，

9
00:00:18,430 --> 00:00:20,870
但这是使用组合 API 构建的。

10
00:00:20,870 --> 00:00:22,950
我的意思是，这些都是非常简单的组件，

11
00:00:22,950 --> 00:00:26,210
但我计划在那里使用组合 API。

12
00:00:26,210 --> 00:00:29,870
App.vue 文件非常简单明了，

13
00:00:29,870 --> 00:00:32,049
这里只有几个本地组件。

14
00:00:32,049 --> 00:00:34,620
然后在计数器中，我输出计数器，

15
00:00:34,620 --> 00:00:38,390
但我计划使用组合 API 获取计数器。

16
00:00:38,390 --> 00:00:40,900
目前我这里只有一个虚拟柜台，

17
00:00:40,900 --> 00:00:42,610
这永远不会改变。

18
00:00:42,610 --> 00:00:44,430
而在控制中心，

19
00:00:44,430 --> 00:00:47,300
我还计划用组合定义这个函数

20
00:00:47,300 --> 00:00:51,250
API，但目前，它什么也没做。

21
00:00:51,250 --> 00:00:53,367
现在，显然我们不需要 Vuex

22
00:00:53,367 --> 00:00:55,440
对于这个简单的应用程序。

23
00:00:55,440 --> 00:00:57,560
这个演示我们不需要 Vuex，

24
00:00:57,560 --> 00:01:01,366
但我想向您展示如何将 Vuex 与

25
00:01:01,366 --> 00:01:04,519
组合 API，以防您构建更复杂的

26
00:01:04,519 --> 00:01:06,930
需要 Vuex 的项目。

27
00:01:06,930 --> 00:01:08,750
那么这是如何工作的呢？

28
00:01:08,750 --> 00:01:12,320
在主 JS 中，我已经用 createStore 建立了一个商店，

29
00:01:12,320 --> 00:01:14,650
正如您在 Vuex 模块中所学到的。

30
00:01:14,650 --> 00:01:18,870
我有一个状态、突变、一个动作和一个吸气剂。

31
00:01:18,870 --> 00:01:20,970
我们现在如何利用那家商店，

32
00:01:20,970 --> 00:01:24,980
我已经在我的应用程序中使用这些组件？

33
00:01:24,980 --> 00:01:26,900
好吧，就像路由器一样，

34
00:01:26,900 --> 00:01:31,610
Vue 路由器为我们提供了自定义组合功能，

35
00:01:31,610 --> 00:01:34,810
我们可以在我们的设置方法中调用它

36
00:01:34,810 --> 00:01:36,630
使用路由功能。

37
00:01:36,630 --> 00:01:39,920
正如路由器所做的那样，Vuex 包有

38
00:01:39,920 --> 00:01:41,890
店里有类似的东西。

39
00:01:41,890 --> 00:01:43,640
所以在控制中心，

40
00:01:43,640 --> 00:01:47,450
我最终想在哪里分派增量操作。

41
00:01:47,450 --> 00:01:52,440
我可以从 Vuex 导入一些东西。

42
00:01:53,660 --> 00:01:57,870
那就是 useStore 钩子，

43
00:01:57,870 --> 00:02:00,140
或 useStore 可组合的。

44
00:02:00,140 --> 00:02:03,410
useStore 自定义组合功能，

45
00:02:03,410 --> 00:02:07,930
这意味着在 setup 方法内部执行。

46
00:02:07,930 --> 00:02:10,910
然后我们可以在这里调用useStore，

47
00:02:10,910 --> 00:02:13,460
我们得到的结果是访问...

48
00:02:13,460 --> 00:02:15,230
到 Vuex 商店，

49
00:02:15,230 --> 00:02:17,780
我们已将其附加到此应用程序中。

50
00:02:17,780 --> 00:02:22,780
所以 Vuex 商店，我们在我们的应用程序中使用。

51
00:02:23,530 --> 00:02:26,550
我们通过调用 useStore 来访问该商店

52
00:02:26,550 --> 00:02:27,623
设置里面。

53
00:02:28,530 --> 00:02:31,990
好吧，一旦我们获得访问权，它当然会很简单。

54
00:02:31,990 --> 00:02:34,480
就这样可以使用店铺、派遣

55
00:02:34,480 --> 00:02:37,230
然后派发动作。

56
00:02:37,230 --> 00:02:39,830
所以派出任何行动，就像在这种情况下，

57
00:02:39,830 --> 00:02:44,070
我们在这个商店注册的增量操作。

58
00:02:44,070 --> 00:02:47,220
然后你可以使用你了解的任何 Vuex 特性。

59
00:02:47,220 --> 00:02:50,330
模块、命名空间……所有这些都是可用的。

60
00:02:50,330 --> 00:02:54,310
你只需使用 useStore 来访问商店，

61
00:02:54,310 --> 00:02:57,010
而不是使用这个美元符号商店，

62
00:02:57,010 --> 00:02:59,300
如果你愿意，你会使用它

63
00:02:59,300 --> 00:03:01,223
使用选项 API。

64
00:03:02,300 --> 00:03:04,870
嗯，因此在柜台里也是一样的，

65
00:03:04,870 --> 00:03:08,740
我想在哪里访问存储在商店中的一些数据。

66
00:03:08,740 --> 00:03:13,740
我可以简单地从 Vuex 导入 useStore。

67
00:03:15,030 --> 00:03:19,353
然后，通过调用 useStore 来访问商店。

68
00:03:20,350 --> 00:03:23,610
之后，当我们想要得到一个计数器时

69
00:03:23,610 --> 00:03:26,080
取决于商店中的吸气剂，

70
00:03:26,080 --> 00:03:28,620
我们只需要创建一个计算变量，

71
00:03:28,620 --> 00:03:33,270
一个计算值，就像我们在选项 API 世界中所做的那样。

72
00:03:33,270 --> 00:03:38,040
因此，我们从 Vue 导入计算，

73
00:03:38,040 --> 00:03:41,590
然后计数器应该是一个计算值，

74
00:03:41,590 --> 00:03:43,250
通过调用计算，

75
00:03:43,250 --> 00:03:46,680
我们提供了一个函数，该函数将在任何时候执行

76
00:03:46,680 --> 00:03:48,690
它的依赖项之一发生了变化。

77
00:03:48,690 --> 00:03:50,240
在这个函数中，

78
00:03:50,240 --> 00:03:54,740
我们返回了 store.getters.counter，

79
00:03:54,740 --> 00:03:58,883
因为 counter 是我在这里定义的 getter 名称。

80
00:04:00,700 --> 00:04:03,640
并且每当计数器发生变化时，Vue 都会检测到这一点

81
00:04:03,640 --> 00:04:06,677
最后重新计算这个计算值，

82
00:04:06,677 --> 00:04:09,210
然后我们将其暴露给模板。

83
00:04:09,210 --> 00:04:12,520
既然你知道计算值是 refs，

84
00:04:12,520 --> 00:04:14,300
无论计数器发生什么变化，

85
00:04:14,300 --> 00:04:17,420
Vue 会注意到这一点，它会更新模板

86
00:04:17,420 --> 00:04:19,713
在我们使用柜台的地方。

87
00:04:20,700 --> 00:04:22,370
有了它，我们可以保存它，

88
00:04:22,370 --> 00:04:26,053
现在，如果我重新加载，您会看到这有效。

89
00:04:27,660 --> 00:04:30,120
这就是使用 Vuex 是多么容易，

90
00:04:30,120 --> 00:04:31,743
使用组合 API。