1
00:00:02,160 --> 00:00:04,980
这就是我们可以从选项 API 中走出来的方式

2
00:00:04,980 --> 00:00:06,920
到组合 API。

3
00:00:06,920 --> 00:00:10,890
数据被 refs 和响应式替换，

4
00:00:10,890 --> 00:00:14,080
方法替换为函数，

5
00:00:14,080 --> 00:00:15,570
您向模板公开的内容

6
00:00:15,570 --> 00:00:17,500
通过在该对象中返回它们，

7
00:00:17,500 --> 00:00:19,460
您在设置中返回。

8
00:00:19,460 --> 00:00:22,870
Computed 替换为计算函数，

9
00:00:22,870 --> 00:00:26,990
并且观察者被观察者函数取代。

10
00:00:26,990 --> 00:00:28,810
提供注入被替换

11
00:00:28,810 --> 00:00:31,283
具有提供和注入功能。

12
00:00:32,790 --> 00:00:35,250
现在还有一件事我想深入研究

13
00:00:35,250 --> 00:00:38,250
在我们将所有这些应用到更大的项目之前。

14
00:00:38,250 --> 00:00:41,130
这就是生命周期钩子。

15
00:00:41,130 --> 00:00:44,790
例如，我们有 beforeCreate

16
00:00:44,790 --> 00:00:47,560
并在选项 API 中创建，

17
00:00:47,560 --> 00:00:52,170
我们可以简单地将这些方法添加到我们的配置对象中。

18
00:00:52,170 --> 00:00:54,653
组合 API 看起来如何？

19
00:00:55,800 --> 00:00:57,340
使用组合 API，

20
00:00:57,340 --> 00:00:59,990
我们不添加那些生命周期钩子

21
00:00:59,990 --> 00:01:02,860
到我们的组件配置对象了，

22
00:01:02,860 --> 00:01:06,940
相反，我们有可以从 vue 导入的函数，

23
00:01:06,940 --> 00:01:09,840
您可以在 setup 方法中调用它。

24
00:01:09,840 --> 00:01:12,500
但是对于 beforeCreate 和 created

25
00:01:12,500 --> 00:01:14,450
实际上没有等价物，

26
00:01:14,450 --> 00:01:17,060
因为这里不需要这些钩子，

27
00:01:17,060 --> 00:01:21,080
因为setup方法基本上是同时运行的

28
00:01:21,080 --> 00:01:25,220
beforeCreate 和 created 运行在过去。

29
00:01:25,220 --> 00:01:27,340
所以 setup 替换了这些钩子。

30
00:01:27,340 --> 00:01:30,870
无论您在 created 或 beforeCreate 中做什么

31
00:01:30,870 --> 00:01:33,563
应该在设置方法本身中完成。

32
00:01:34,970 --> 00:01:38,680
现在对于 beforeMount 和mounted，它是不同的。

33
00:01:38,680 --> 00:01:43,380
我们有 onBeforeMount 和 onMounted 函数

34
00:01:43,380 --> 00:01:45,850
可以从 vue 导入。

35
00:01:45,850 --> 00:01:48,630
对于 beforeUpdate 和 updated 它是相似的

36
00:01:48,630 --> 00:01:51,570
beforeUnmount 和 unmounted 也是如此。

37
00:01:51,570 --> 00:01:55,110
这里我们有 onBeforeUnmount 和 onUnmounted。

38
00:01:55,110 --> 00:01:56,930
所以你在这里看到了一个模式。

39
00:01:56,930 --> 00:01:59,080
让我们也不要在代码中查看它。

40
00:02:00,130 --> 00:02:03,000
回到这里，假设在用户数据组件中，

41
00:02:03,000 --> 00:02:06,950
正如我提到的，我们现在不打算添加 created

42
00:02:06,950 --> 00:02:11,640
并在此处安装等等到我们的选项对象。

43
00:02:11,640 --> 00:02:14,800
相反，我们将在设置中添加它们

44
00:02:14,800 --> 00:02:17,530
通过导入所需的钩子。

45
00:02:17,530 --> 00:02:18,600
现在正如我提到的，

46
00:02:18,600 --> 00:02:21,990
没有 onBeforeCreate 等等，

47
00:02:21,990 --> 00:02:24,550
但是有一个onBeforeMount，

48
00:02:24,550 --> 00:02:26,653
有一个onMounted，onBeforeUpdate，onUpdated，

49
00:02:31,487 --> 00:02:35,403
和 onBeforeUnmount 以及 onUnmounted。

50
00:02:37,020 --> 00:02:40,020
我很快重组了它，使它更容易阅读。

51
00:02:40,020 --> 00:02:42,880
这些是生命周期钩子函数，

52
00:02:42,880 --> 00:02:44,723
我们可以从 vue 导入。

53
00:02:46,090 --> 00:02:48,540
现在我们如何在设置中使用它们？

54
00:02:48,540 --> 00:02:50,510
在设置中，您只需调用它们

55
00:02:50,510 --> 00:02:55,080
比如 onBeforeMount，像这样，

56
00:02:55,080 --> 00:02:57,300
然后你将一个函数传递给他们

57
00:02:57,300 --> 00:03:00,080
现在将执行此功能

58
00:03:00,080 --> 00:03:02,403
每当此生命周期挂钩到期时。

59
00:03:04,280 --> 00:03:07,090
所以在这里我可以控制台登录 beforeMount

60
00:03:08,280 --> 00:03:11,483
或 onBeforeMount，随心所欲。

61
00:03:12,540 --> 00:03:15,160
我们现在可以重复这一点。

62
00:03:15,160 --> 00:03:17,097
我们也有onMounted，

63
00:03:19,220 --> 00:03:21,547
所以在这里我将打印onMounted。

64
00:03:23,280 --> 00:03:25,503
我们还有onBeforeUpdate，

65
00:03:28,980 --> 00:03:31,143
所以我们打印onBeforeUpdate。

66
00:03:33,020 --> 00:03:36,410
我们有onUpdated，

67
00:03:36,410 --> 00:03:38,837
所以在这里我们可以打印onUpdated。

68
00:03:40,660 --> 00:03:42,873
我们有 onBeforeUnmount

69
00:03:45,280 --> 00:03:47,543
并在BeforeU 上打印挂载

70
00:03:48,830 --> 00:03:51,290
以及这里 onUnmounted

71
00:03:54,300 --> 00:03:56,730
哎呀，我的意思是 onUnmounted

72
00:03:58,400 --> 00:04:00,333
并在未安装时打印。

73
00:04:03,384 --> 00:04:06,230
如果我们现在全部保存并重新加载，

74
00:04:06,230 --> 00:04:09,830
我们在这里看到 onBeforeMount 和 onMounted，

75
00:04:09,830 --> 00:04:12,830
如果我清除控制台并单击更改年龄，

76
00:04:12,830 --> 00:04:15,210
我们还看到onBeforeUpdate，

77
00:04:15,210 --> 00:04:18,850
然后我们的观察者运行，然后 onUpdated 之后，

78
00:04:18,850 --> 00:04:21,399
将更新应用于模板后

79
00:04:21,399 --> 00:04:23,260
和真正的 DOM。

80
00:04:23,260 --> 00:04:24,550
好吧，对于卸载，

81
00:04:24,550 --> 00:04:26,870
我们需要摆脱用户数据，

82
00:04:26,870 --> 00:04:30,020
我们可以用 if 语句来做，

83
00:04:30,020 --> 00:04:31,740
例如，使用 v-if。

84
00:04:31,740 --> 00:04:35,460
如果我们现在在这里有一些可能会出错的条件，

85
00:04:35,460 --> 00:04:38,150
这个组件将从 DOM 中移除

86
00:04:38,150 --> 00:04:39,820
当这种情况发生时，

87
00:04:39,820 --> 00:04:42,323
将调用 onUnmount 挂钩。

88
00:04:43,710 --> 00:04:46,030
但我认为这里的模式应该很清楚。

89
00:04:46,030 --> 00:04:47,740
我们在这里看到这些日志

90
00:04:47,740 --> 00:04:51,620
我们看到这是您注册代码的方式

91
00:04:51,620 --> 00:04:53,180
应该执行的

92
00:04:53,180 --> 00:04:57,210
在组件生命周期的不同阶段。

93
00:04:57,210 --> 00:04:59,920
您只需调用这些特殊功能

94
00:04:59,920 --> 00:05:01,770
你从 vue 导入的，

95
00:05:01,770 --> 00:05:04,080
然后你传递你的函数

96
00:05:04,080 --> 00:05:07,550
您要执行这些函数的代码。

97
00:05:07,550 --> 00:05:10,220
这就是你使用生命周期钩子的方式

98
00:05:10,220 --> 00:05:11,823
在组合 API 中。