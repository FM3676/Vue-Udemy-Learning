1
00:00:02,150 --> 00:00:04,140
让我们从参考开始。

2
00:00:04,140 --> 00:00:07,640
现在我的意思不是设置方法中的 refs，

3
00:00:07,640 --> 00:00:10,490
这是我们的反应值。

4
00:00:10,490 --> 00:00:15,193
但我的意思是，refs 指的是我们模板中的元素。

5
00:00:16,390 --> 00:00:20,120
让我们假设姓氏，无论出于何种原因，

6
00:00:20,120 --> 00:00:22,133
我们不想使用该模型。

7
00:00:23,000 --> 00:00:26,541
相反，在这里，我想使用 set a ref

8
00:00:26,541 --> 00:00:27,708
姓氏输入。

9
00:00:28,680 --> 00:00:31,450
我想使用你见过几次的方法

10
00:00:31,450 --> 00:00:34,510
在整个课程中，我阅读了价值

11
00:00:34,510 --> 00:00:38,460
通过使用此 $ ref 的变量从输入

12
00:00:38,460 --> 00:00:42,700
在我们的配置对象中的某个方法内部。

13
00:00:42,700 --> 00:00:45,500
所以假设我们想在这里做同样的事情。

14
00:00:45,500 --> 00:00:47,610
所以我们这里有一个按钮，

15
00:00:47,610 --> 00:00:52,610
设置名称，点击后，

16
00:00:53,270 --> 00:00:56,230
我想调用一些 setName 函数，

17
00:00:56,230 --> 00:00:59,580
然后该函数应设置姓氏。

18
00:00:59,580 --> 00:01:02,080
实际上因此，我将其命名为 setLastName

19
00:01:03,365 --> 00:01:05,013
并将函数命名为 setLastName。

20
00:01:06,540 --> 00:01:09,930
现在，当然，首先，我们创建了那个函数。

21
00:01:09,930 --> 00:01:13,513
所以我们在设置方法setLastName中添加了一个新函数。

22
00:01:15,060 --> 00:01:17,420
此函数不接收任何参数。

23
00:01:17,420 --> 00:01:21,292
但是在这里，我现在想设置 LastName.Value，

24
00:01:21,292 --> 00:01:25,290
在这里指的是我的 LastName ref 的 value 道具

25
00:01:25,290 --> 00:01:28,410
等于存储在此输入中的值。

26
00:01:28,410 --> 00:01:32,650
为此，从历史上看，使用选项 API，

27
00:01:32,650 --> 00:01:35,670
我们会使用这个 $refs，

28
00:01:35,670 --> 00:01:39,040
然后是我们这里的 ref 名称，即 LastNameInput.value

29
00:01:43,150 --> 00:01:45,230
但这在这里行不通，因为

30
00:01:45,230 --> 00:01:48,840
在设置方法中，您无权访问它

31
00:01:48,840 --> 00:01:50,050
就像你习惯的那样。

32
00:01:50,050 --> 00:01:54,170
你不会在那里找到 $refs 的东西。

33
00:01:54,170 --> 00:01:58,290
相反，这种方法是你可以说的另一种方式。

34
00:01:58,290 --> 00:02:02,180
现在你已经定义了你的引用，包括你的模板引用

35
00:02:02,180 --> 00:02:04,670
像这个一样，在设置方法中。

36
00:02:04,670 --> 00:02:08,130
您自己的裁判之间没有区别

37
00:02:08,130 --> 00:02:11,330
管理您自己的数据，以及您想要绑定的 refs

38
00:02:11,330 --> 00:02:12,873
到一些 DOM 元素。

39
00:02:14,010 --> 00:02:16,940
所以在这里你只需创建一个新的 ref LastNameInput

40
00:02:20,300 --> 00:02:21,653
通过调用 ref。

41
00:02:23,380 --> 00:02:26,670
这里的初始值现在是因为最初

42
00:02:26,670 --> 00:02:30,360
this 不绑定到模板中的任何元素。

43
00:02:30,360 --> 00:02:34,770
但是现在我们可以简单地将 LastNameInput 暴露给模板

44
00:02:34,770 --> 00:02:36,400
在这里返回。

45
00:02:36,400 --> 00:02:39,870
也许代替我们现在不需要的姓氏

46
00:02:39,870 --> 00:02:41,480
在模板中。

47
00:02:41,480 --> 00:02:45,151
我们现在公开 LastNameInput，并且已经

48
00:02:45,151 --> 00:02:48,230
这里的 setLastName 函数。

49
00:02:48,230 --> 00:02:51,020
所以也要公开这个函数。

50
00:02:51,020 --> 00:02:54,023
所以现在这个新的 ref 和这个函数被暴露了。

51
00:02:55,000 --> 00:02:59,130
现在 LastNameInput 在这里绑定到这个输入

52
00:02:59,130​​ --> 00:03:01,380
因为我们在这里使用相同的名称。

53
00:03:01,380 --> 00:03:03,840
你仍然像这样分配一个参考，

54
00:03:03,840 --> 00:03:07,120
只是一个带有您创建的引用名称的字符串

55
00:03:07,120 --> 00:03:08,730
在您的设置功能中。

56
00:03:08,730 --> 00:03:12,440
所以 LastName 并放在这里，一旦它暴露给模板

57
00:03:12,440 --> 00:03:16,660
这样就可以在该名称下使用

58
00:03:16,660 --> 00:03:20,730
对于这个特殊的 ref 道具，您可以设置

59
00:03:20,730 --> 00:03:23,230
在您选择的任何 DOM 元素上。

60
00:03:23,230 --> 00:03:25,780
Vue 将在幕后建立联系。

61
00:03:27,210 --> 00:03:31,000
有了这个，我们就可以去我们的 setLastName

62
00:03:31,000 --> 00:03:34,620
在此处起作用，并简单地从该输入中获取值

63
00:03:34,620 --> 00:03:39,513
通过访问 LastNameInput.value.value。

64
00:03:40,860 --> 00:03:44,810
现在这可能看起来很奇怪，这个 .value.value 的东西，

65
00:03:44,810 --> 00:03:48,100
请记住，您始终可以访问 ref 的值

66
00:03:48,100 --> 00:03:50,020
与.value。

67
00:03:50,020 --> 00:03:54,030
这个 ref 的值将是一个指针

68
00:03:54,030 --> 00:03:56,890
在这个输入元素对象。

69
00:03:56,890 --> 00:04:00,520
而这个对象反过来也会有一个 value 属性，

70
00:04:00,520 --> 00:04:02,240
持有用户输入。

71
00:04:02,240 --> 00:04:05,260
所以第二个 .value 正在访问

72
00:04:05,260 --> 00:04:08,340
输入元素对象的 value 属性，

73
00:04:08,340 --> 00:04:12,310
第一个 .value 可以访问我们的 ref 的值，

74
00:04:12,310 --> 00:04:14,543
然后就是那个输入元素对象。

75
00:04:15,900 --> 00:04:17,980
这样我们就可以访问用户输入，

76
00:04:17,980 --> 00:04:21,079
我们将 LastName 设置为等于它。

77
00:04:21,079 --> 00:04:25,130
因此，如果我们保存并重新加载所有这些，

78
00:04:25,130 --> 00:04:29,690
我可以在这里输入最大值，我的观察者开火，我在这里看到最大值。

79
00:04:29,690 --> 00:04:31,700
但如果我在这里输入姓氏，

80
00:04:31,700 --> 00:04:33,580
这不会自动更新，

81
00:04:33,580 --> 00:04:36,080
因为我们删除了双向绑定。

82
00:04:36,080 --> 00:04:40,570
相反，我现在可以单击 setLastName，它可以工作。

83
00:04:40,570 --> 00:04:42,823
当然，它也触发了观察者。

84
00:04:44,500 --> 00:04:47,083
这就是我们可以使用模板引用的方式。