1
00:00:02,180 --> 00:00:05,180
现在假设我们的应用程序正在增长

2
00:00:05,180 --> 00:00:08,250
除了这个很棒的计数器功能之外，

3
00:00:08,250 --> 00:00:11,690
我们现在还有一个用户身份验证组件，

4
00:00:11,690 --> 00:00:14,920
它处理用户身份验证。

5
00:00:14,920 --> 00:00:19,920
所以在那里我们有一个按钮，我们说登录

6
00:00:22,210 --> 00:00:24,820
和一个我们说注销的按钮

7
00:00:24,820 --> 00:00:26,730
这取决于关闭状态，

8
00:00:26,730 --> 00:00:28,380
我们要显示哪个按钮。

9
00:00:29,470 --> 00:00:31,990
现在，我们当然可以在本地将其管理为组件，

10
00:00:31,990 --> 00:00:34,140
但同样，身份验证可能很重要

11
00:00:34,140 --> 00:00:36,080
到 zap 的很多部分。

12
00:00:36,080 --> 00:00:39,313
所以我们想用 UX 和 stat 来管理它。

13
00:00:41,660 --> 00:00:44,590
在这里，我刚刚得到了这个带有两个按钮的模板

14
00:00:44,590 --> 00:00:49,590
和应用程序视图，我现在要导入用户关闭

15
00:00:50,040 --> 00:00:53,970
从组件用户关闭点视图

16
00:00:53,970 --> 00:00:57,373
并将其注册为新的组件用户。

17
00:00:58,250 --> 00:01:00,110
因此我们现在可以使用它

18
00:01:00,110 --> 00:01:02,200
我将在这里创建一个新容器

19
00:01:02,200 --> 00:01:04,180
直观地展示它

20
00:01:04,180 --> 00:01:08,833
这会关闭应用程序用户的不同部分，

21
00:01:11,400 --> 00:01:15,810
给这个容器一个标题道具。

22
00:01:15,810 --> 00:01:18,500
并确保我只显示第一个容器。

23
00:01:18,500 --> 00:01:21,080
如果我们通过身份验证。

24
00:01:21,080 --> 00:01:22,850
现在我们看到那些按钮，

25
00:01:22,850 --> 00:01:25,230
但当然他们什么都不做。

26
00:01:25,230 --> 00:01:28,910
嗯，这是我们可以用 UX 解决的问题。

27
00:01:28,910 --> 00:01:32,100
在我深入研究实用程序功能之前

28
00:01:32,100 --> 00:01:34,880
我们有管理更大的应用程序

29
00:01:34,880 --> 00:01:36,560
具有不同类型的状态。

30
00:01:36,560 --> 00:01:38,290
这是一个快速的暂停，

31
00:01:38,290 --> 00:01:42,720
您可以使用它在 UX 中添加功能，

32
00:01:42,720 --> 00:01:45,959
对登录和注销点击做出反应

33
00:01:45,959 --> 00:01:49,380
管理一些被锁定的状态

34
00:01:49,380 --> 00:01:51,890
只显示两个按钮之一

35
00:01:51,890 --> 00:01:54,950
并显示或隐藏此基础容器

36
00:01:54,950 --> 00:01:57,720
基于关闭状态。

37
00:01:57,720 --> 00:02:01,630
所以添加一个新的状态和所有的 getter 突变和动作

38
00:02:01,630 --> 00:02:05,230
你可能需要管理这个被锁定的状态，

39
00:02:05,230 --> 00:02:07,730
这最终可能是对的或错的。

40
00:02:07,730 --> 00:02:10,690
这是您此后暂停视频的机会

41
00:02:10,690 --> 00:02:12,323
我们将一起实施。

42
00:02:14,930 --> 00:02:16,300
你的成功在哪里？

43
00:02:16,300 --> 00:02:17,783
现在让我们一起做吧。

44
00:02:19,190 --> 00:02:21,870
所以我想管理一个关闭状态。

45
00:02:21,870 --> 00:02:26,120
所以在我的状态和我在这里的故事中，我将——

46
00:02:26,120 --> 00:02:28,120
处于锁定状态。

47
00:02:28,120 --> 00:02:29,730
当然，名字由你决定，

48
00:02:29,730 --> 00:02:31,700
假设最初是错误的

49
00:02:33,070 --> 00:02:37,430
现在为了改变它，我想要一两个突变，

50
00:02:37,430 --> 00:02:40,063
取决于你如何决定突变，

51
00:02:41,480 --> 00:02:45,240
我将添加一个突变并将其命名为 set off

52
00:02:46,180 --> 00:02:50,390
当然，我希望在哪里获得状态和有效负载

53
00:02:50,390 --> 00:02:52,300
有效载荷在这里很重要

54
00:02:52,300 --> 00:02:55,420
因为它会告诉我我想在哪里设置关闭状态

55
00:02:55,420 --> 00:02:58,203
认证或不认证。

56
00:02:59,040 --> 00:03:01,120
所以我在这里说，状态被锁定，

57
00:03:01,120 --> 00:03:04,320
等于有效载荷就是说，

58
00:03:04,320 --> 00:03:06,430
这可以是真的也可以是假的。

59
00:03:06,430 --> 00:03:08,100
现在这只是我的方法。

60
00:03:08,100 --> 00:03:10,020
你可能有不同的

61
00:03:10,020 --> 00:03:11,690
这也可能没问题。

62
00:03:11,690 --> 00:03:13,503
这只是一种方法。

63
00:03:15,040 --> 00:03:16,630
现在这是我的突变，

64
00:03:16,630 --> 00:03:19,600
但我们不一定要称突变

65
00:03:19,600 --> 00:03:22,340
如您所学，直接从内部组件中获取。

66
00:03:22,340 --> 00:03:24,650
所以我会添加动作。

67
00:03:24,650 --> 00:03:26,850
现在我们可以添加一组动作，

68
00:03:26,850 --> 00:03:29,110
基本上就像突变一样，

69
00:03:29,110 --> 00:03:34,110
或者我们添加两个动作来混合登录操作

70
00:03:34,640 --> 00:03:37,390
和注销操作。

71
00:03:37,390 --> 00:03:40,233
同样，这只是我实现这一点的方式。

72
00:03:41,320 --> 00:03:46,320
我们得到这个上下文对象并登录，

73
00:03:47,490 --> 00:03:51,120
我要承诺，出发。

74
00:03:51,120 --> 00:03:54,700
那是我的突变的名字，这个，

75
00:03:54,700 --> 00:03:58,660
有效载荷将是这里的一个对象

76
00:03:58,660 --> 00:04:03,660
我说的地方不对，因为它是登录操作

77
00:04:03,690 --> 00:04:06,740
我想将用户设置为登录。

78
00:04:06,740 --> 00:04:08,840
所以 dis 不属于财产，

79
00:04:08,840 --> 00:04:12,023
我在这里读到的突变现在是真的。

80
00:04:14,270 --> 00:04:17,160
而在注销时，几乎是一样的。

81
00:04:17,160 --> 00:04:21,173
这与我提交的突变相同，但它是错误的。

82
00:04:22,610 --> 00:04:25,270
当然，这些动作可以是异步的

83
00:04:25,270 --> 00:04:27,810
实际上，我们可能正在发送

84
00:04:27,810 --> 00:04:29,870
一些HTTP请求，

85
00:04:29,870 --> 00:04:32,110
但在这里我不会在意。

86
00:04:32,110 --> 00:04:35,460
我会保持简单并保持同步。

87
00:04:35,460 --> 00:04:36,730
但在行动中，当然，

88
00:04:36,730 --> 00:04:39,513
正如你所学，我们也可以使用异步代码。

89
00:04:41,280 --> 00:04:42,940
所以现在我们有了动作，突变，

90
00:04:42,940 --> 00:04:47,040
并说明缺少吸气剂的情况。

91
00:04:47,040 --> 00:04:51,120
所以我会添加一个新的吸气剂名称取决于你。

92
00:04:51,120 --> 00:04:53,793
我将其命名为用户已通过身份验证。

93
00:04:55,610 --> 00:04:59,890
在这里，我们得到了我们的状态，我会回来的。

94
00:04:59,890 --> 00:05:04,890
状态已登录，是真还是假。

95
00:05:07,150 --> 00:05:09,160
现在我店里什么都有

96
00:05:09,160 --> 00:05:10,760
你会想要在那里。

97
00:05:11,890 --> 00:05:14,500
随着那个背部和用户关闭。

98
00:05:14,500 --> 00:05:16,680
我想连接这些按钮。

99
00:05:16,680 --> 00:05:20,740
所以我将添加我的脚本部分，现在添加我的方法

100
00:05:20,740 --> 00:05:23,163
对于应该分派的动作。

101
00:05:24,100 --> 00:05:26,240
我们可以在这里使用地图操作，

102
00:05:26,240 --> 00:05:29,300
或者我们手动添加完全取决于您

103
00:05:29,300 --> 00:05:32,634
为了显示所有方法，我将在此处手动添加，

104
00:05:32,634 --> 00:05:37,634
在此处添加登录和注销方法。

105
00:05:38,110 --> 00:05:42,520
并在登录时，我将调用此商店调度登录

106
00:05:44,200 --> 00:05:48,150
因为登录是我定义的动作名称

107
00:05:48,150 --> 00:05:49,590
对于注销它是一样的，

108
00:05:49,590 --> 00:05:52,033
但当然，还有注销操作。

109
00:05:53,770 --> 00:05:56,030
现在我们可以设置点击监听器，

110
00:05:56,030 --> 00:05:59,469
在第一个按钮上触发我们的登录方法

111
00:05:59,469 --> 00:06:03,083
并在第二个按钮上触发注销。

112
00:06:04,590 --> 00:06:07,140
有了这个，我们应该操纵状态

113
00:06:07,140 --> 00:06:11,190
现在要反映它，我也想听听变化。

114
00:06:11,190 --> 00:06:12,130
例如，在这里，

115
00:06:12,130 --> 00:06:14,310
我只想显示两个按钮之一

116
00:06:14,310 --> 00:06:15,333
同时。

117
00:06:16,640 --> 00:06:19,790
对于 dav，我们可以使用计算机来访问 getter

118
00:06:19,790 --> 00:06:22,440
使用地图吸气剂或通过设置

119
00:06:22,440 --> 00:06:24,547
我们自己的计算属性。

120
00:06:24,547 --> 00:06:28,591
在这里我将添加 is off 计算属性

121
00:06:28,591 --> 00:06:32,810
我在哪里退回了这个商店吸气剂

122
00:06:32,810 --> 00:06:36,910
和我一起命名的用户已通过身份验证。

123
00:06:36,910 --> 00:06:38,470
所以这就是吸气剂

124
00:06:38,470 --> 00:06:41,950
我想访问这里，现在关闭，

125
00:06:41,950 --> 00:06:44,980
是一个计算属性，它是真或假。

126
00:06:44,980 --> 00:06:48,710
而用VF，都显示一个登录按钮是关闭的，

127
00:06:48,710 --> 00:06:52,010
为假，因为用户未通过身份验证。

128
00:06:52,010 --> 00:06:54,500
我想显示登录按钮

129
00:06:54,500 --> 00:06:56,550
我想显示注销按钮

130
00:06:56,550 --> 00:06:58,683
如果我们通过了身份验证。

131
00:07:00,640 --> 00:07:03,550
我们可以复制计算机属性

132
00:07:03,550 --> 00:07:08,550
现在像这样进入应用程序视图文件，

133
00:07:10,480 --> 00:07:14,100
因为我也需要在这里展示

134
00:07:14,100 --> 00:07:17,010
或隐藏第一个基础容器。

135
00:07:17,010 --> 00:07:19,870
所以这里有 VF，如果关闭，我想展示它，

136
00:07:19,870 --> 00:07:22,113
是真的，如果是的话就隐藏它错误的。

137
00:07:23,760 --> 00:07:25,580
最初，我们看不到它

138
00:07:25,580 --> 00:07:27,870
因为最初我们没有登录，

139
00:07:27,870 --> 00:07:29,740
但如果它点击登录，我们会看到它。

140
00:07:29,740 --> 00:07:33,310
我们可以改变一切，但如果我点击注销，

141
00:07:33,310 --> 00:07:34,900
我们隐藏它。

142
00:07:34,900 --> 00:07:36,410
所以这行得通。

143
00:07:36,410 --> 00:07:39,199
这是一个额外的状态管理。

144
00:07:39,199 --> 00:07:41,910
现在这不是很好的做法，

145
00:07:41,910 --> 00:07:44,600
但我开始这个讲座提到

146
00:07:44,600 --> 00:07:46,580
我们的应用程序可能会变得更大

147
00:07:46,580 --> 00:07:49,860
并且我们有越来越多的国家需要管理。

148
00:07:49,860 --> 00:07:51,420
所以在这个演示中，

149
00:07:51,420 --> 00:07:54,930
我们现在添加了至少一点额外的信息

150
00:07:54,930 --> 00:07:56,610
到我们的商店。

151
00:07:56,610 --> 00:08:00,470
View UX 还为我们提供了实用方法

152
00:08:00,470 --> 00:08:04,520
和管理大型商店时的功能

153
00:08:04,520 --> 00:08:07,363
里面有不同的状态。