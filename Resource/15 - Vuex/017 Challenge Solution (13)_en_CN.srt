1
00:00:02,210 --> 00:00:03,900
那你成功了吗？

2
00:00:03,900 --> 00:00:05,810
让我们一起试试这个。

3
00:00:05,810 --> 00:00:09,120
为此，我将在此处添加一个商店文件夹

4
00:00:09,120 --> 00:00:11,593
并在其中添加一个索引 JS 文件。

5
00:00:12,880 --> 00:00:15,800
我还将添加一个模块文件夹

6
00:00:15,800 --> 00:00:18,710
因为我肯定会使用一些模块。

7
00:00:18,710 --> 00:00:21,770
查看我们在 App.vue 中的状态，

8
00:00:21,770 --> 00:00:24,710
我认为我们有三种主要的状态，

9
00:00:24,710 --> 00:00:26,510
我们有产品，

10
00:00:26,510 --> 00:00:28,120
我们有购物车，

11
00:00:28,120 --> 00:00:31,940
我们还可以将产品和购物车视为一种状态

12
00:00:31,940 --> 00:00:33,853
到店状态可以这么说。

13
00:00:34,720 --> 00:00:36,860
然后我们有 isLoggedIn

14
00:00:36,860 --> 00:00:38,773
这是身份验证状态。

15
00:00:39,690 --> 00:00:41,720
现在将有不同的方法来解决这个问题。

16
00:00:41,720 --> 00:00:45,760
但我会将 isLoggedIn 放入我的根状态，可以这么说，

17
00:00:45,760 --> 00:00:47,630
所以不要进入一个模块，

18
00:00:47,630 --> 00:00:49,420
但后来我会使用产品

19
00:00:49,420 --> 00:00:52,840
并带有购物车模块。

20
00:00:52,840 --> 00:00:56,320
因此在模块中我们可以创建两个子文件夹，

21
00:00:56,320 --> 00:00:59,350
产品和购物车，没有任何问题

22
00:00:59,350 --> 00:01:01,580
但我会使用不同的方法，

23
00:01:01,580 --> 00:01:05,653
而是在 cart.js 和 products.js 文件中。

24
00:01:06,790 --> 00:01:09,270
这不是我在上次讲座中向您展示的内容。

25
00:01:09,270 --> 00:01:10,380
我知道这一点，

26
00:01:10,380 --> 00:01:12,830
但这也是一种选择。

27
00:01:12,830 --> 00:01:15,630
我不想分裂我的突变等等

28
00:01:15,630 --> 00:01:17,180
在这里的单独文件中，

29
00:01:17,180 --> 00:01:19,250
相反，我想将它们放在一个文件中，

30
00:01:19,250 --> 00:01:22,640
但仍然为不同的模块分开文件。

31
00:01:22,640 --> 00:01:26,460
所以这是拥有多个模块文件夹的替代方案，

32
00:01:26,460 --> 00:01:28,680
在每个模块文件夹中，

33
00:01:28,680 --> 00:01:31,610
然后你有单独的动作和突变文件，

34
00:01:31,610 --> 00:01:33,480
你也可以这样做，

35
00:01:33,480 --> 00:01:34,763
只是为了说明这一点。

36
00:01:36,130 --> 00:01:37,610
但有了这一切，

37
00:01:37,610 --> 00:01:42,610
我要 npm install vuex，

38
00:01:42,670 --> 00:01:45,970
这样我们就可以在这个项目中使用它了

39
00:01:48,140 --> 00:01:51,090
然后启动开发服务器。

40
00:01:51,090 --> 00:01:53,130
在 index.js 中，

41
00:01:53,130 --> 00:01:54,950
在商店文件夹中。

42
00:01:54,950 --> 00:01:57,760
然后我将导入创建，

43
00:01:57,760 --> 00:02:00,403
从 vuex 存储。

44
00:02:01,630 --> 00:02:05,980
然后在这里调用create store来创建一个store，

45
00:02:05,980 --> 00:02:08,592
然后我将其导出为默认值。

46
00:02:10,110 --> 00:02:11,830
这里存储文本和对象

47
00:02:11,830 --> 00:02:15,100
我们很快就会在这里配置商店。

48
00:02:15,100 --> 00:02:16,540
由于我正在导出商店，

49
00:02:16,540 --> 00:02:20,050
我们已经可以在 main.js 中导入它，

50
00:02:20,050 --> 00:02:24,480
这里从 store.js 导入商店。

51
00:02:24,480 --> 00:02:26,450
除了使用路由器，

52
00:02:26,450 --> 00:02:28,513
我们现在也将使用商店。

53
00:02:30,280 --> 00:02:32,240
但现在回到商店。

54
00:02:32,240 --> 00:02:34,980
我提到我想要一些全局状态

55
00:02:34,980 --> 00:02:38,810
身份验证状态，然后是模块状态

56
00:02:38,810 --> 00:02:43,810
对于我的产品和购物车的不同模块。

57
00:02:45,390 --> 00:02:47,403
让我们从产品开始吧。

58
00:02:49,490 --> 00:02:52,360
为此，我们在这里导出一个对象，

59
00:02:52,360 --> 00:02:54,910
这将是我们的模块对象

60
00:02:54,910 --> 00:02:57,600
并设置状态，这是一种方法

61
00:02:57,600 --> 00:03:00,740
它返回一个定义我们状态的对象。

62
00:03:00,740 --> 00:03:01,800
而在这里，

63
00:03:01,800 --> 00:03:03,700
我想要我的产品阵列，

64
00:03:03,700 --> 00:03:06,630
目前在 App.vue 中。

65
00:03:06,630 --> 00:03:10,630
所以我们可以从 App.vue 中获取整个数组，

66
00:03:10,630 --> 00:03:11,463
剪了它，

67
00:03:12,640 --> 00:03:15,500
并转到 products.js。

68
00:03:15,500 --> 00:03:19,893
并将它添加到这里 products 现在是这个数组。

69
00:03:22,570 --> 00:03:24,100
在 App.vue 中，

70
00:03:24,100 --> 00:03:27,423
因此，我们不再提供产品。

71
00:03:30,950 --> 00:03:34,163
我们从数据属性中删除产品。

72
00:03:35,940 --> 00:03:38,970
现在为产品我实际上没有突变

73
00:03:38,970 --> 00:03:41,450
和行动，因为我们从不改变产品

74
00:03:41,450 --> 00:03:43,530
在这个示例应用程序中。

75
00:03:43,530 --> 00:03:45,010
他们当然提供，

76
00:03:45,010 --> 00:03:47,990
这不是我们需要管理的真正状态。

77
00:03:47,990 --> 00:03:50,330
这只是一些静态数据，

78
00:03:50,330 --> 00:03:53,750
我们也可以像这样导出和导入。

79
00:03:53,750 --> 00:03:55,230
但是要练习vuex，

80
00:03:55,230 --> 00:03:56,620
我会把它变成某种状态

81
00:03:56,620 --> 00:03:59,463
即使那是永远不会改变的状态。

82
00:04:00,750 --> 00:04:02,910
不过，我们至少需要一件事。

83
00:04:02,910 --> 00:04:04,190
那是一个吸气剂。

84
00:04:04,190 --> 00:04:07,020
因为我们不应该直接访问状态，

85
00:04:07,020 --> 00:04:09,270
我们应该为此使用吸气剂。

86
00:04:09,270 --> 00:04:11,030
所以在这里我将添加一个吸气剂，

87
00:04:11,030 --> 00:04:12,913
也可能命名为产品，

88
00:04:14,130 --> 00:04:17,459
它获取此模块的本地状态。

89
00:04:17,459 --> 00:04:21,890
然后我们只是简单地返回这样的状态产品。

90
00:04:21,890 --> 00:04:23,710
所以它不是一个超级花哨的吸气剂，

91
00:04:23,710 --> 00:04:25,020
它没有做很多事情，

92
00:04:25,020 --> 00:04:26,873
但是，嘿，总比没有好。

93
00:04:28,280 --> 00:04:32,060
产品模块就是这样。

94
00:04:32,060 --> 00:04:33,280
所以在 index.js 中，

95
00:04:33,280 --> 00:04:35,270
我创建主商店的地方，

96
00:04:35,270 --> 00:04:38,390
我可以导入我的产品模块

97
00:04:38,390 --> 00:04:43,390
来自模块/products.js，

98
00:04:43,460 --> 00:04:46,850
然后在此处添加 modules 键。

99
00:04:46,850 --> 00:04:48,823
并补充说，

100
00:04:50,050 --> 00:04:55,050
如果我们以后想使用命名空间，prods 作为命名空间，

101
00:04:55,668 --> 00:04:57,460
否则这只是必需的，

102
00:04:57,460 --> 00:04:59,950
技术上，但没有效果。

103
00:04:59,950 --> 00:05:03,223
并在名称空间下注册 products 模块。

104
00:05:04,110 --> 00:05:06,550
现在它不是名称间隔的。

105
00:05:06,550 --> 00:05:08,820
目前它将在全球范围内合并。

106
00:05:08,820 --> 00:05:12,240
因此，就可以像这样一起使用。

107
00:05:12,240 --> 00:05:13,840
但我想让它的名字间隔

108
00:05:13,840 --> 00:05:15,690
让大家都去实践。

109
00:05:15,690 --> 00:05:19,310
因此，我们可以添加名称空间作为选项

110
00:05:19,310 --> 00:05:22,663
在导出的模块对象中并将其设置为 true。

111
00:05:23,550 --> 00:05:27,093
现在 prods 将成为该模块的命名空间。

112
00:05:28,410 --> 00:05:30,210
让我们继续购物车。

113
00:05:30,210 --> 00:05:32,360
在购物车里。

114
00:05:32,360 --> 00:05:36,100
我当然想要我的购物车数据。

115
00:05:36,100 --> 00:05:38,660
所以我们可以从 App.vue 中删除它，

116
00:05:38,660 --> 00:05:42,090
但后来也是改变购物车的方法。

117
00:05:42,090 --> 00:05:45,740
所以在 store modules 文件夹中的 cart.js 中，

118
00:05:45,740 --> 00:05:48,900
我们导出我们的模块对象，

119
00:05:48,900 --> 00:05:50,520
添加我们的状态，

120
00:05:50,520 --> 00:05:53,883
在这里我返回一个有这个购物车的对象。

121
00:05:54,740 --> 00:05:55,830
而实际上，

122
00:05:55,830 --> 00:05:59,250
因为这是一个仅用于购物车的整个模块，

123
00:05:59,250 --> 00:06:03,440
我们也可以将其展平并仅添加项目总数

124
00:06:03,440 --> 00:06:08,113
和数量作为这个整体模块状态中的单独键。

125
00:06:11,420 --> 00:06:14,600
现在在这里，我们也需要突变，

126
00:06:14,600 --> 00:06:18,650
因为在 App.vue 我有两种改变购物车的方法，

127
00:06:18,650 --> 00:06:20,360
将产品添加到购物车，

128
00:06:20,360 --> 00:06:22,283
并从购物车中删除产品。

129
00:06:23,490 --> 00:06:26,093
所以我可以抓住这些方法，

130
00:06:27,580 --> 00:06:30,090
从 App.vue 中删除它们，

131
00:06:30,090 --> 00:06:32,460
并将它们添加到 cart.js 这里

132
00:06:33,920 --> 00:06:35,163
在突变中，

133
00:06:36,240 --> 00:06:39,600
但我们现在当然必须调整这些突变，

134
00:06:39,600 --> 00:06:42,040
因为现在他们不只是争论

135
00:06:42,040 --> 00:06:42,980
并做某事。

136
00:06:42,980 --> 00:06:45,370
相反，他们现在需要两个参数，

137
00:06:45,370 --> 00:06:48,080
他们应该改变的当前状态，

138
00:06:48,080 --> 00:06:49,253
和有效载荷。

139
00:06:50,230 --> 00:06:52,870
然后有效载荷可以保存所有额外的数据

140
00:06:52,870 --> 00:06:54,430
这可能是需要的。

141
00:06:54,430 --> 00:06:55,590
例如这里，

142
00:06:55,590 --> 00:06:59,770
我希望得到一些描述产品的产品数据

143
00:06:59,770 --> 00:07:01,643应该添加到购物车。
144

00:07:02,510 --> 00:07:05,060
因此，为了确保其余代码正常工作，

145
00:07:05,060 --> 00:07:07,630
我将添加一个名为产品数据的常量

146
00:07:07,630 --> 00:07:10,120
因为这就是那里正在使用的东西。

147
00:07:10,120 --> 00:07:12,980
并期望在我的有效载荷上得到它。

148
00:07:12,980 --> 00:07:16,560
假设payload.product。

149
00:07:16,560 --> 00:07:19,030
我们必须稍后提供这个有效载荷。

150
00:07:19,030 --> 00:07:21,570
所以我们当然可以期待任何我们想要的数据。

151
00:07:21,570 --> 00:07:24,963
我们只需要确保这些数据稍后存在。

152
00:07:26,270 --> 00:07:29,090
然后我们必须更新状态。

153
00:07:29,090 --> 00:07:29,960
以这里为例，

154
00:07:29,960 --> 00:07:33,960
它不是这个购物车物品找到的东西。

155
00:07:33,960 --> 00:07:37,200
是国货，

156
00:07:37,200 --> 00:07:40,740
因为 items 现在是我们当地的财产

157
00:07:40,740 --> 00:07:41,843
这个模块的。

158
00:07:45,040 --> 00:07:48,853
这里也是 State.items.quantity。

159
00:07:51,180 --> 00:07:55,730
假设购物车中的商品确实有数量字段，

160
00:07:55,730 --> 00:07:59,210
他们这样做是因为这是我们将商品添加到购物车的方式，

161
00:07:59,210 --> 00:08:01,530
我们设置产品ID、标题、图片价格

162
00:08:01,530 --> 00:08:04,250
和该产品在购物车中的数量。

163
00:08:04,250 --> 00:08:05,950
这一切都应该继续有效

164
00:08:05,950 --> 00:08:08,823
因为这不使用状态或类似的东西。

165
00:08:09,780 --> 00:08:10,740
但到了最后，

166
00:08:10,740 --> 00:08:14,360
我们访问状态项并推送我们的新项。

167
00:08:14,360 --> 00:08:19,360
我们访问 state.quantity 和 state.total。

168
00:08:22,120 --> 00:08:25,023
所以我们在这里添加的其他状态属性。

169
00:08:26,140 --> 00:08:29,093
这就是将产品添加到购物车突变。

170
00:08:30,070 --> 00:08:32,090
现在从购物车中删除产品，

171
00:08:32,090 --> 00:08:35,090
我们还得到了一个状态和一个有效载荷。

172
00:08:35,090 --> 00:08:36,400
然后再次，

173
00:08:36,400 --> 00:08:39,530
prodId 之前作为参数接收。

174
00:08:39,530 --> 00:08:41,950
所以我会添加一个常量prodId，

175
00:08:41,950 --> 00:08:45,380
并提取这个productId让我们说

176
00:08:45,380 --> 00:08:46,833
从有效载荷对象。

177
00:08:47,990 --> 00:08:48,823
然后再一次，

178
00:08:48,823 --> 00:08:51,603
我们在这里搜索 state.items。

179
00:08:52,480 --> 00:08:55,640
在这里，就是所有那些 state.items

180
00:08:55,640 --> 00:09:00,640
我们操纵状态项，状态数量

181
00:09:01,650 --> 00:09:03,583
和状态总数。

182
00:09:05,600 --> 00:09:08,160
现在我们得到了突变。

183
00:09:08,160 --> 00:09:11,290
现在我们了解到我们不应该直接提交突变

184
00:09:11,290 --> 00:09:12,520
从内部组件。

185
00:09:12,520 --> 00:09:15,380
所以我还要添加一些动作。

186
00:09:15,380 --> 00:09:18,010
在这里，我将添加一个添加到购物车的操作

187
00:09:19,060 --> 00:09:22,453
并从购物车操作中删除。

188
00:09:23,460 --> 00:09:27,170
并添加到购物车接收此上下文

189
00:09:27,170 --> 00:09:29,510
也许还有一个有效载荷。

190
00:09:29,510 --> 00:09:32,243
从购物车中删除也是如此。

191
00:09:33,610 --> 00:09:35,260
然后在这里我简单地承诺，

192
00:09:38,420 --> 00:09:39,980
将产品添加到购物车

193
00:09:42,280 --> 00:09:45,323
并将有效载荷转发给突变。

194
00:09:47,450 --> 00:09:52,380
对于其他行动，我们承诺从购物车中删除产品。

195
00:09:52,380 --> 00:09:56,600
所以这将是上下文提交，

196
00:09:56,600 --> 00:09:59,860
从购物车中删除产品并转发到有效负载

197
00:10:01,240 --> 00:10:04,830
有了这个，我们现在只需要添加一些吸气剂。

198
00:10:04,830 --> 00:10:08,230
允许我们访问各种片段的吸气剂

199
00:10:08,230 --> 00:10:09,903
关于购物车的信息。

200
00:10:11,470 --> 00:10:13,810
在这里，我们可以发挥创意。

201
00:10:13,810 --> 00:10:16,490
以前我们共享整个购物车。

202
00:10:16,490 --> 00:10:18,320
然后在不同的组件中，

203
00:10:18,320 --> 00:10:21,140
我们提取了不同的特征。

204
00:10:21,140 --> 00:10:25,010
例如在用户卡页面中，

205
00:10:25,010 --> 00:10:28,713
我像这样提取了购物车总数。

206
00:10:30,820 --> 00:10:32,390
在标题中，

207
00:10:32,390 --> 00:10:34,280
我在提取

208
00:10:35,780 --> 00:10:38,010
这里的卡数量。

209
00:10:38,010 --> 00:10:42,470
现在我们可以在我们的模块中为此定义一些 getter，

210
00:10:42,470 --> 00:10:44,550
我们可以有一个购物车项目分散，

211
00:10:44,550 --> 00:10:46,773
这给了我们整个购物车项目。

212
00:10:47,710 --> 00:10:49,220
一车总价三、

213
00:10:49,220 --> 00:10:53,530
这给了我们总金额和一个购物车数量吸气剂，

214
00:10:53,530 --> 00:10:57,180
或者因为这已经全部在购物车模块中了

215
00:10:57,180 --> 00:11:02,090
只需命名此项目或产品或任何您想要的名称，

216
00:11:02,090 --> 00:11:05,323
总和可能和数量。

217
00:11:06,800 --> 00:11:10,500
然后在这里返回我们得到的状态

218
00:11:10,500 --> 00:11:13,990
在 getter 中自动声明项目

219
00:11:15,170 --> 00:11:18,423
这里是总和返回状态，

220
00:11:19,660 --> 00:11:20,493
全部的。

221
00:11:21,810 --> 00:11:23,360
在这里返回

222
00:11:24,720 --> 00:11:27,270
状态量。

223
00:11:27,270 --> 00:11:31,300
现在我们可以进入 store 文件夹中的 index.js，

224
00:11:31,300 --> 00:11:36,300
从 ./modules/cart.js 导入购物车模块

225
00:11:38,580 --> 00:11:41,423
并将其添加到我们的模块中。

226
00:11:42,500 --> 00:11:45,620
我要命名这个购物车

227
00:11:45,620 --> 00:11:47,853
并保存到那里的购物车模块。

228
00:11:49,540 --> 00:11:50,940
现在我们还没有完成

229
00:11:50,940 --> 00:11:53,950
但我们迈出了重要的第一步。

230
00:11:53,950 --> 00:11:56,080
现在让我们继续清理

231
00:11:56,080 --> 00:11:58,763
并在接下来的讲座中使用商店。