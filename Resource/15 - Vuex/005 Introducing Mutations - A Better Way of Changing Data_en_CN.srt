1
00:00:02,320 --> 00:00:04,210
还记得这张幻灯片吗？

2
00:00:04,210 --> 00:00:08,330
在那里我提到了这种可预测的状态管理，

3
00:00:08,330 --> 00:00:12,140
这种可预测的流，明确定义的数据流，

4
00:00:12,140 --> 00:00:16,219
这确保我们必须使用某种方法

5
00:00:16,219 --> 00:00:17,640
更新我们的数据

6
00:00:17,640 --> 00:00:19,360
以及获取我们的数据

7
00:00:19,360 --> 00:00:22,570
这将不太容易出错。

8
00:00:22,570 --> 00:00:26,356
好吧，实际上，我们目前使用 Vuex 的方式是可行的

9
00:00:26,356 --> 00:00:30,183
但它并没有完全遵循 Vuex 理念。

10
00:00:31,040 --> 00:00:34,000
我们直接进入我们的 store.state

11
00:00:34,000 --> 00:00:37,050
从组件内部更改某些内容

12
00:00:37,050 --> 00:00:40,020
虽然这在技术上有效，

13
00:00:40,020 --> 00:00:41,285
这并不理想。

14
00:00:41,285 --> 00:00:44,820
我们可以在应用程序的任何地方更改状态

15
00:00:44,820 --> 00:00:46,950
如果我们添加一个，这取决于我们

16
00:00:46,950 --> 00:00:51,950
或者如果我们将其设置为 state.counter + 10

17
00:00:52,060 --> 00:00:55,290
或者我们有一个错字，不小心输入了两次

18
00:00:55,290 --> 00:00:58,383
因此每次我们增加它时都加 11。

19
00:00:59,300 --> 00:01:01,720
所以我想说的是，在这里，

20
00:01:01,720 --> 00:01:04,870
我们仍然可以引入错误

21
00:01:04,870 --> 00:01:06,320
因为我们没有

22
00:01:06,320 --> 00:01:09,160
明确定义的状态改变机制。

23
00:01:09,160 --> 00:01:11,333
我们可以从任何地方改变状态。

24
00:01:12,470 --> 00:01:15,720
这就是为什么我们应该以不同的方式使用 Vuex。

25
00:01:15,720 --> 00:01:18,830
我们有这个应用程序范围的中央数据存储，

26
00:01:18,830 --> 00:01:20,360
这家国营商店，

27
00:01:20,360 --> 00:01:22,120
我们与它交流

28
00:01:22,120 --> 00:01:23,853
从我们的组件内部。

29
00:01:24,720 --> 00:01:27,230
现在，我在这里有一个虚线箭头

30
00:01:27,230 --> 00:01:30,130
因为是的，我们想交流

31
00:01:30,130 --> 00:01:31,810
但不是直接。

32
00:01:31,810 --> 00:01:34,350
我们目前所做的并不理想。

33
00:01:34,350 --> 00:01:38,663
相反，Vuex 有一个称为突变的内置概念。

34
00:01:39,630 --> 00:01:43,030
突变是明确定义的方法，

35
00:01:43,030 --> 00:01:46,380
它具有更新状态的逻辑。

36
00:01:46,380 --> 00:01:48,440
从我们的组件内部，

37
00:01:48,440 --> 00:01:52,040
最后，我们应该触发那些突变

38
00:01:52,040 --> 00:01:54,373
而不是直接操纵状态。

39
00:01:55,430 --> 00:01:57,420
通过触发突变，

40
00:01:57,420 --> 00:02:01,200
所有想要编辑状态的组件都这样做

41
00:02:01,200 --> 00:02:02,660
以同样的方式。

42
00:02:02,660 --> 00:02:05,523
并且可以保证他们以相同的方式进行操作。

43
00:02:06,490 --> 00:02:08,350
给你举个例子，

44
00:02:08,350 --> 00:02:11,243
我实际上会在这里添加另一个组件。

45
00:02:12,285 --> 00:02:14,300
更改计数器.vue。

46
00:02:14,300 --> 00:02:16,020
这将是一个非常简单的组件，

47
00:02:16,020 --> 00:02:17,840
它也只有一个按钮

48
00:02:19,370 --> 00:02:21,600
我也说加 1

49
00:02:21,600 --> 00:02:23,020
以及我们要点击的地方，

50
00:02:23,020 --> 00:02:25,230
我想要一个触发器 addOne。

51
00:02:25,230 --> 00:02:27,570
然后我的脚本在这里。

52
00:02:27,570 --> 00:02:29,610
在那里，我的方法

53
00:02:29,610 --> 00:02:33,120
我有 addOne 方法的地方。

54
00:02:33,120 --> 00:02:36,350
并且每个组件都可以像你学习的那样使用 Vuex。

55
00:02:36,350 --> 00:02:39,180
所以在这里我可以访问 store.state.counter

56
00:02:39,180 --> 00:02:40,623
并将其加一。

57
00:02:42,060 --> 00:02:45,287
现在，在 App.vue 中，我们可以导入 ChangeCounter

58
00:02:48,279 --> 00:02:49,779
并将其注册为组件

59
00:02:51,220 --> 00:02:53,510
并在按钮之外使用它，

60
00:02:53,510 --> 00:02:55,053
我们在这里已经有了。

61
00:02:56,160 --> 00:02:57,880
所以我现在有两个按钮。

62
00:02:57,880 --> 00:02:59,370
应用程序组件中的一个

63
00:02:59,370 --> 00:03:00,923
一个在找零柜台。

64
00:03:01,950 --> 00:03:04,940
两者都应该加一个，但在这里我要加 11

65
00:03:04,940 --> 00:03:08,650
因为我打错了或者我改变了我的逻辑

66
00:03:08,650 --> 00:03:11,080
忘记重命名方法

67
00:03:11,080 --> 00:03:12,620
和按钮上的文字。

68
00:03:12,620 --> 00:03:13,660
任何。

69
00:03:13,660 --> 00:03:15,460
但是现在我们有两个按钮。

70
00:03:15,460 --> 00:03:18,880
一键加 11，一键加一。

71
00:03:18,880 --> 00:03:20,580
现在，我为什么要这样做？

72
00:03:20,580 --> 00:03:23,840
我想告诉你现在我们有不同的地方

73
00:03:23,840 --> 00:03:26,210
在我们更新状态的应用程序中。

74
00:03:26,210 --> 00:03:28,800
即使我们不会犯那个愚蠢的错误

75
00:03:28,800 --> 00:03:30,480
这里有11个，

76
00:03:30,480 --> 00:03:32,270
即使我们有一个，

77
00:03:32,270 --> 00:03:35,780
如果我们决定要添加两个，

78
00:03:35,780 --> 00:03:39,670
我们必须在两个组件中改变它。

79
00:03:39,670 --> 00:03:42,438
我们必须去两个组件

80
00:03:42,438 --> 00:03:45,060
并在两个地方改变我们的逻辑

81
00:03:46,090 --> 00:03:47,560
在更大的应用中，

82
00:03:47,560 --> 00:03:49,400
我们可能有更多的地方

83
00:03:49,400 --> 00:03:52,030
我们需要改变逻辑的地方。

84
00:03:52,030 --> 00:03:53,990
现在，有很多代码重复

85
00:03:53,990 --> 00:03:57,253
这正是我们有这个突变概念的原因。

86
00:03:58,160 --> 00:04:01,360
回到我们创建商店的 main.js，

87
00:04:01,360 --> 00:04:03,360
我们这里不仅有状态，

88
00:04:03,360 --> 00:04:06,180
我们也有突变。

89
00:04:06,180 --> 00:04:08,196
Mutations 需要一个对象

90
00:04:08,196 --> 00:04:12,010
在这个对象中，你可以定义方法。

91
00:04:12,010 --> 00:04:15,770
例如，我 addOne 方法或增量。

92
00:04:15,770 --> 00:04:17,142
随便你怎么称呼。

93
00:04:18,060 --> 00:04:20,920
这个方法应该包含逻辑

94
00:04:20,920 --> 00:04:22,493
改变这种状态。

95
00:04:23,550 --> 00:04:26,610
现在，这个方法会自动获取当前状态

96
00:04:26,610 --> 00:04:28,410
作为论据。

97
00:04:28,410 --> 00:04:30,720
这是由 Vuex 保证的。

98
00:04:30,720 --> 00:04:32,490
Vuex 会给我们当前的状态

99
00:04:32,490 --> 00:04:34,340
每当触发此方法时

100
00:04:34,340 --> 00:04:36,980
我会告诉你如何触发这种方法

101
00:04:36,980 --> 00:04:37,823
在一秒钟内。

102
00:04:38,760 --> 00:04:40,870
既然我们在这里得到了当前状态，

103
00:04:40,870 --> 00:04:43,320
保证的最新状态，

104
00:04:43,320 --> 00:04:45,730
我们可以在这里访问 state.counter

105
00:04:45,730 --> 00:04:47,920
并将其加一。

106
00:04:47,920 --> 00:04:50,730
当然，还有这段代码。

107
00:04:50,730 --> 00:04:52,640
或者如果我们改变我们的逻辑，

108
00:04:52,640 --> 00:04:54,023
我们在这里简单地改变它。

109
00:04:55,120 --> 00:04:57,870
现在我们要触发这个突变

110
00:04:57,870 --> 00:04:59,340
从所有地方

111
00:04:59,340 --> 00:05:01,700
这应该会改变我们的状态。

112
00:05:01,700 --> 00:05:03,610
当然，应该不用多说

113
00:05:03,610 --> 00:05:05,770
你可以有多个突变。

114
00:05:05,770 --> 00:05:08,853
您可以根据应用程序的需要拥有任意数量。

115
00:05:09,800 --> 00:05:11,170
所以这里我有一个

116
00:05:11,170 --> 00:05:14,250
我想为 App.vue 中的按钮触发它

117
00:05:14,250 --> 00:05:16,670
以及 ChangeCounter 中的按钮。

118
00:05:16,670 --> 00:05:19,980
现在，让我们从 ChangeCounter 中的按钮开始。

119
00:05:19,980 --> 00:05:22,350
在这里，要触发突变，

120
00:05:22,350 --> 00:05:25,020
我们访问 this.$store

121
00:05:25,020 --> 00:05:28,610
但现在我们有了一个提交方法。

122
00:05:28,610 --> 00:05:29,950
这是一个内置的方法，

123
00:05:29,950 --> 00:05:33,037
Vuex 在其商店中为您提供。

124
00:05:33,037 --> 00:05:36,137
并且 commit 取名

125
00:05:36,137 --> 00:05:38,833
您要执行的突变。

126
00:05:40,280 --> 00:05:42,730
在这种情况下，这是增量

127
00:05:42,730 --> 00:05:45,710
并且名称应作为字符串提供。

128
00:05:45,710 --> 00:05:49,500
它是增量，因为我命名了我的突变增量。

129
00:05:49,500 --> 00:05:51,600
如果您在这里使用了不同的名称，

130
00:05:51,600 --> 00:05:54,143
您还需要提交一个不同的名称。

131
00:05:55,270 --> 00:05:59,490
但是现在我们可以在 ChangeCounter 中提交这个

132
00:05:59,490 --> 00:06:01,023
并且也在 App.vue 中。

133
00:06:02,250 --> 00:06:04,260
现在我们移动了逻辑，

134
00:06:04,260 --> 00:06:07,740
关于如何更新状态的具体逻辑

135
00:06:07,740 --> 00:06:10,140
的组件进入我们的商店，

136
00:06:10,140 --> 00:06:11,720
进入这个突变。

137
00:06:11,720 --> 00:06:14,220
我们只是提交这个突变

138
00:06:14,220 --> 00:06:16,480
从我们的组件内部。

139
00:06:16,480 --> 00:06:17,963
所以现在，如果我们保存它，

140
00:06:19,500 --> 00:06:21,190
这仍然有效

141
00:06:21,190 --> 00:06:23,300
但现在在突变的帮助下，

142
00:06:23,300 --> 00:06:25,080
哪个更优雅

143
00:06:25,080 --> 00:06:28,363
以及更新我们状态的更可预测的方式。