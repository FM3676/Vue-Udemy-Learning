1
00:00:02,240 --> 00:00:06,610
现在一些突变可能需要参数。

2
00:00:06,610 --> 00:00:08,690
在这里，我们得到了增量突变

3
00:00:08,690 --> 00:00:11,410
以及我们增加 this 的值

4
00:00:11,410 --> 00:00:13,853
被硬编码到这个代码中。

5
00:00:15,000 --> 00:00:17,990
我们可以添加和增加突变，

6
00:00:17,990 --> 00:00:20,900
这也说明并说在这里，

7
00:00:20,900 --> 00:00:23,360
我们也想换柜台，

8
00:00:23,360 --> 00:00:27,330
但我们实际上想将它增加一个值

9
00:00:27,330 --> 00:00:31,313
可以在提交此突变时定义。

10
00:00:32,520 --> 00:00:35,940
你也允许这种情况，

11
00:00:35,940 --> 00:00:39,980
你的突变实际上也有第二个论点，

12
00:00:39,980 --> 00:00:43,603
有效载荷，因此可以作为挂件的数据包。

13
00:00:44,620 --> 00:00:47,270
我将在这里命名参数有效载荷，

14
00:00:47,270 --> 00:00:50,650
当然，这些名称最终取决于您。

15
00:00:50,650 --> 00:00:52,700
现在有效载荷可以是任何东西。

16
00:00:52,700 --> 00:00:56,420
它可以是一个数字，它可以是一个字符串，它可以是一个对象。

17
00:00:56,420 --> 00:00:59,780
假设在这里，我们假设它将是一个对象

18
00:00:59,780 --> 00:01:01,723
我们有一个价值属性。

19
00:01:02,560 --> 00:01:04,450
但这完全取决于你

20
00:01:04,450 --> 00:01:06,730
这是您的商店，您的应用程序，

21
00:01:06,730 --> 00:01:10,943
您可以期待任何关于已提交突变的数据。

22
00:01:11,890 --> 00:01:13,743
但是我们现在怎么称呼它呢？

23
00:01:14,820 --> 00:01:19,370
好吧，让我们和 ChangeCounter，我们说加两个，

24
00:01:19,370 --> 00:01:22,530
因为这更适合这里发生的事情，

25
00:01:22,530 --> 00:01:25,870
但在 App.vue 中，我不想提交增量，

26
00:01:25,870 --> 00:01:28,050
但新增加突变

27
00:01:29,180 --> 00:01:31,563
我想将 TheCounter 增加 10。

28
00:01:32,510 --> 00:01:36,240
现在，我仍然不想操纵状态

29
00:01:36,240 --> 00:01:38,320
从洞察这个组件。

30
00:01:38,320 --> 00:01:40,780
我仍然想使用突变，

31
00:01:40,780 --> 00:01:43,860
但我想传递这个数据包

32
00:01:43,860 --> 00:01:48,640
给这个突变让我们有一定的灵活性。

33
00:01:48,640 --> 00:01:51,720
对于该提交，需要第二个参数，

34
00:01:51,720 --> 00:01:53,460
这将是有效载荷，

35
00:01:53,460 --> 00:01:56,920
然后在您的突变中收到。

36
00:01:56,920 --> 00:01:58,390
所以这里的第二个论点，

37
00:01:58,390 --> 00:02:02,360
确实也是您可以传递给提交的第二个参数。

38
00:02:02,360 --> 00:02:04,430
这可以是我提到的任何东西，

39
00:02:04,430 --> 00:02:08,180
一个数字，一个字符串，但这里应该是一个对象

40
00:02:08,180 --> 00:02:10,699
具有价值属性，因为

41
00:02:10,699 --> 00:02:12,310
这就是我在这里所期待的。

42
00:02:12,310 --> 00:02:16,803
我在这里访问我的突变中有效负载上的点值。

43
00:02:17,840 --> 00:02:20,390
所以在这里我提供一个值，在这种情况下，

44
00:02:20,390 --> 00:02:23,523
假设值是一个数字，它是数字 10。

45
00:02:24,800 --> 00:02:29,800
如果我们现在保存并重新加载，加二加二，

46
00:02:30,070 --> 00:02:33,730
因为它提交了增量突变。

47
00:02:33,730 --> 00:02:38,290
但是 add 10 添加 10 因为它调用增加突变

48
00:02:38,290 --> 00:02:41,543
具有包含此值 10 的有效负载。

49
00:02:43,110 --> 00:02:48,110
所以有效载荷额外的数据可以传递给你的突变。

50
00:02:49,320 --> 00:02:52,670
顺便说一句，你还有另一种提交方式，

51
00:02:52,670 --> 00:02:54,710
这种方法没有错，

52
00:02:54,710 --> 00:02:59,710
但你也可以调用 commit 并传递一个对象来提交。

53
00:03:00,680 --> 00:03:04,080
现在这个对象现在需要有一个类型属性

54
00:03:04,080 --> 00:03:06,200
其中包含突变的名称

55
00:03:06,200 --> 00:03:08,220
应该这样做。

56
00:03:08,220 --> 00:03:12,380
但除此之外，它还可以包含任意数量的属性。

57
00:03:12,380 --> 00:03:15,350
例如这里，这个值属性，

58
00:03:15,350 --> 00:03:19,530
然后就是这个没有类型的对象，可以这么说，

59
00:03:19,530 --> 00:03:23,513
它将作为此突变的有效负载提供。

60
00:03:24,480 --> 00:03:27,020
所以这只是另一种提交方式

61
00:03:27,020 --> 00:03:29,713
这取决于您，您更喜欢哪种方法。

62
00:03:30,660 --> 00:03:33,363
正如您在此处看到的那样，这也将起作用。

63
00:03:34,700 --> 00:03:38,470
现在这些是突变，并且有明显的优势

64
00:03:38,470 --> 00:03:40,510
你移动了具体的逻辑65
00:03:40,510 --> 00:03:44,130
这会将您的状态更改为您的商店。

66
00:03:44,130 --> 00:03:46,380
当然，这里的逻辑非常简单，

67
00:03:46,380 --> 00:03:49,330
但这最终可能会更加复杂。

68
00:03:49,330 --> 00:03:53,280
你只需从组件内部提交突变，

69
00:03:53,280 --> 00:03:55,700
所以你永远不会，这真的很重要。

70
00:03:55,700 --> 00:03:59,930
您永远不会直接从组件内部添加状态。

71
00:03:59,930 --> 00:04:02,550
这不是一个好的做法。

72
00:04:02,550 --> 00:04:05,313
您应该改用突变。