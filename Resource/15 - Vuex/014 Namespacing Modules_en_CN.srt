1
00:00:02,260 --> 00:00:04,460
现在除了这个地方州，

2
00:00:04,460 --> 00:00:07,700
您还可以将整个模块本地化。

3
00:00:07,700 --> 00:00:11,750
你可以让它命名间隔，因为它被称为，

4
00:00:11,750 --> 00:00:14,560
确保多个模块

5
00:00:14,560 --> 00:00:17,350
彼此明显分开。

6
00:00:17,350 --> 00:00:20,220
现在你为什么要这样做？

7
00:00:20,220 --> 00:00:22,490
好吧，随着您的应用程序的增长，

8
00:00:22,490 --> 00:00:25,320
你当然可以有名字冲突。

9
00:00:25,320 --> 00:00:29,210
您可能正在使用相同的 getter 或相同的操作名称

10
00:00:29,210 --> 00:00:33,190
在同一商店的不同模块中。

11
00:00:33,190 --> 00:00:34,380
这里不是这样，

12
00:00:34,380 --> 00:00:36,630
但如果出于某种原因

13
00:00:36,630 --> 00:00:40,410
我们在这里有一个登录动作，在计数器模块中，

14
00:00:40,410 --> 00:00:44,650
这将与登录操作发生冲突

15
00:00:44,650 --> 00:00:46,363
我们进了我们的主要商店。

16
00:00:47,510 --> 00:00:49,940
因为此刻，除了国家，

17
00:00:49,940 --> 00:00:53,963
基本上所有东西都合并为一个对象。

18
00:00:55,150 --> 00:00:57,680
所以在更大的应用程序中，你可能会遇到这样的冲突

19
00:00:57,680 --> 00:01:02,680
为了避免这种情况，您可以命名空间模块。

20
00:01:03,500 --> 00:01:05,870
你可以通过添加一个额外的选项来做到这一点，

21
00:01:05,870 --> 00:01:07,860
在你的对象里面，

22
00:01:07,860 --> 00:01:10,210
这就是名称间隔选项

23
00:01:10,210 --> 00:01:11,593
您可以将其设置为 true。

24
00:01:13,560 --> 00:01:15,750
如果您添加名称间隔为真，

25
00:01:15,750 --> 00:01:19,030
你告诉 vuex 现在整个模块

26
00:01:19,030 --> 00:01:22,920
而不仅仅是国家应该有点分离

27
00:01:22,920 --> 00:01:24,483
从商店的其余部分。

28
00:01:25,330 --> 00:01:28,280
如果你这样做，你现在会注意到

29
00:01:29,750 --> 00:01:34,363
我们的 getter 和我们的动作调度器不再工作。

30
00:01:35,200 --> 00:01:38,340
因为现在这些动作和吸气剂

31
00:01:38,340 --> 00:01:41,820
不再可在主商店购买。

32
00:01:41,820 --> 00:01:44,040
相反，现在我们必须访问它们

33
00:01:44,040 --> 00:01:47,220
通过指定正确的名称空间。

34
00:01:47,220 --> 00:01:49,763
它是如何工作的，命名空间是什么？

35
00:01:50,820 --> 00:01:54,930
好吧，命名空间就是你分配的这个键

36
00:01:54,930 --> 00:01:59,930
用于将此模块对象中的模块添加到您的商店。

37
00:02:01,540 --> 00:02:03,660
所以就我而言，数字。

38
00:02:03,660 --> 00:02:07,350
那是计数器模块之外的名称空间。

39
00:02:07,350 --> 00:02:09,820
我们现在需要使用这个名字空间

40
00:02:09,820 --> 00:02:12,790
与动作、吸气剂等一起工作

41
00:02:12,790 --> 00:02:14,363
在这个模块里面。

42
00:02:15,870 --> 00:02:17,510
现在这将是如何工作的。

43
00:02:17,510 --> 00:02:22,440
在最喜欢的值中，我访问了我的标准化计数器 getter。

44
00:02:22,440 --> 00:02:25,800
现在你不能访问点归一化计数器

45
00:02:25,800 --> 00:02:28,120
而是一个特殊的属性名称，

46
00:02:28,120 --> 00:02:30,090
其中包含一个特殊字符，

47
00:02:30,090 --> 00:02:31,360
因此，您必须访问其中

48
00:02:31,360 --> 00:02:33,630
用这个方括号表示法。

49
00:02:33,630 --> 00:02:38,090
你在这里传入一个字符串，你的属性名作为一个字符串，

50
00:02:38,090 --> 00:02:41,330
这个属性名称现在由

51
00:02:41,330 --> 00:02:45,700
旧的属性名称，所以归一化计数器，

52
00:02:45,700 --> 00:02:48,310
但在那之前，在那之前，

53
00:02:48,310 --> 00:02:50,550
你有你的名字空间。

54
00:02:50,550 --> 00:02:52,593
所以就我而言，数字。

55
00:02:54,270 --> 00:02:58,570
所以你有数字，然后中间有一个斜线。

56
00:02:58,570 --> 00:02:59,660
可能看起来很奇怪

57
00:02:59,660 --> 00:03:03,053
但现在这是标准化计数器的属性名称，

58
00:03:04,170 --> 00:03:07,500
命名空间，斜线，然后是你的吸气剂名称，

59
00:03:07,500 --> 00:03:09,220
动作名称，不管它是什么。

60
00:03:09,220 --> 00:03:10,620
在这种情况下，它是一个吸气剂。

61
00:03:12,530 --> 00:03:15,200
那时我们现在在这里至少看到一个柜台，

62
00:03:15,200 --> 00:03:17,040
就是这个标准化的计数器，

63
00:03:17,040 --> 00:03:18,590
我这样输出。

64
00:03:19,970 --> 00:03:23,700
现在，如果您使用的是地图吸气剂，

65
00:03:23,700 --> 00:03:27,063
你将第一个参数传递给 map getter，

66
00:03:27,980 --> 00:03:31,390
这是你的名字空间，在这种情况下是数字，

67
00:03:31,390 --> 00:03:33,760
然后在你仍然添加你的数组之后

68
00:03:33,760 --> 00:03:36,600
像以前一样使用吸气剂名称。

69
00:03:36,600 --> 00:03:38,520
所以如果我们保存这个，

70
00:03:38,520 --> 00:03:40,523
第二个柜台也回来了。

71
00:03:42,020 --> 00:03:44,120
所以命名空间作为第一个参数，

72
00:03:44,120 --> 00:03:47,040
那么第二个参数仍然是你的吸气剂数组

73
00:03:47,040 --> 00:03:48,653
在该名称空间内。

74
00:03:50,640 --> 00:03:52,970
当然，其他部分也是如此。

75
00:03:52,970 --> 00:03:56,730
映射操作将名称空间作为第一个参数

76
00:03:56,730 --> 00:04:00,000
然后你的动作名称和以前一样。

77
00:04:00,000 --> 00:04:05,000
在应用程序 vue 中，我们正在调度中，

78
00:04:05,450 --> 00:04:07,480
我实际上是手动发送的，

79
00:04:07,480 --> 00:04:11,793
类型现在是数字斜线增加。

80
00:04:12,920 --> 00:04:16,423
再说一遍，命名空间斜线，然后是动作名称。

81
00:04:18,440 --> 00:04:22,380
有了这个，所有的按钮现在又可以工作了

82
00:04:22,380 --> 00:04:25,170
现在我们将来会使用这个命名空间

83
00:04:25,170 --> 00:04:29,140
分离我们的模块并确保

84
00:04:29,140 --> 00:04:32,170
我们没有任何名称冲突，

85
00:04:32,170 --> 00:04:34,050
我们这里当然没有，

86
00:04:34,050 --> 00:04:36,983
但是你在更大的应用程序中肯定可以拥有。

87
00:04:38,230 --> 00:04:42,120
有了这个，我们将一个模块与我们的主商店合并，

88
00:04:42,120 --> 00:04:44,630
我们仍然有一些全局状态，

89
00:04:44,630 --> 00:04:46,460
身份验证状态，

90
00:04:46,460 --> 00:04:48,870
但我们绝对可以像这样组合它

91
00:04:48,870 --> 00:04:51,230
我们甚至命名空间我们的模块

92
00:04:51,230 --> 00:04:53,810
以确保我们不会意外

93
00:04:53,810 --> 00:04:56,540
触发此模块内部的操作

94
00:04:56,540 --> 00:04:59,930
当我们真正想要触发一个全局动作时，

95
00:04:59,930 --> 00:05:00,923
例如。