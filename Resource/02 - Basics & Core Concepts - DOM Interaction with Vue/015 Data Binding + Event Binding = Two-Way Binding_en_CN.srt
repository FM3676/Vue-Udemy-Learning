1
00:00:02,130 --> 00:00:05,820
所以回到项目之前工作过。

2
00:00:05,820 --> 00:00:08,920
有点简化，我转储了事件修饰符，

3
00:00:08,920 --> 00:00:12,500
我转储了 v-ons，你发现附上了这个快照

4
00:00:12,500 --> 00:00:15,360
以防万一你们都不想从这个讲座开始，

5
00:00:15,360 --> 00:00:17,700
嗯，又是这个状态。

6
00:00:17,700 --> 00:00:19,290
所以我回到了这个项目

7
00:00:19,290 --> 00:00:21,900
我们有这个按钮的输入元素

8
00:00:21,900 --> 00:00:23,933
用于柜台等。

9
00:00:25,070 --> 00:00:29,670
现在假设我们的目标是拥有另一个按钮

10
00:00:29,670 --> 00:00:33,740
也许在我们说resetInput的输入下方。

11
00:00:34,760 --> 00:00:36,930
按钮应该做顾名思义。

12
00:00:36,930 --> 00:00:41,223
它应该重置输入元素中的输入。

13
00:00:42,420 --> 00:00:45,360
为此，我们可以添加一个新方法，

14
00:00:45,360 --> 00:00:48,710
重置输入，或者你想命名它。

15
00:00:48,710 --> 00:00:52,690
在那里，我们如何做到这一点？

16
00:00:52,690 --> 00:00:56,400
在那里，我们现在要清除此输入。

17
00:00:56,400 --> 00:00:59,700
现在我们可以尝试访问输入

18
00:00:59,700 --> 00:01:04,700
例如，通过带有 document.querySelector 的 JavaScript，

19
00:01:05,660 --> 00:01:07,680
像这样访问输入，

20
00:01:07,680 --> 00:01:11,453
访问 value 属性并将其设置为空字符串。

21
00:01:12,440 --> 00:01:16,440
这实际上可能有效，但它非常hacky。

22
00:01:16,440 --> 00:01:19,990
我们没有使用 Vue 来回退

23
00:01:19,990 --> 00:01:22,980
如此明确的 JavaScript 指令。

24
00:01:22,980 --> 00:01:25,650
这不是使用 Vue 背后的想法。

25
00:01:25,650 --> 00:01:27,670
相反，我们想留在 Vue 世界

26
00:01:27,670 --> 00:01:30,553
并为此利用 Vue 及其特性。

27
00:01:31,390 --> 00:01:33,640
那么我们怎么能这样做呢？

28
00:01:33,640 --> 00:01:38,640
好吧，我们可以使用名称，数据属性，

29
00:01:40,340 --> 00:01:43,260
这是我们最终要更新的值

30
00:01:43,260 --> 00:01:44,970
在每一次击键上。

31
00:01:44,970 --> 00:01:49,750
并通过设置值将其输出到输入中，

32
00:01:49,750 --> 00:01:53,260
value 属性等于 name，但是，不是这样的，

33
00:01:53,260 --> 00:01:57,390
但是因为名称是动态的并且由 Vue 管理

34
00:01:57,390 --> 00:01:59,273
在 v-bind 的帮助下。

35
00:02:00,280 --> 00:02:05,280
有了这个，我要确保这里反映了这个名字。

36
00:02:05,740 --> 00:02:08,900
所以这里的这个名字反映在输入中。

37
00:02:08,900 --> 00:02:10,660
我为什么要这样做？

38
00:02:10,660 --> 00:02:14,020
好吧，如果我现在去 resetInput

39
00:02:14,020 --> 00:02:17,050
并将此名称设置为空字符串，

40
00:02:17,050 --> 00:02:21,010
该空值应反映在输入中

41
00:02:21,010 --> 00:02:25,000
我们应该能够将其设置回空字符串。

42
00:02:25,000 --> 00:02:27,110
现在我们会遇到一个问题。

43
00:02:27,110 --> 00:02:29,970
那就是在集合名称中，

44
00:02:29,970 --> 00:02:32,900
我没有将名称设置为用户输入的内容，

45
00:02:32,900 --> 00:02:36,980
但是用户输入的内容加上姓氏。

46
00:02:36,980 --> 00:02:39,530
这会导致一种奇怪的行为

47
00:02:39,530 --> 00:02:42,590
如果我们在此处将名称反射回此输入，

48
00:02:42,590 --> 00:02:44,050
我其实可以给你看的。

49
00:02:44,050 --> 00:02:48,010
如果我重新加载你会看到我是否开始打字

50
00:02:48,010 --> 00:02:50,850
施瓦茨穆勒一遍又一遍地被添加，

51
00:02:50,850 --> 00:02:52,690
这不是想法。

52
00:02:52,690 --> 00:02:55,960
所以暂时，让我们摆脱这个姓氏，

53
00:02:55,960 --> 00:02:57,400
我们在这里添加。

54
00:02:57,400 --> 00:03:00,250
让我们只存储用户输入的内容

55
00:03:00,250 --> 00:03:02,680
名字中的每一次击键，

56
00:03:02,680 --> 00:03:05,700
然后将命名反射回输入

57
00:03:05,700 --> 00:03:09,230
这样我们就可以真正反映用户输入的内容。

58
00:03:09,230 --> 00:03:14,040
现在让我们在这里也用 v-on:click 连接这个按钮

59
00:03:15,009 --> 00:03:19,010
到这个新添加的 resetInput 方法

60
00:03:19,010 --> 00:03:20,240
以便触发

61
00:03:20,240 --> 00:03:22,890
当按下 resetInput 按钮时。

62
00:03:22,890 --> 00:03:24,630
有了这个，如果我现在重新加载，

63
00:03:24,630 --> 00:03:27,400
我可以在这里输入 Max，一切正常。

64
00:03:27,400 --> 00:03:30,950
但是如果我点击resetInput，我们就会清除它。

65
00:03:30,950 --> 00:03:33,210
我们也在段落中清除了

66
00:03:33,210 --> 00:03:36,580
因为我们指的是同一个名字，

67
00:03:36,580--> 00:03:38,390
我们在这里重置，

68
00:03:38,390 --> 00:03:40,660
但这只是这里的一个小副作用。

69
00:03:40,660 --> 00:03:42,790
当然，如果你想阻止这种情况，

70
00:03:42,790 --> 00:03:45,510
我们可以使用一个单独的值，它会在这里输出，

71
00:03:45,510 --> 00:03:49,200
这在点击进入或类似的东西时得到确认。

72
00:03:49,200 --> 00:03:53,200
我之前展示过，我们如何使用两个值，

73
00:03:53,200 --> 00:03:55,430
确认输入和不规则输入，

74
00:03:55,430 --> 00:03:57,760
但这不是它的目的。

75
00:03:57,760 --> 00:04:00,920
相反，这是关于以下事实的

76
00:04:00,920 --> 00:04:03,970
这是您在某些情况下可能需要的模式。

77
00:04:03,970 --> 00:04:07,460
您可能有不只是想要的输入

78
00:04:07,460 --> 00:04:10,220
获取用户输入的值，

79
00:04:10,220 --> 00:04:14,170
但是您还想在哪里设置值

80
00:04:14,170 --> 00:04:16,790
输入，以便您，例如，

81
00:04:16,790 --> 00:04:19,990
可以用按钮或任何其他逻辑重置它

82
00:04:19,990 --> 00:04:22,130
你在你的页面上。

83
00:04:22,130 --> 00:04:24,030
然后你就可以做到这一点

84
00:04:24,030 --> 00:04:26,220
不只是聆听输入，

85
00:04:26,220 --> 00:04:30,790
但也可以将存储的值发送回输入

86
00:04:30,790 --> 00:04:32,900
通过绑定 value 属性。

87
00:04:32,900 --> 00:04:35,690
这是您可能需要的常见模式。

88
00:04:35,690 --> 00:04:37,840
实际上这很常见

89
00:04:37,840 --> 00:04:39,560
你需要这样的东西

90
00:04:39,560 --> 00:04:43,220
你可以说 Vue 有一个捷径。

91
00:04:43,220 --> 00:04:47,360
它有一个特殊的内置指令，可以简化这一点。

92
00:04:47,360 --> 00:04:52,360
如果绑定值并监听输入的输入变化，

93
00:04:53,440 --> 00:04:56,270
你可以摆脱所有这些。

94
00:04:56,270 --> 00:05:00,520
所以无论是值绑定还是输入事件监听，

95
00:05:00,520 --> 00:05:04,760
摆脱两者，而是添加一个新指令

96
00:05:04,760 --> 00:05:08,670
在输入上，v-model 指令。

97
00:05:08,670 --> 00:05:12,950
而这个 v-model 指令现在只是想要

98
00:05:12,950 --> 00:05:16,690
它应该为您管理的数据属性，

99
00:05:16,690 --> 00:05:19,780
所以在我们的例子中，name 属性。

100
00:05:19,780 --> 00:05:23,220
name 属性现在由 Vue 管理

101
00:05:23,220 --> 00:05:27,180
这样它就会在输入事件上更新

102
00:05:27,180 --> 00:05:30,710
然后将名称属性值发回

103
00:05:30,710 --> 00:05:32,290
进入输入元素。

104
00:05:32,290 --> 00:05:37,290
所以 v-model 只是 v-bind 值的一个捷径

105
00:05:38,450 --> 00:05:40,310
和 v-on 输入，

106
00:05:40,310 --> 00:05:42,637
v-model 只是一个捷径。

107
00:05:42,637 --> 00:05:44,480
如果我现在保存并重新加载，

108
00:05:44,480 --> 00:05:46,850
因此，我们得到与以前相同的行为

109
00:05:47,810 --> 00:05:49,590
但代码更少。

110
00:05:49,590 --> 00:05:52,980
这是一个叫做双向绑定的概念

111
00:05:52,980 --> 00:05:55,760
因为我们以两种方式交流，

112
00:05:55,760 --> 00:05:58,610
我们正在聆听即将到来的事件

113
00:05:58,610 --> 00:06:02,170
在输入元素之外，您可以对输入事件说。

114
00:06:02,170 --> 00:06:06,050
同时，我们将值写回

115
00:06:06,050 --> 00:06:09,750
通过其 value 属性到 input 元素，

116
00:06:09,750 --> 00:06:11,900
通过它的价值属性。

117
00:06:11,900 --> 00:06:13,710
这就是为什么它被称为双向绑定

118
00:06:13,710 --> 00:06:16,630
因为我们双向交流。

119
00:06:16,630 --> 00:06:18,120
这很有用，

120
00:06:18,120 --> 00:06:21,480
它使获取用户输入并对其进行更新

121
00:06:21,480 --> 00:06:23,170
如您所知，要容易得多，

122
00:06:23,170 --> 00:06:25,760
它的代码更少，因此绝对

123
00:06:25,760 --> 00:06:29,280
一个模式，特别是一个指令

124
00:06:29,280 --> 00:06:30,480
你应该记住。