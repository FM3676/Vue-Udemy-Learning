1
00:00:02,710 --> 00:00:05,150
所以现在我们知道了如何构建我们的 Vue 应用程序，

2
00:00:05,150 --> 00:00:08,100
如何输出内容或绑定属性。

3
00:00:08,100 --> 00:00:11,880
然后我们可以在数据中设置一些数据

4
00:00:11,880 --> 00:00:15,005
并在我们的 HTML 代码中引用它，

5
00:00:15,005 --> 00:00:18,033
或者我们也可以定义被调用的方法。

6
00:00:19,640 --> 00:00:21,440
这真的取决于你正在建造什么

7
00:00:21,440 --> 00:00:23,923
以及你的应用目标到底是什么。

8
00:00:24,870 --> 00:00:27,794
现在，在我们练习那些最初的重要概念之前，

9
00:00:27,794 --> 00:00:31,240
还有一些其他的事情你应该知道

10
00:00:31,240 --> 00:00:34,200
Vue 以及如何使用它的数据。

11
00:00:34,200 --> 00:00:37,010
例如，假设我们有我们的 courseGoals

12
00:00:37,010 --> 00:00:39,350
存储在数据属性中。

13
00:00:39,350 --> 00:00:42,160
我们在这里有我们的粗略目标A，

14
00:00:42,160 --> 00:00:44,930
我们在这里得到了我们的粗略目标B，

15
00:00:44,930 --> 00:00:48,680
掌握 Vue 并构建出色的应用程序。

16
00:00:48,680 --> 00:00:51,530
所以，我们现在有两个不同的目标。

17
00:00:51,530 --> 00:00:54,890
而不是在这里返回硬编码的字符串

18
00:00:54,890 --> 00:00:59,220
在 outputGoal 中，我想输出这两个目标之一，

19
00:00:59,220 --> 00:01:01,560
在数据中定义。

20
00:01:01,560 --> 00:01:03,380
这在 Vue 中很容易做到，

21
00:01:03,380 --> 00:01:06,790
但它使用了一个特殊的功能或语法，

22
00:01:06,790 --> 00:01:08,940
你应该知道的。

23
00:01:08,940 --> 00:01:11,220
假设在这里，如果随机数

24
00:01:11,220 --> 00:01:15,843
小于点 5，我想返回 courseGoalA。

25
00:01:16,860 --> 00:01:20,570
现在我们不能只在这里写 courseGoalA。

26
00:01:20,570 --> 00:01:23,210
这不是有效的 JavaScript。

27
00:01:23,210 --> 00:01:25,870
使用这段代码，JavaScript 会寻找

28
00:01:25,870 --> 00:01:29,568
一个 courseGoalA 变量或常量，它不会找到

29
00:01:29,568 --> 00:01:33,870
因为这里 courseGoalA 不是变量或常量，

30
00:01:33,870 --> 00:01:35,793
它是这个对象的一个​​属性。

31
00:01:37,200 --> 00:01:38,780
但是我们可以使用语法，

32
00:01:38,780 --> 00:01:42,830
你可能不会认为它有效。

33
00:01:42,830 --> 00:01:45,313
你可以使用 this.courseGoalA。

34
00:01:46,230 --> 00:01:49,270
现在，根据你的 JavaScript 知识水平，

35
00:01:49,270 --> 00:01:51,390
这可能看起来很奇怪。

36
00:01:51,390 --> 00:01:54,960
this 关键字是 JavaScript 中的核心关键字，

37
00:01:54,960 --> 00:01:58,030
这可能很棘手，但在这种情况下，

38
00:01:58,030 --> 00:02:02,260
this 不应该在这里引用这个对象。

39
00:02:02,260 --> 00:02:04,040
它应该指的是别的东西。

40
00:02:04,040 --> 00:02:09,039
它通常会，但是 Vue 在这里做了一些魔术。

41
00:02:09,240 --> 00:02:12,820
它基本上需要您返回的所有数据

42
00:02:12,820 --> 00:02:16,738
在这个数据对象中，你返回数据方法，

43
00:02:16,738 --> 00:02:21,738
并将其合并到一个全局 Vue 实例对象中。

44
00:02:22,500 --> 00:02:25,743
所以进入你的 Vue 应用程序对象，你可以说。

45
00:02:27,470 --> 00:02:30,810
所以，这三个数据属性是可用的

46
00:02:30,810 --> 00:02:34,453
在幕后管理的 Vue 应用程序对象中。

47
00:02:35,300 --> 00:02:38,760
你的方法也在那里可用。

48
00:02:38,760 --> 00:02:41,550
他们确实可以访问存储的任何内容

49
00:02:41,550 --> 00:02:45,250
通过 this 关键字在该全局对象中。

50
00:02:45,250 --> 00:02:49,920
这就是为什么在方法内部的这个自定义方法中，

51
00:02:49,920 --> 00:02:54,263
例如，我们可以使用它来引用我们的数据。

52
00:02:55,220 --> 00:02:59,163
所以，我们也可以在这里执行此操作，this.courseGoalB。

53
00:03:01,636 --> 00:03:02,980
如果我保存并重新加载，

54
00:03:02,980 --> 00:03:05,910
因此，我们现在输出这些不同的课程目标，

55
00:03:05,910 --> 00:03:09,593
借助此方法将其存储在我们的数据中。

56
00:03:10,810 --> 00:03:13,520
并了解 this 关键字

57
00:03:13,520 --> 00:03:16,150
以及它在您的方法中所指的内容

58
00:03:16,150 --> 00:03:18,380
在你的 Vue 应用程序中，这很重要，

59
00:03:18,380 --> 00:03:20,310
因为我们要做很多工作

60
00:03:20,310 --> 00:03:21,460
在整个课程中。