1
00:00:02,090 --> 00:00:05,500
现在我们介绍了两个超级重要的功能。

2
00:00:05,500 --> 00:00:09,220
我们如何创建 Vue 实例并配置数据，

3
00:00:09,220 --> 00:00:10,410
我们可以在那里使用，

4
00:00:10,410 --> 00:00:13,480
以及我们如何通过插值输出数据。

5
00:00:13,480 --> 00:00:17,350
现在，您并不总是想使用插值

6
00:00:17,350 --> 00:00:18,980
不过，用于输出数据。

7
00:00:18,980 --> 00:00:20,163
这是一个例子。

8
00:00:21,030 --> 00:00:23,257
假设我们有第二段，我说，

9
00:00:23,257 --> 00:00:26,800
“了解有关 Vue 的更多信息”，

10
00:00:26,800 --> 00:00:30,120
我想确保“关于 Vue”是一个链接。

11
00:00:30,120 --> 00:00:33,370
当然我们可以使用带有 ref 属性的锚标签

12
00:00:33,370 --> 00:00:37,140
为此，将其围绕“关于 Vue”。

13
00:00:37,140 --> 00:00:39,080
如果我这样做，这就是我们得到的。

14
00:00:39,080 --> 00:00:42,193
现在在这里，我们可以传递我们的链接。

15
00:00:43,920 --> 00:00:47,930
现在，就像以前一样，我们可以绝对硬编码

16
00:00:47,930 --> 00:00:51,340
这在我们的 HTML 代码中，

17
00:00:51,340 --> 00:00:56,340
但是让我们再次将链接值存储在我们的 Vue 应用程序中，

18
00:00:57,760 --> 00:01:01,940
然后添加一些语法来在这里输出存储的值，

19
00:01:01,940 --> 00:01:04,819
只是为了在下一步的后面，我们可以做到这一点

20
00:01:04,819 --> 00:01:06,700
更有活力一点。

21
00:01:06,700 --> 00:01:09,330
因此，为此，我将添加第二个属性

22
00:01:09,330 --> 00:01:12,470
到数据中返回的这个对象，

23
00:01:12,470 --> 00:01:13,937
我将其命名为“vueLink”。

24
00:01:14,860 --> 00:01:18,700
现在这又是一个可以通向页面的字符串

25
00:01:18,700 --> 00:01:21,670
在这里您可以了解有关 Vue 的更多信息。

26
00:01:21,670 --> 00:01:24,950
现在在这里，我只是要使用官方的 Vue 网页，

27
00:01:24,950 --> 00:01:27,940
但是你当然可以在这里使用任何东西。

28
00:01:27,940 --> 00:01:31,610
现在，这个 vueLink 属性现在包含链接

29
00:01:31,610 --> 00:01:35,020
应该在这里输出，我们当然可以尝试

30
00:01:35,020 --> 00:01:38,140
在这里使用我们的花括号，就像我们做的那样

31
00:01:38,140 --> 00:01:40,530
在段落标签之间，现在我正在这样做

32
00:01:40,530 --> 00:01:43,040
在 ref 属性上。

33
00:01:43,040 --> 00:01:45,520
所以这里我们然后指向 vueLink，

34
00:01:45,520 --> 00:01:49,200
保存，重新加载，然后点击“关于 Vue”

35
00:01:49,200 --> 00:01:52,830
如您所见，这失败了，为什么会失败，

36
00:01:52,830 --> 00:01:54,500
好吧，让我们检查一下

37
00:01:54,500 --> 00:01:56,910
快速使用浏览器开发工具，

38
00:01:56,910 --> 00:01:59,570
我在这里使用 Chrome，您可以在其中右键单击某些内容

39
00:01:59,570 --> 00:02:02,210
检查它，你会看到

40
00:02:02,210 --> 00:02:05,980
ref 属性的值

41
00:02:05,980 --> 00:02:10,789
实际上是未转换的双花括号语法。

42
00:02:10,789 --> 00:02:14,090
很明显 Vue 并没有取代这个

43
00:02:14,090 --> 00:02:16,950
将实际值存储在 vueLink 中，

44
00:02:16,950 --> 00:02:20,340
就像之前在本课程目标部分所做的那样。

45
00:02:20,340 --> 00:02:22,630
现在为什么 Vue 不这样做呢？

46
00:02:22,630 --> 00:02:26,580
我们在 Vue 控制的 HTML 代码中。

47
00:02:26,580 --> 00:02:28,653
所以 Vue 应该检测到这一点。

48
00:02:29,730 --> 00:02:31,120
嗯，原因很简单。

49
00:02:31,120 --> 00:02:35,440
此双花括号语法仅可用

50
00:02:35,440 --> 00:02:38,600
在打开和关闭 HTML 标签之间，你可以说。

51
00:02:38,600 --> 00:02:43,600
因此，您可以在任何地方输出实际内容。

52
00:02:43,720 --> 00:02:48,070
如果您想将动态值传递给属性，

53
00:02:48,070 --> 00:02:52,400
就像这里，我想设置 ref 属性的值，

54
00:02:52,400 --> 00:02:55,590
在Vue的帮助下动态地，我们需要使用

55
00:02:55,590 --> 00:02:59,260
一种不同的语法，幸运的是它是可用的。

56
00:02:59,260 --> 00:03:03,120
这就是 Vue 绑定语法。

57
00:03:03,120 --> 00:03:06,150
为此，我们使用所谓的 vue 指令，

58
00:03:06,150 --> 00:03:08,350
这只是一个额外的指令

59
00:03:08,350 --> 00:03:11,070
我们在 HTML 代码中添加。

60
00:03:11,070 --> 00:03:14,760
我们可以在 HTML 元素上使用这样的指令，

61
00:03:14,760 --> 00:03:17,240
就像在这个锚元素上一样。

62
00:03:17,240 --> 00:03:20,940
我们这里需要的指令是 v-bind。

63
00:03:20,940 --> 00:03:25,190
V-bind 是一个保留名称，Vue 可以检测和理解，

64
00:03:25,190 --> 00:03:27,590
你可以说它是由 Vue

65
00:03:27,590 --> 00:03:30,130
因为它以“v-”开头。

66
00:03:30,130 --> 00:03:33,530
铝l 内置 Vue 附带的指令，

67
00:03:33,530 --> 00:03:36,060
以“v-”开头，我们将看到

68
00:03:36,060 --> 00:03:38,510
在整个课程中还有其他几个。

69
00:03:39,440 --> 00:03:43,170
现在，这个 v-bind 指令做了什么？

70
00:03:43,170 --> 00:03:46,660
正如我所说，指令基本上是指令。

71
00:03:46,660 --> 00:03:49,970
我们给 Vue 做某事的指令。

72
00:03:49,970 --> 00:03:54,970
v-bind 告诉 Vue 绑定，所以要设置，

73
00:03:55,150 --> 00:03:57,200
某物的价值，

74
00:03:57,200 --> 00:03:59,860
而“某物”部分基本上只是意味着

75
00:03:59,860 --> 00:04:03,580
HTML 元素的属性。

76
00:04:03,580 --> 00:04:07,880
为了让 Vue 知道要设置哪个属性的值，

77
00:04:07,880 --> 00:04:10,410
我们在 v-bind 之后添加一个冒号，

78
00:04:10,410 --> 00:04:13,240
然后是属性名称，在本例中为 ref，

79
00:04:13,240 --> 00:04:16,680
这是 vue 可以理解的完整语法，

80
00:04:16,680 --> 00:04:21,680
动态设置 HTML 元素属性的值，

81
00:04:21,760 --> 00:04:23,820
在这种情况下 ref 属性。

82
00:04:23,820 --> 00:04:27,860
这告诉Vue，请查找，请设置

83
00:04:27,860 --> 00:04:31,120
ref 属性的值，

84
00:04:31,120 --> 00:04:33,180
现在“到某事”在之间传递

85
00:04:33,180 --> 00:04:35,550
这里的开始和结束双引号，

86
00:04:35,550 --> 00:04:39,620
在这里，您现在可以引用一个值

87
00:04:39,620 --> 00:04:43,660
您的数据对象，因此在这种情况下，例如 vueLink，

88
00:04:43,660 --> 00:04:44,980
像这样。

89
00:04:44,980 --> 00:04:48,400
所以这里，v-bind，基本上，你可以说，

90
00:04:48,400 --> 00:04:52,940
此插值语法的替代属性。

91
00:04:52,940 --> 00:04:55,880
您在 HTML 标签之间使用插值，

92
00:04:55,880 --> 00:04:59,190
如果您需要在 HTML 标记上设置值，

93
00:04:59,190 --> 00:05:01,070
所以，对于这样的属性，

94
00:05:01,070 --> 00:05:02,640
你使用 v-bind。

95
00:05:02,640 --> 00:05:04,401
如果您现在保存并重新加载，

96
00:05:04,401 --> 00:05:08,170
我们现在点击这个链接，我被带到了 Vue 码头。

97
00:05:08,170 --> 00:05:11,920
所以我基本上被转发到这个链接指向的页面。

98
00:05:11,920 --> 00:05:15,700
所以现在这行得通，并且 v-bind，就像插值一样，

99
00:05:15,700 --> 00:05:18,000
是您需要了解的关键功能，

100
00:05:18,000 --> 00:05:21,070
因为通常，您不只是想输出内容

101
00:05:21,070 --> 00:05:22,980
在开始和结束标签之间，

102
00:05:22,980 --> 00:05:26,310
经常有需要绑定的场景，

103
00:05:26,310 --> 00:05:30,320
你需要设置一些 HTML 属性的值

104
00:05:30,320 --> 00:05:34,120
到一些 Vue 管理的数据，并使用 v-bind，

105
00:05:34,120 --> 00:05:35,703
这很容易做到。