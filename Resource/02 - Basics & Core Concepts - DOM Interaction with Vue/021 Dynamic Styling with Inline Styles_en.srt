1
00:00:02,330 --> 00:00:03,570
At this point,

2
00:00:03,570 --> 00:00:06,620
we learned about data binding with interpolation

3
00:00:06,620 --> 00:00:09,210
and v-bind, about event binding

4
00:00:09,210 --> 00:00:13,010
and Vue's reactivity, especially also with features

5
00:00:13,010 --> 00:00:15,690
like compute properties or Watchers.

6
00:00:15,690 --> 00:00:18,170
And these are all core features,

7
00:00:18,170 --> 00:00:19,400
which you gotta know.

8
00:00:19,400 --> 00:00:23,370
I guess that's why they are in this basics section.

9
00:00:23,370 --> 00:00:26,130
There's one more basic building block

10
00:00:26,130 --> 00:00:28,630
into which I wanna dive together with you.

11
00:00:28,630 --> 00:00:33,630
And that is styling to be precise, dynamic styling.

12
00:00:33,670 --> 00:00:36,840
And I prepared a basic example for that,

13
00:00:36,840 --> 00:00:40,320
which you'll of course find attached to this lecture.

14
00:00:40,320 --> 00:00:44,160
With dynamic styling, I mean that in Vue,

15
00:00:44,160 --> 00:00:48,810
we can change the style of things on the page.

16
00:00:48,810 --> 00:00:53,050
Well, dynamically in reaction to something, for example,

17
00:00:53,050 --> 00:00:56,093
in reaction to a click or to the user entering something.

18
00:00:57,320 --> 00:00:59,770
Let me show you an example here.

19
00:00:59,770 --> 00:01:04,769
Let's first of all, create a new app with Vue.createApp,

20
00:01:04,840 --> 00:01:08,181
passing our object, store it in a constant maybe,

21
00:01:08,181 --> 00:01:12,440
and then call mount on our app to mount it

22
00:01:12,440 --> 00:01:14,410
to a place in our HTML code.

23
00:01:14,410 --> 00:01:16,330
In this case to this section,

24
00:01:16,330 --> 00:01:19,993
which has two styling ID with hash styling.

25
00:01:20,930 --> 00:01:25,770
And now let's say we want to be able to click on those divs

26
00:01:25,770 --> 00:01:29,010
and highlight the div which is active.

27
00:01:29,010 --> 00:01:30,950
Now one way of doing that,

28
00:01:30,950 --> 00:01:32,650
probably not the shortest way,

29
00:01:32,650 --> 00:01:35,810
but definitely a way that should be easy to understand

30
00:01:35,810 --> 00:01:39,410
is that we have a data, property here

31
00:01:39,410 --> 00:01:42,310
or our data object here in this Vue App.

32
00:01:42,310 --> 00:01:44,730
As we did many times before

33
00:01:44,730 --> 00:01:49,730
and in here we keep track of which div,

34
00:01:49,750 --> 00:01:52,620
which demo div is selected.

35
00:01:52,620 --> 00:01:55,490
We could do this with box A selected,

36
00:01:55,490 --> 00:01:59,812
which we set to false initially box B selected

37
00:01:59,812 --> 00:02:04,270
and then box C selected.

38
00:02:04,270 --> 00:02:06,300
So I'm having free data properties

39
00:02:06,300 --> 00:02:07,790
with different names,

40
00:02:07,790 --> 00:02:11,250
which I will basically mentally connect

41
00:02:11,250 --> 00:02:12,430
to those divs.

42
00:02:12,430 --> 00:02:14,610
And initially they're all set to false

43
00:02:14,610 --> 00:02:17,833
because initially let's say no div is selected.

44
00:02:18,820 --> 00:02:21,760
Now let's add a click listener.

45
00:02:21,760 --> 00:02:25,020
We can not just add click listeners, to buttons.

46
00:02:25,020 --> 00:02:29,189
We can listen to clicks on basically any HTML element

47
00:02:29,189 --> 00:02:34,189
and I'll add a method in my methods object therefore,

48
00:02:34,610 --> 00:02:37,483
which I wanted to fire when this div is clicked.

49
00:02:38,540 --> 00:02:40,073
I'll name it boxSelected.

50
00:02:41,110 --> 00:02:44,390
And actually I want to get the box

51
00:02:44,390 --> 00:02:48,590
so an identifier for which box was selected as an input.

52
00:02:48,590 --> 00:02:50,950
And then here I'll check if box is equal

53
00:02:50,950 --> 00:02:53,920
to let's say A, and if that's the case,

54
00:02:53,920 --> 00:02:58,920
I'll set this box A selected to true else if

55
00:02:59,240 --> 00:03:03,410
box is let's say B I'll set

56
00:03:03,410 --> 00:03:07,290
this box B selected to true.

57
00:03:07,290 --> 00:03:11,023
And else if box is C,

58
00:03:13,990 --> 00:03:18,090
I'll set this box C selected to true.

59
00:03:18,090 --> 00:03:20,490
So these are the options we have here.

60
00:03:20,490 --> 00:03:23,030
And now on the click listener,

61
00:03:23,030 --> 00:03:27,060
I wanna point at box selected or to be precise

62
00:03:27,060 --> 00:03:30,960
I'll use this alternative syntax of executing it myself

63
00:03:30,960 --> 00:03:35,960
by adding parentheses so that I can pass an A as a string,

64
00:03:36,080 --> 00:03:38,520
as a value for this first div.

65
00:03:38,520 --> 00:03:41,270
And then repeat this on the other divs

66
00:03:41,270 --> 00:03:43,140
so that we have an easy way

67
00:03:43,140 --> 00:03:47,800
of using one at the same method for setting different boxes

68
00:03:47,800 --> 00:03:48,833
to select it.

69
00:03:50,920 --> 00:03:53,540
Currently, by the way, there is no way of unselectig them

70
00:03:53,540 --> 00:03:55,483
but for the moment, that's all I need.

71
00:03:56,500 --> 00:03:57,710
So now we have ways

72
00:03:57,710 --> 00:04:00,830
of changing these data properties through clicks,

73
00:04:00,830 --> 00:04:05,090
but I mentioned that I wanna dive into styling with you.

74
00:04:05,090 --> 00:04:09,590
Well, let's say wanna highlight when a box is selected,

75
00:04:09,590 --> 00:04:11,873
and we can do that with Vue.

76
00:04:12,780 --> 00:04:16,209
Let's say we wanna change the border color of a box,

77
00:04:16,209 --> 00:04:17,269
if it is selected,

78
00:04:17,269 --> 00:04:20,149
solve this first box, for example,

79
00:04:20,149 --> 00:04:25,150
well, we can set styles either through CSS and CSS classes,

80
00:04:26,060 --> 00:04:30,270
or also with inline styles by using the style attribute,

81
00:04:30,270 --> 00:04:34,440
which is a available on basically any HTML element.

82
00:04:34,440 --> 00:04:38,460
In there you can do things like this, border color red.

83
00:04:38,460 --> 00:04:42,000
If I saved that we have a red color here on the first box,

84
00:04:42,000 --> 00:04:44,870
but of course this now always applies

85
00:04:44,870 --> 00:04:46,313
not just sometimes.

86
00:04:47,200 --> 00:04:50,800
Well, we just need to bind style to a dynamic value

87
00:04:50,800 --> 00:04:53,884
and we can do this with, v-bind

88
00:04:53,884 --> 00:04:58,330
or the shorthand, just colon style.

89
00:04:58,330 --> 00:05:02,630
But now here's a special thing, style and also classes,

90
00:05:02,630 --> 00:05:05,960
as you will see in a couple of minutes are different.

91
00:05:05,960 --> 00:05:10,240
If you bind those dynamically with v-bind,

92
00:05:10,240 --> 00:05:14,650
you can actually use a special syntax supported by Vue

93
00:05:14,650 --> 00:05:17,330
for these specific attributes.

94
00:05:17,330 --> 00:05:19,600
So for a style and for a class,

95
00:05:19,600 --> 00:05:22,730
you can now feed in an object here,

96
00:05:22,730 --> 00:05:26,860
which style normally does not want, but you can use it,

97
00:05:26,860 --> 00:05:30,300
because that's a special Vue feature for styling class

98
00:05:30,300 --> 00:05:33,600
and in there you can have your CSS property name,

99
00:05:33,600 --> 00:05:38,600
border color, however, either wrap between single quotes,

100
00:05:39,400 --> 00:05:43,030
because we have a JavaScript object here and property names

101
00:05:43,030 --> 00:05:45,030
with dashes are not allowed there.

102
00:05:45,030 --> 00:05:49,330
So we either need quotes or recommended and better use

103
00:05:49,330 --> 00:05:53,640
the camel case version of that where you omit the dash

104
00:05:53,640 --> 00:05:55,680
and the character after the dash

105
00:05:55,680 --> 00:05:58,830
simply is that capital character now.

106
00:05:58,830 --> 00:06:03,150
And then you could set this to red here, for example,

107
00:06:03,150 --> 00:06:05,760
or to make it really dynamic

108
00:06:05,760 --> 00:06:10,180
check if box A is selected.

109
00:06:10,180 --> 00:06:15,180
So if this data property here is true,

110
00:06:15,880 --> 00:06:19,570
and use a ternary expression to check if that is truthy.

111
00:06:19,570 --> 00:06:20,620
So if it's true,

112
00:06:20,620 --> 00:06:23,600
and if that's the case after the question mark,

113
00:06:23,600 --> 00:06:25,323
we set this to red.

114
00:06:26,250 --> 00:06:30,330
Otherwise we set it to this gray color.

115
00:06:30,330 --> 00:06:31,743
So to this hex code.

116
00:06:32,660 --> 00:06:36,120
And that's a default ternary expression in JavaScript,

117
00:06:36,120 --> 00:06:39,600
which we can use here since we're binding this dynamically.

118
00:06:39,600 --> 00:06:43,430
This object syntax is a special feature supported by Vue

119
00:06:43,430 --> 00:06:46,980
for the style attributes specifically.

120
00:06:46,980 --> 00:06:48,870
If I now saved it and reload,

121
00:06:48,870 --> 00:06:52,710
we initially have this gray border color,

122
00:06:52,710 --> 00:06:56,780
but if I click on this box, it gets red.

123
00:06:56,780 --> 00:06:59,640
Now there's no way of turning it back to gray at the moment,

124
00:06:59,640 --> 00:07:03,060
because we have no way of making it unselected,

125
00:07:03,060 --> 00:07:04,740
but that's not a problem here

126
00:07:04,740 --> 00:07:07,950
because I want to focus on the dynamic styling.

127
00:07:07,950 --> 00:07:11,640
And that is how you could set up styles dynamically

128
00:07:11,640 --> 00:07:16,640
with Vue, v-bind and this special style binding Syntax.

