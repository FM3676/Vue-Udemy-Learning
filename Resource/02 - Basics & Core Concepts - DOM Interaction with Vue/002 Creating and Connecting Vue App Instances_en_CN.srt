1
00:00:02,180 --> 00:00:04,860
所以现在我们有了基本的想法

2
00:00:04,860 --> 00:00:07,310
为什么我们可能想使用 Vue，

3
00:00:07,310 --> 00:00:09,470
让我们真正跳入 Vue

4
00:00:09,470 --> 00:00:12,690
及其基础知识和核心语法。

5
00:00:12,690 --> 00:00:14,320
为此我得到了一个非常非常

6
00:00:14,320 --> 00:00:17,570
如果你想打电话，非常简单的启动项目

7
00:00:17,570 --> 00:00:19,750
像这样，一个简单的网页，

8
00:00:19,750 --> 00:00:22,720
你当然会发现它附在这个讲座上

9
00:00:22,720 --> 00:00:25,760
这样您就可以从同一个项目开始。

10
00:00:25,760 --> 00:00:28,090
现在我只是在浏览器中打开它

11
00:00:28,090 --> 00:00:33,090
通过与我的编辑器并排双击 .html 文件，

12
00:00:33,460 --> 00:00:36,450
只是为了更容易看到发生了什么变化

13
00:00:36,450 --> 00:00:39,430
一旦我们开始编写一些代码，就会出现在页面上。

14
00:00:39,430 --> 00:00:41,000
现在，说到代码，

15
00:00:41,000 --> 00:00:43,240
这是一个非常简单的启动项目。

16
00:00:43,240 --> 00:00:47,043
如果我在这里简单地隐藏这个侧边栏，

17
00:00:47,900 --> 00:00:51,630
同样使用快捷方式，您可以看到 HTML 骨架

18
00:00:51,630 --> 00:00:54,550
很简单，我只是得到了一个标题，

19
00:00:54,550 --> 00:00:58,470
有一个section和h2标签和那个空的段落标签，

20
00:00:58,470 --> 00:01:01,570
我必须导入，我导入 Vue，

21
00:01:01,570 --> 00:01:03,910
所以Vue框架，

22
00:01:03,910 --> 00:01:07,140
我必须导入到我自己的应用程序 JS 文件中

23
00:01:07,140 --> 00:01:12,100
并且还导入到一些 Google 字体和我自己的 CSS 文件。

24
00:01:12,100 --> 00:01:14,610
现在CSS文件不是太重要了，

25
00:01:14,610 --> 00:01:18,210
它有一些基本样式，但这不是 CSS 课程，

26
00:01:18,210 --> 00:01:20,590
所以我不会让你厌烦这些。

27
00:01:20,590 --> 00:01:22,860
我确实有单独的 CSS 课程

28
00:01:22,860 --> 00:01:24,630
如果你想了解更多，

29
00:01:24,630 --> 00:01:28,190
相反，让我们关注 JavaScript 和 Vue。

30
00:01:28,190 --> 00:01:31,720
这里的 JavaScript 文件是完全空的。

31
00:01:31,720 --> 00:01:33,630
现在我要做一件事，

32
00:01:33,630 --> 00:01:35,910
我不会在整个课程中都这样做，

33
00:01:35,910 --> 00:01:37,990
但我会在一开始就在这里做。

34
00:01:37,990 --> 00:01:41,490
我将在 Visual Studio 代码中更改编辑器布局

35
00:01:41,490 --> 00:01:46,270
使用两行，我将打开索引 HTML 文件

36
00:01:46,270 --> 00:01:50,010
在最上面一行，在最下面一行应用 JS 文件

37
00:01:50,010 --> 00:01:52,090
并靠近侧边栏。

38
00:01:52,090 --> 00:01:53,940
我这样做是因为这会让我

39
00:01:53,940 --> 00:01:56,460
向您展示我们的 JavaScript 代码如何

40
00:01:56,460 --> 00:01:59,820
并且 HTML 代码稍后交互一次

41
00:01:59,820 --> 00:02:02,240
我们使用更复杂的 JavaScript 代码，

42
00:02:02,240 --> 00:02:05,430
我会离开这个设置，以便我们可以看到

43
00:02:05,430 --> 00:02:07,530
整个页面上的 JavaScript 代码，

44
00:02:07,530 --> 00:02:10,580
但要开始，这会很好。

45
00:02:10,580 --> 00:02:12,910
这样，我们就有了 HTML 代码，

46
00:02:12,910 --> 00:02:14,920
我们得到了 JavaScript 代码。

47
00:02:14,920 --> 00:02:17,610
现在我们要做的第一件事

48
00:02:17,610 --> 00:02:20,140
当我们想使用一些 Vue 功能时

49
00:02:20,140 --> 00:02:24,050
我们是否想将 Vue 连接到我们的 HTML 代码。

50
00:02:24,050 --> 00:02:29,050
我们想让 Vue 知道这段 HTML 代码的哪一部分

51
00:02:29,240 --> 00:02:31,420
应该由Vue控制。

52
00:02:31,420 --> 00:02:35,650
因为我们只能使用 Vue

53
00:02:35,650 --> 00:02:38,870
在由 Vue 控制的部分中。

54
00:02:38,870 --> 00:02:41,620
现在在这里，我的第一个目标非常简单。

55
00:02:41,620 --> 00:02:43,700
我得到了这个虚拟网页，

56
00:02:43,700 --> 00:02:48,480
我想在哪里输出我的课程目标或你的课程目标。

57
00:02:48,480 --> 00:02:51,630
类似于已完成的 Master Vue 课程，

58
00:02:51,630 --> 00:02:52,910
任何类似的东西。

59
00:02:52,910 --> 00:02:55,840
现在，我们当然可以在这里写

60
00:02:55,840 --> 00:02:59,060
我们已经完成了，但这门课程是关于 Vue 的

61
00:02:59,060 --> 00:03:01,640
在使用 Vue 控制的同时

62
00:03:01,640 --> 00:03:03,820
并使用 Vue 输出此文本

63
00:03:03,820 --> 00:03:06,200
现在会有点过头了。

64
00:03:06,200 --> 00:03:09,440
最好从这样的基本示例开始，

65
00:03:09,440 --> 00:03:13,120
所以我们以后也可以探索更高级的例子。

66
00:03:13,120 --> 00:03:15,980
因此，我们不要像这样输出这个文本，

67
00:03:15,980 --> 00:03:19,600
但让我们改为使用 Vue 来输出这里有一些文字，

68
00:03:19,600 --> 00:03:23,610
一些我们可能会动态更改的文本。

69
00:03:23,610 --> 00:03:25,910
为此，我们需要做的第一件事

70
00:03:25,910 --> 00:03:28,470
我们需要创建一个Vue App吗？

71
00:03:28,470 --> 00:03:31,340
这始终是您想要控制的第一步

72
00:03:31,340 --> 00:03:35,020
带有 Vue 应用程序的 HTML 代码的一部分。

73
00:03:35,020 --> 00:03:37,910
你通过使用 Vue 来做到这一点，

74
00:03:37,910 --> 00:03:40,410
这是一个全局可用的对象，

75
00:03:40,410 --> 00:03:42,960
感谢这个 Vue 导入。

76
00:03:42,960 --> 00:03:47,500
然后在这个 Vue 对象上，我们可以调用 createApp。

77
00:03:47,500 --> 00:03:49,130
这将执行名称适用的操作。

78
00:03:49,130​​ --> 00:03:50,963
它创建了一个 Vue 应用程序。

79
00:03:51,810 --> 00:03:54,770
我们可以将应用程序存储在变量或常量中。

80
00:03:54,770 --> 00:03:56,690
所以这里全部存储在那个常量中。

81
00:03:56,690 --> 00:03:59,130
这是一个默认的 JavaScript 功能

82
00:03:59,130​​ --> 00:04:01,150
与 Vue 无关。

83
00:04:01,150 --> 00:04:06,150
现在我们想让 Vue 知道这段 HTML 代码的哪一部分

84
00:04:07,400 --> 00:04:10,360
应该由那个 Vue App 控制。

85
00:04:10,360 --> 00:04:14,400
现在，我想控制这个部分，因为它是这个部分

86
00:04:14,400 --> 00:04:16,370
其中包含本段，

87
00:04:16,370 --> 00:04:19,160
我想通过 Vue 进行操作。

88
00:04:19,160 --> 00:04:22,060
我们也可以只控制这一段，

89
00:04:22,060 --> 00:04:25,390
但我们稍后会在本节中添加更多功能，

90
00:04:25,390 --> 00:04:27,930
因此，我将采取整个部分。

91
00:04:27,930 --> 00:04:30,690
现在我们通过调用 Mount 来做到这一点，

92
00:04:30,690 --> 00:04:34,090
此应用程序对象上的 Mount 方法

93
00:04:34,090 --> 00:04:36,033
我们使用 createApp 创建的。

94
00:04:37,240 --> 00:04:39,780
Mount 现在需要一个字符串。

95
00:04:39,780 --> 00:04:43,730
该字符串应该包含一个 CSS 选择器，

96
00:04:43,730 --> 00:04:47,440
唯一标识元素

97
00:04:47,440 --> 00:04:51,223
在我们想要控制的 HTML 代码中的 DOM 中。

98
00:04:52,100 --> 00:04:55,500
现在在这里，这个部分有一个用户目标的 ID。

99
00:04:55,500 --> 00:04:56,850
所以我们可以使用这个ID。

100
00:04:56,850 --> 00:04:59,100
通常你会使用 ID

101
00:04:59,100 --> 00:05:01,030
因为你想要一个独特的选择器，

102
00:05:01,030 --> 00:05:03,230
ID 是很棒的独特选择器

103
00:05:03,230 --> 00:05:06,700
因为 ID 在您的页面上应该是唯一的。

104
00:05:06,700 --> 00:05:09,840
现在，这样的 ID 选择器长什么样子？

105
00:05:09,840 --> 00:05:13,150
嗯，它只是一个哈希符号，然后是你的 ID

106
00:05:13,150 --> 00:05:14,800
在这种情况下，用户目标。

107
00:05:14,800 --> 00:05:16,720
这会告诉你我们想要

108
00:05:16,720 --> 00:05:20,730
将我们的创意 Vue 应用程序连接到此部分

109
00:05:20,730 --> 00:05:21,993
在 HTML 代码中。

110
00:05:23,530 --> 00:05:26,350
现在，如果我们安全应用 JS 文件，

111
00:05:26,350 --> 00:05:28,150
断开建立。

112
00:05:28,150 --> 00:05:30,500
但单独的连接并没有多大作用。

113
00:05:30,500 --> 00:05:33,980
相反，我们现在可以使用 Vue 特性进行交互

114
00:05:33,980 --> 00:05:35,740
用这个控制部分。

115
00:05:35,740 --> 00:05:36,832
我们确实使用了这些功能

116
00:05:36,832 --> 00:05:40,833
通过将对象传递给 createApp。

117
00:05:41,710 --> 00:05:46,150
这是一个我们可以用来配置这个应用程序的对象。

118
00:05:46,150 --> 00:05:50,940
您可以说，我们配置了这个应用程序的各种选项。

119
00:05:50,940 --> 00:05:55,940
现在我们可以设置的一个关键选项是数据选项，

120
00:05:56,960 --> 00:05:58,860
数据配置。

121
00:05:58,860 --> 00:06:01,040
这个名字不取决于你。

122
00:06:01,040 --> 00:06:02,810
它必须是数据。

123
00:06:02,810 --> 00:06:06,920
您可以使用一些明确定义的特定键。

124
00:06:06,920 --> 00:06:09,700
所以这个对象中的属性名称

125
00:06:09,700 --> 00:06:11,410
您将其传递给 createApp。

126
00:06:11,410 --> 00:06:13,900
您不能只使用任意名称

127
00:06:13,900 --> 00:06:17,500
因为 Vue 会寻找这些特定的属性名

128
00:06:17,500 --> 00:06:20,320
像数据，还有其他几个你会看到的名字

129
00:06:20,320 --> 00:06:21,470
在整个课程中。

130
00:06:22,390 --> 00:06:24,060
所以在这里我们得到了数据键。

131
00:06:24,060 --> 00:06:28,300
数据，曾经是一个函数作为一个值。

132
00:06:28,300 --> 00:06:30,360
所以我们可以提供这样一个，

133
00:06:30,360 --> 00:06:32,300
那将是完全有效的，

134
00:06:32,300 --> 00:06:35,490
或者我们使用我们可以使用的方法速记

135
00:06:35,490 --> 00:06:38,400
在现代 JavaScript 中，这里支持。

136
00:06:38,400 --> 00:06:40,800
看起来像这样，它是一样的。

137
00:06:40,800 --> 00:06:42,970
它基本上意味着存储的值

138
00:06:42,970 --> 00:06:45,900
在 data 属性中是一个函数。

139
00:06:45,900 --> 00:06:47,940
现在这个函数应该做什么？

140
00:06:47,940 --> 00:06:52,080
它应该做一件非常简单但重要的事情。

141
00:06:52,080 --> 00:06:56,810
它返回一个对象并且总是一个对象。

142
00:06:56,810 --> 00:07:01,520
不是数组，不是数字，不是字符串，始终是对象。

143
00:07:01,520 --> 00:07:03,950
在这个返回的对象中，

144
00:07:03,950 --> 00:07:08,440
您现在可以使用任何键设置任何键值对

145
00:07:08,440 --> 00:07:11,950
因此，您可以选择任何属性名称。

146
00:07:11,950 --> 00:07:16,950
诸如消息或课程目标之类的完全取决于您。

147
00:07:17,300 --> 00:07:19,380
以及这些属性的值

148
00:07:19,380 --> 00:07:21,480
也完全取决于你。

149
00:07:21,480 --> 00:07:23,470
这里我要存储一个字符串，

150
00:07:23,470 --> 00:07:25,880
但你可以存储任何有意义的东西

151
00:07:25,880 --> 00:07:29,280
为您的应用程序的用例。

152
00:07:29,280 --> 00:07:30,670
你可以存储一个布尔值，

153
00:07:30,670 --> 00:07:32,000
你可以存储一个号码，

154
00:07:32,000 --> 00:07:35,210
您可以存储一个数组或另一个对象。

155
00:07:35,210 --> 00:07:37,310
但在这里我想要一个简单的字符串，

156
00:07:37,310 --> 00:07:41,483
我的课程目标可能是完成课程并学习 Vue。

157
00:07:43,030 --> 00:07:44,510
现在这背后的想法是什么？

158
00:07:44,510 --> 00:07:47,770
这个数据属性背后的想法是什么，

159
00:07:47,770 --> 00:07:51,770
我们现在在这个 Vue App 中配置了什么？

160
00:07:51,770 --> 00:07:55,670
嗯，任何属于你返回的对象的一部分

161
00:07:55,670 --> 00:08:00,670
在数据中，现在可以在您的 Vue 控制的 HTML 部分中使用。

162
00:08:02,800 --> 00:08:06,350
虽然这对于静态内容来说并不太令人兴奋，

163
00:08:06,350 --> 00:08:09,030
它永远不会改变，就像我们这里的字符串一样，

164
00:08:09,030 --> 00:08:10,670
这将是超级棒的，

165
00:08:10,670 --> 00:08:13,530
一旦我们添加一些反应性

166
00:08:13,530 --> 00:08:17,320
例如，我们对用户点击按钮做出反应

167
00:08:17,320 --> 00:08:18,900
然后更改数据。

168
00:08:18,900 --> 00:08:22,360
您在第一个课程模块中第一次看到了这一点，

169
00:08:22,360 --> 00:08:25,370
你会在整个课程中看到更多这样的内容。

170
00:08:25,370 --> 00:08:26,830
但从简单的开始，

171
00:08:26,830 --> 00:08:29,573
我们可以输出存储在课程目标中的内容

172
00:08:29,573 --> 00:08:32,789
在这个 Vue Control HTML 部分中使用

173
00:08:32,789 --> 00:08:34,620
这里有一个特殊的语法。

174
00:08:34,620 --> 00:08:36,919
一种特殊的语法，它只会起作用

175
00:08:36,919 --> 00:08:38,823
因为这是由 Vue 控制的。