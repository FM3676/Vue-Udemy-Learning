1
00:00:02,100 --> 00:00:04,910
现在我们学会了如何监听事件。

2
00:00:04,910 --> 00:00:06,840
现在有一件重要的事情。

3
00:00:06,840 --> 00:00:11,170
目前，我正在我的 HTML 代码中更新计数器。

4
00:00:11,170 --> 00:00:15,100
在 Vue 控制部分，但在 HTML 代码中

5
00:00:15,100 --> 00:00:19,380
它通常被认为是不好的

6
00:00:19,380 --> 00:00:23,130
或不是最佳做法。

7
00:00:23,130 --> 00:00:28,070
您不想在 HTML 代码中加入太多逻辑。

8
00:00:28,070 --> 00:00:30,270
相反，HTML 代码应该真的

9
00:00:30,270 --> 00:00:32,482
只是关于输出东西。

10
00:00:33,720 --> 00:00:36,580
这样的逻辑，虽然不太复杂，

11
00:00:36,580 --> 00:00:39,770
通常应该进入您的 JavaScript 代码。

12
00:00:39,770 --> 00:00:44,363
现在我们怎样才能把这个逻辑放到我们的 JavaScript 代码中呢？

13
00:00:45,490 --> 00:00:48,370
好吧，我们想在每次点击时做点什么。

14
00:00:48,370 --> 00:00:49,890
你通常用什么

15
00:00:49,890 --> 00:00:53,730
如果你想在某个时间点做某事，

16
00:00:53,730 --> 00:00:56,430
可能以重复的方式？

17
00:00:56,430 --> 00:00:58,690
好吧，您需要一个可以调用的函数。

18
00:00:58,690 --> 00:00:59,630
你需要一个函数，

19
00:00:59,630 --> 00:01:01,920
单击“添加”按钮时可以调用它

20
00:01:01,920 --> 00:01:03,610
你需要一个可以调用的函数

21
00:01:03,610 --> 00:01:05,310
单击“减少”按钮时。

22
00:01:06,420 --> 00:01:11,420
现在当然，我们可以在这里指定一个函数，添加，

23
00:01:11,520 --> 00:01:15,010
在那里，尝试将计数器设置为等于计数器加一。

24
00:01:15,010 --> 00:01:16,390
但由于多种原因，

25
00:01:16,390 --> 00:01:17,690
这行不通

26
00:01:17,690 --> 00:01:21,320
因为一个计数器不是全局可用的变量，

27
00:01:21,320 --> 00:01:23,220
它是一个数据属性，

28
00:01:23,220 --> 00:01:25,400
因此这里不可用。

29
00:01:25,400 --> 00:01:27,560
此外，即使它可用

30
00:01:27,560 --> 00:01:28,950
无论出于何种原因，

31
00:01:28,950 --> 00:01:33,350
add now 是一个全局创建的函数。

32
00:01:33,350 --> 00:01:36,680
但是在你的 Vue 控制的 HTML 代码中，

33
00:01:36,680 --> 00:01:38,780
你不能使用这样的功能。

34
00:01:38,780 --> 00:01:43,330
您只能在这个 Vue 控制的 HTML 部分中使用，

35
00:01:43,330 --> 00:01:46,290
Vue 应用程序中定义的内容。

36
00:01:46,290 --> 00:01:48,550
这就是为什么我们为此使用方法，

37
00:01:48,550 --> 00:01:51,280
我们之前确实已经了解了方法。

38
00:01:51,280 --> 00:01:55,000
现在，我们不只是使用方法来手动调用它们

39
00:01:55,000 --> 00:01:58,840
就像我们之前做的那样，我们也可以使用方法来连接它们，

40
00:01:58,840 --> 00:02:02,140
到事件监听器并让 Vue 为我们调用它们

41
00:02:02,140 --> 00:02:04,260
当某个事件发生时。

42
00:02:04,260 --> 00:02:07,180
例如，在这里，我们可以添加一个 add 方法，

43
00:02:07,180 --> 00:02:10,060
虽然这里的名字完全取决于你，

44
00:02:10,060 --> 00:02:13,180
您也可以将其命名为添加计数器或增量

45
00:02:13,180 --> 00:02:15,700
或任何你想要的，但我会命名它添加。

46
00:02:15,700 --> 00:02:20,030
在这里，你现在可以更新这个计数器，

47
00:02:20,030 --> 00:02:24,100
正如你从这个计数器学到的一样重要。

48
00:02:24,100 --> 00:02:25,530
在您的 JavaScript 代码中，

49
00:02:25,530 --> 00:02:29,510
你用这个来引用你的数据属性。

50
00:02:29,510 --> 00:02:31,510
这个计数器加加，

51
00:02:31,510 --> 00:02:34,240
或更长的形式这个计数器

52
00:02:34,240 --> 00:02:37,760
等于这个计数器加一，它是一样的。

53
00:02:37,760 --> 00:02:41,390
有了这个，我们就有了一个可以调用的方法

54
00:02:41,390 --> 00:02:43,440
更新我们的计数器。

55
00:02:43,440 --> 00:02:45,430
现在这个方法不返回任何东西

56
00:02:45,430 --> 00:02:47,120
因为它不必。

57
00:02:47,120 --> 00:02:50,040
我们不会像以前那样使用方法

58
00:02:50,040 --> 00:02:52,960
在这里动态输出一些东西。

59
00:02:52,960 --> 00:02:57,330
相反，我们使用它在点击发生时运行它

60
00:02:57,330 --> 00:02:59,570
因此，这确实需要返回任何东西

61
00:02:59,570 --> 00:03:03,370
因为点击监听器不想要返回值。

62
00:03:03,370 --> 00:03:07,350
所以现在在这里，我们可以像这样调用 add

63
00:03:07,350 --> 00:03:10,450
如果我现在保存并重新加载，我可以点击添加

64
00:03:10,450 --> 00:03:14,010
它仍然有效，因为我们正在执行相同的代码

65
00:03:14,010 --> 00:03:16,040
只是以不同的方式。

66
00:03:16,040 --> 00:03:18,990
这实际上是击球手的做法，

67
00:03:18,990 --> 00:03:21,200
推杆将你的逻辑写入 JavaScript

68
00:03:21,200 --> 00:03:23,640
并且只是指向那个逻辑。

69
00:03:23,640 --> 00:03:26,550
这通常被认为更好，

70
00:03:26,550 --> 00:03:29,720
即使从技术上讲，它在这里也以相同的方式工作。

71
00:03:29,720 --> 00:03:33,170
但是考虑一下你有更复杂逻辑的情况

72
00:03:33,170 --> 00:03:36,110
你应该把这个逻辑很快就说得通了

73
00:03:36,110 --> 00:03:39,350
进入 JavaScript 而不是 HTML。

74
00:03:39,350 --> 00:03:42,220
所以把它作为一种习惯开始也不错，

75
00:03:42,220 --> 00:03:43,413
从一开始。

76
00:03:45,100 --> 00:03:48,230
现在除了像这样调用 add ，顺便说一句，

77
00:03:48,230 --> 00:03:50,660
你也可以指向它

78
00:03:50,660 --> 00:03:53,927
这样你就可以告诉 Vue，“嘿，这是函数的名称

79
00:03:53,927 --> 00:03:56,337
“或者确切地说是方法。

80
00:03:56,337 --> 00:03:58,940
“你应该在点击发生时执行。”

81
00:03:58,940 --> 00:04:03,530
Vue 两者都接受，你像这样显式调用它，

82
00:04:03,530 --> 00:04:05,460
或者你指着它，

83
00:04:05,460 --> 00:04:07,330
Vue 检测到你在做什么，

84
00:04:07,330 --> 00:04:09,923
在这两种情况下它都会做正确的事情。

85
00:04:10,820 --> 00:04:13,220
现在通常，你只想指向它

86
00:04:13,220 --> 00:04:16,200
因为这更接近原生 JavaScript

87
00:04:16,200 --> 00:04:19,029
以及如何在那里设置事件监听器

88
00:04:19,029 --> 00:04:23,110
但值得注意的是，这两种语法都是允许的

89
00:04:23,110 --> 00:04:24,860
正如你在这里看到的。

90
00:04:24,860 --> 00:04:28,513
好吧，现在让我们做同样的事情来减少我们的计数器。

91
00:04:29,370 --> 00:04:30,760
当然，您可以自己尝试一下。

92
00:04:30,760 --> 00:04:32,650
这里有一个快速的暂停让你这样做

93
00:04:32,650 --> 00:04:34,550
之后，我们会一起做。

94
00:04:37,380 --> 00:04:38,910
你成功了吗？

95
00:04:38,910 --> 00:04:41,870
好吧，再次，它几乎是相同的代码。

96
00:04:41,870 --> 00:04:45,530
我们可以添加一个reduce方法，

97
00:04:45,530 --> 00:04:47,610
再次，这个名字由你决定

98
00:04:47,610 --> 00:04:49,470
在那里，我们只是设置了这个计数器

99
00:04:49,470 --> 00:04:53,940
等于这个计数器减一，或者我们使用更短的形式，

100
00:04:53,940 --> 00:04:56,083
看起来像这样，这也可以。

101
00:04:58,500 --> 00:05:01,730
现在在这第二个按钮上，

102
00:05:01,730 --> 00:05:06,020
我们可以像这样调用reduce，或者就像我刚才提到的，

103
00:05:06,020 --> 00:05:08,570
只需指向它，两者都被接受。

104
00:05:08,570 --> 00:05:11,020
现在我们有了工作按钮

105
00:05:11,020 --> 00:05:12,800
有一个重要的变化，

106
00:05:12,800 --> 00:05:16,820
现在逻辑外包给 JavaScript，

107
00:05:16,820 --> 00:05:19,160
这是你的逻辑应该在哪里

108
00:05:19,160 --> 00:05:22,460
并且 HTML 代码更干净

109
00:05:22,460 --> 00:05:23,750
这更好。

110
00:05:23,750 --> 00:05:25,400
这被认为更好，

111
00:05:25,400 --> 00:05:28,860
所以开始使用这种方法是个好主意

112
00:05:28,860 --> 00:05:30,453
并使用这种模式。

113
00:05:32,320 --> 00:05:35,380
现在这就是我们可以使用方法的方式。

114
00:05:35,380 --> 00:05:40,340
我们不能只在花括号或绑定中使用它们

115
00:05:40,340 --> 00:05:44,200
动态导出我们想要输出的值

116
00:05:44,200 --> 00:05:47,360
但我们也可以将它们与事件侦听器一起使用

117
00:05:47,360 --> 00:05:49,740
定义应该执行的代码

118
00:05:49,740 --> 00:05:52,010
当事件发生时。

119
00:05:52,010 --> 00:05:55,530
而在现实中，你会更频繁地使用方法

120
00:05:55,530 --> 00:05:57,160
将它们与事件联系起来，

121
00:05:57,160 --> 00:05:58,420
比你会使用它们

122
00:05:58,420 --> 00:06:01,030
输出动态派生的东西。

123
00:06:01,030 --> 00:06:04,360
我之前刚刚展示过这个是为了向你展示这是可能的

124
00:06:04,360 --> 00:06:06,280
并介绍方法

125
00:06:06,280 --> 00:06:08,660
但通常，你会像这样使用它们

126
00:06:08,660 --> 00:06:10,543
结合事件监听器。