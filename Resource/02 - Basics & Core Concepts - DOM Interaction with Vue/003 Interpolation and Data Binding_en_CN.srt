1
00:00:02,210 --> 00:00:04,291
输出数据

2
00:00:04,291 --> 00:00:06,870
在您的 Vue 控制的 HTML 部分中，

3
00:00:06,870 --> 00:00:08,250
有一种特殊的语法，

4
00:00:08,250 --> 00:00:11,270
仅在 HTML 部分中可用

5
00:00:11,270 --> 00:00:13,270
由 Vue 控制，

6
00:00:13,270 --> 00:00:16,200
因为 Vue 会在幕后做什么

7
00:00:16,200 --> 00:00:19,780
它会扫描这个 HTML 代码吗

8
00:00:19,780 --> 00:00:20,760
你可以说，

9
00:00:20,760 --> 00:00:22,371
并检测某些特征，

10
00:00:22,371 --> 00:00:26,170
它支持的某种语法。

11
00:00:26,170 --> 00:00:27,770
我们将在这里使用的语法

12
00:00:27,770 --> 00:00:31,180
用于输出文本，用于输出内容

13
00:00:31,180 --> 00:00:32,479
在您的模板中，

14
00:00:32,479 --> 00:00:33,580
是这个。

15
00:00:33,580 --> 00:00:37,270
双花括号，打开和关闭。

16
00:00:37,270 --> 00:00:39,940
默认情况下，如果您在 HTML 中使用它，

17
00:00:39,940 --> 00:00:41,280
这将无济于事。

18
00:00:41,280 --> 00:00:43,560
好吧，实际上你会简单地看到

19
00:00:43,560 --> 00:00:45,660
之后出现在屏幕上。

20
00:00:45,660 --> 00:00:49,860
如果您使用 Vue 控制的 HTML 片段中的语法，

21
00:00:49,860 --> 00:00:51,940
它会做一些特别的事情，

22
00:00:51,940 --> 00:00:56,060
在那些打开和关闭双花括号之间。

23
00:00:56,060 --> 00:01:00,950
您可以引用返回的数据对象属性，

24
00:01:00,950 --> 00:01:02,400
喜欢课程目标。

25
00:01:02,400 --> 00:01:05,319
所以，在这里我们可以写课程目标，

26
00:01:05,319 --> 00:01:07,960
Vue 会建立这种联系，

27
00:01:07,960 --> 00:01:10,170
会明白，你想输出

28
00:01:10,170 --> 00:01:12,660
此处存储在课程目标中的内容。

29
00:01:12,660 --> 00:01:14,630
它会做到这一点。

30
00:01:14,630 --> 00:01:17,700
所以，如果你保存这个 HTML 和 JavaScript，

31
00:01:17,700 --> 00:01:21,310
如果两者都已保存并且您重新加载了网页，

32
00:01:21,310 --> 00:01:25,420
您将在这里看到、完成课程并学习 Vue，

33
00:01:25,420 --> 00:01:26,323
就这样。

34
00:01:27,680 --> 00:01:30,030
这真是太神奇了，尽管当然，

35
00:01:30,030 --> 00:01:31,640
这是一个非常简单的应用程序，

36
00:01:31,640 --> 00:01:36,340
但请记住，此文本存储在 JavaScript 中。

37
00:01:36,340 --> 00:01:38,610
然而，它呈现在屏幕上，

38
00:01:38,610 --> 00:01:42,200
感谢 Vue 和这种特殊的语法。

39
00:01:42,200 --> 00:01:46,100
这里的这种语法称为插值。

40
00:01:46,100 --> 00:01:48,870
你不需要记住这个，但这就是它的名字。

41
00:01:48,870 --> 00:01:51,290
插值，简单来说就是在这里，

42
00:01:51,290 --> 00:01:55,270
您可以引用作为该对象一部分的属性，

43
00:01:55,270 --> 00:01:56,900
你返回数据，

44
00:01:56,900 --> 00:02:00,340
然后将输出该属性的值

45
00:02:00,340 --> 00:02:02,310
而不是这部分。

46
00:02:02,310 --> 00:02:04,050
而 Vue 会自动检测到这一点

47
00:02:04,050 --> 00:02:06,790
并为您完成所有输出部分。

48
00:02:06,790 --> 00:02:08,680
如果您使用此语法。

49
00:02:08,680 --> 00:02:10,530
为了明确这一点，

50
00:02:10,530 --> 00:02:13,130
如果你想在其他任何地方使用它，

51
00:02:13,130 --> 00:02:15,420
让我们在标题中说，

52
00:02:15,420 --> 00:02:17,529
不受 Vue 控制，

53
00:02:17,529 --> 00:02:19,720
您只会将其视为文本

54
00:02:19,720 --> 00:02:21,450
它不会被替换

55
00:02:21,450 --> 00:02:24,500
因为那实际上只是 Vue 的一个特性。

56
00:02:24,500 --> 00:02:26,670
这种插值语法。

57
00:02:26,670 --> 00:02:29,190
这种插值语法是关键。

58
00:02:29,190 --> 00:02:31,460
我们将在整个课程中大量使用它

59
00:02:31,460 --> 00:02:34,330
因为它是 Vue 的关键特性之一，

60
00:02:34,330 --> 00:02:36,760
这就是我开始使用它的原因。

61
00:02:36,760 --> 00:02:38,290
同样值得注意的是，

62
00:02:38,290 --> 00:02:41,950
你不能像这样输出文本，

63
00:02:41,950 --> 00:02:43,700
但你也可以输出一个数字，

64
00:02:43,700 --> 00:02:45,310
如果我保存它。

65
00:02:45,310 --> 00:02:48,110
你也可以输出真假之类的东西，

66
00:02:48,110 --> 00:02:49,540
如果你想要它。

67
00:02:49,540 --> 00:02:51,980
现在如果你有一个数组，

68
00:02:51,980 --> 00:02:55,250
比方说，你总是可以像我们看到的那样输出它。

69
00:02:55,250 --> 00:02:56,880
所以，它真的很灵活。

70
00:02:56,880 --> 00:02:57,750
例如，您可以

71
00:02:57,750 --> 00:02:59,993
另外，我会放一个这样的对象。

72
00:03:01,120 --> 00:03:04,090
所以，它真的很灵活关于什么你可以做，

73
00:03:04,090 --> 00:03:05,560
但在这里我们想要那个字符串。

74
00:03:05,560 --> 00:03:07,490
所以我要使用它。

75
00:03:07,490 --> 00:03:11,380
现在是插值和数据属性，

76
00:03:11,380 --> 00:03:14,510
在您用于配置应用程序的对象中，

77
00:03:14,510 --> 00:03:16,390
你的 Vue 应用程序。

78
00:03:16,390 --> 00:03:19,390
这是第一个非常重要的外卖

79
00:03:19,390 --> 00:03:21,830
或前两个重要的外卖。

80
00:03:21,830 --> 00:03:24,240
这是两个核心功能，

81
00:03:24,240 --> 00:03:26,090
数据和插值，

82
00:03:26,090 --> 00:03:28,450
我们将在整个课程中使用它

83
00:03:28,450 --> 00:03:30,940
你肯定会使用它

84
00:03:30,940 --> 00:03:32,963
在您正在构建的任何 Vue 应用程序中。