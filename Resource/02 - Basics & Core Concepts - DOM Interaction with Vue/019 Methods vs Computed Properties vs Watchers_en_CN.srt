1
00:00:01,532 --> 00:00:03,120
我知道有，

2
00:00:03,120 --> 00:00:06,330
方法 vs 计算 vs 观察者的事情。

3
00:00:06,330 --> 00:00:08,000
可能非常混乱。

4
00:00:08,000 --> 00:00:10,240
所以是时候做一个简短的总结了。

5
00:00:10,240 --> 00:00:15,070
可以在模板中使用方法来绑定数据，

6
00:00:15,070 --> 00:00:17,800
例如，在插值中使用它们。

7
00:00:17,800 --> 00:00:20,400
导出应在模板中使用的数据

8
00:00:20,400 --> 00:00:22,120
或用于事件绑定。

9
00:00:22,120 --> 00:00:24,290
您可以同时使用这两种方法。

10
00:00:24,290 --> 00:00:27,120
如果您在数据绑定用例中使用它们，

11
00:00:27,120 --> 00:00:29,820
所以如果你在花括号之间使用它们，例如，

12
00:00:29,820 --> 00:00:33,720
将模板中的逻辑外包给您的视图实例，

13
00:00:33,720 --> 00:00:35,360
然后执行该方法

14
00:00:35,360 --> 00:00:38,500
对于组件的每个重新渲染周期。

15
00:00:38,500 --> 00:00:40,110
所以每当事情发生变化

16
00:00:40,110 --> 00:00:42,020
并且重新评估模板，

17
00:00:42,020 --> 00:00:44,170
模板中调用的每个方法

18
00:00:44,170 --> 00:00:45,400
将再次被调用。

19
00:00:45,400 --> 00:00:47,800
这就是我在几节课前向你展示的内容。

20
00:00:47,800 --> 00:00:48,910
因此，

21
00:00:48,910 --> 00:00:53,010
您应该主要将方法用于事件绑定。

22
00:00:53,010 --> 00:00:54,620
这没什么大不了的。

23
00:00:54,620 --> 00:00:55,970
你总是使用它们

24
00:00:55,970 --> 00:00:58,200
或用于数据绑定，

25
00:00:58,200 --> 00:01:00,840
所以用双花括号，例如，

26
00:01:00,840 --> 00:01:03,570
如果你真的想让他们重新执行

27
00:01:03,570 --> 00:01:05,961
每当页面上发生变化时。

28
00:01:05,961 --> 00:01:08,060
否则，您使用计算属性

29
00:01:08,060 --> 00:01:10,470
因为这些只能与数据绑定一起使用。

30
00:01:10,470 --> 00:01:12,700
您不要将它们与事件绑定一起使用。

31
00:01:12,700 --> 00:01:16,710
计算属性非常适合派生数据

32
00:01:16,710 --> 00:01:19,920
这是基于其他具有优势的数据

33
00:01:19,920 --> 00:01:24,790
他们只会被视图重新评估和重新执行

34
00:01:24,790 --> 00:01:27,140
如果依赖数据发生了变化。

35
00:01:27,140 --> 00:01:30,630
因此，如果计算属性内部使用的数据发生了变化，

36
00:01:30,630 --> 00:01:34,350
如果其他一些数据发生变化，它们将不会被重新评估。

37
00:01:34,350 --> 00:01:39,350
因此，将它们用于依赖于其他数据的数据。

38
00:01:39,860 --> 00:01:40,920
最后但并非最不重要的，

39
00:01:40,920 --> 00:01:44,060
观察者不直接在模板中使用。

40
00:01:44,060 --> 00:01:45,870
你没有在那里引用它们，

41
00:01:45,870 --> 00:01:48,140
但你可以看任何财产，

42
00:01:48,140 --> 00:01:50,670
甚至用它们计算属性。

43
00:01:50,670 --> 00:01:52,630
这允许您运行代码

44
00:01:52,630 --> 00:01:54,630
对一些变化数据的反应。

45
00:01:54,630 --> 00:01:57,050
例如，要发送 HTTP 请求，

46
00:01:57,050 --> 00:01:59,820
设置一个计时器，在本地存储中存储一些东西，

47
00:01:59,820 --> 00:02:01,070
不管是什么。

48
00:02:01,070 --> 00:02:03,780
所以通常，你应该使用 Watchers

49
00:02:03,780 --> 00:02:06,550
对于您想要进行的任何非数据更新。

50
00:02:06,550 --> 00:02:09,180
无论你有什么幕后工作要做

51
00:02:09,180 --> 00:02:11,039
根据一些变化的数据，

52
00:02:11,039 --> 00:02:13,380
你可能想考虑一个观察者。

53
00:02:13,380 --> 00:02:15,080
在免费的观察者中

54
00:02:15,080 --> 00:02:17,820
可能是您最少使用的功能

55
00:02:17,820 --> 00:02:20,860
因为您始终需要带有事件绑定的方法

56
00:02:20,860 --> 00:02:23,540
和用于输出数据的计算属性

57
00:02:23,540 --> 00:02:24,953
这取决于其他数据。