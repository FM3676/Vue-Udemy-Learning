1
00:00:02,170 --> 00:00:03,400
所以此时，

2
00:00:03,400 --> 00:00:07,780
好消息是我们几乎涵盖了所有重要的

3
00:00:07,780 --> 00:00:10,687
相关的特性和功能

4
00:00:10,687 --> 00:00:12,210
输出数据，

5
00:00:12,210 --> 00:00:16,270
即插值和 v-bind 指令。

6
00:00:16,270 --> 00:00:19,030
还结合了您可以输出的知识

7
00:00:19,030 --> 00:00:23,693
数据或方法调用的结果，就像我们在这里做的那样。

8
00:00:25,430 --> 00:00:27,580
现在还有一个功能，

9
00:00:27,580 --> 00:00:30,350
您应该注意的另一条指令。

10
00:00:30,350 --> 00:00:32,280
假设两个目标之一，

11
00:00:32,280 --> 00:00:33,900
假设课程目标B

12
00:00:33,900 --> 00:00:36,940
实际上不仅仅是这样一个简单的字符串，

13
00:00:36,940 --> 00:00:39,540
但这是一些 HTML 代码。

14
00:00:39,540 --> 00:00:40,700
这可能是一个场景

15
00:00:40,700 --> 00:00:42,202
你在申请中。

16
00:00:42,202 --> 00:00:43,617
例如，您在哪里，

17
00:00:43,617 --> 00:00:46,970
获取数据，它应该从数据库中输出

18
00:00:46,970 --> 00:00:50,373
从那里你会得到一些结构化的 HTML 代码。

19
00:00:51,470 --> 00:00:54,870
现在如果你在这个字符串中使用 HTML 元素，

20
00:00:54,870 --> 00:00:58,010
你用插值输出这个。

21
00:00:58,010 --> 00:01:00,260
所以有了双花括号，

22
00:01:00,260 --> 00:01:05,200
您会看到 HTML 元素只是作为文本输出。

23
00:01:05,200 --> 00:01:08,800
因此它们不会被解释为 HTML。

24
00:01:08,800 --> 00:01:12,020
这实际上是一个有用的安全功能，因为它

25
00:01:12,020 --> 00:01:14,890
保护您免受跨站点脚本攻击。

26
00:01:14,890 --> 00:01:16,123
所以这很好。

27
00:01:17,490 --> 00:01:21,210
但有时您想将其输出为 HTML

28
00:01:21,210 --> 00:01:24,160
而不是看起来像 HTML 的文本。

29
00:01:24,160 --> 00:01:26,490
为此，您可以使用另一个指令。

30
00:01:26,490 --> 00:01:30,070
这就是 v-html 指令。

31
00:01:30,070 --> 00:01:31,760
我们以前见过 v-bind 。

32
00:01:31,760 --> 00:01:34,070
V-bind可以用来绑定，

33
00:01:34,070 --> 00:01:37,090
所以要设置属性的值。

34
00:01:37,090 --> 00:01:38,295
使用 v-html，

35
00:01:38,295 --> 00:01:41,737
您在开始和结束文本之间设置内容

36
00:01:41,737 --> 00:01:42,857
一个元素，

37
00:01:42,857 --> 00:01:44,703
但你现在告诉 Vue

38
00:01:44,703 --> 00:01:48,620
内容应该被解释为 HTML。

39
00:01:48,620 --> 00:01:50,241
所以它不应该作为文本输出

40
00:01:50,241 --> 00:01:53,520
就像双花括号一样。

41
00:01:53,520 --> 00:01:56,760
因此你不再在这里使用双花括号，

42
00:01:56,760 --> 00:02:00,150
但是，您传递给 v-html 的值

43
00:02:00,150 --> 00:02:02,920
在这里的双引号之间

44
00:02:02,920 --> 00:02:06,030
例如，将是粗略的目标 B，

45
00:02:06,030 --> 00:02:08,020
或者，如果您愿意，

46
00:02:08,020 --> 00:02:10,520
调用输出目标的结果。

47
00:02:10,520 --> 00:02:12,480
这也有效。

48
00:02:12,480 --> 00:02:14,070
如果我现在重新加载，

49
00:02:14,070 --> 00:02:15,610
你不时看到，

50
00:02:15,610 --> 00:02:17,863
有这个dh2标签。

51
00:02:17,863 --> 00:02:19,550
文字只是绿色，

52
00:02:19,550 --> 00:02:21,960
这就是为什么你看不到它，因为我的造型，

53
00:02:21,960 --> 00:02:25,300
但这现在被解释为 HTML。

54
00:02:25,300 --> 00:02:28,470
当然，目标 A 也被解释为 HTML，

55
00:02:28,470 --> 00:02:31,560
但在那里我没有 HTML 文本。

56
00:02:31,560 --> 00:02:33,940
因此，这是您可以使用的功能。

57
00:02:33,940 --> 00:02:35,404
我在这里评论一下

58
00:02:35,404 --> 00:02:37,290
因为我们这里不需要它，

59
00:02:37,290 --> 00:02:39,160
但我想让你意识到这一点。

60
00:02:39,160 --> 00:02:41,770
如果你的 Vue 应用程序中存储了一些内容，

61
00:02:41,770 --> 00:02:46,770
其中包含 HTML 代码，应被视为 HTML。

62
00:02:47,400 --> 00:02:50,620
v-html 指令，它内置在 Vue 中

63
00:02:50,620 --> 00:02:52,260
会帮助你的。

64
00:02:52,260 --> 00:02:55,440
现在很有可能，你不会经常需要它，

65
00:02:55,440 --> 00:02:58,500
而且您绝对不应该将其用作默认值。

66
00:02:58,500 --> 00:03:01,970
因为你可以引入安全问题

67
00:03:01,970 --> 00:03:04,530
因为你基本上绕过了内置

68
00:03:04,530 --> 00:03:06,760
跨站脚本攻击防护

69
00:03:06,760 --> 00:03:09,080
你有双花括号。

70
00:03:09,080 --> 00:03:10,490
但如果你知道你在做什么，

71
00:03:10,490 --> 00:03:13,500
你需要输出一些HTML，

72
00:03:13,500 --> 00:03:16,940
v-html 指令是你的朋友。

73
00:03:16,940 --> 00:03:17,773
出色地，

74
00:03:17,773 --> 00:03:20,880
这些是使用 Vue 应用程序的一些基础知识

75
00:03:20,880 --> 00:03:23,480
并输出带有数据的内容，

76
00:03:23,480 --> 00:03:25,700
或使用您调用的方法。

77
00:03:25,700 --> 00:03:26,880
因此我会说，

78
00:03:26,880 --> 00:03:29,500
接下来是练习主题的时候了。