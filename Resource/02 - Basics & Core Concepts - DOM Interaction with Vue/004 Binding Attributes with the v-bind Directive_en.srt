1
00:00:02,090 --> 00:00:05,500
Now we covered two super important features.

2
00:00:05,500 --> 00:00:09,220
How we create a Vue instance and configure the data,

3
00:00:09,220 --> 00:00:10,410
that we can use there,

4
00:00:10,410 --> 00:00:13,480
and how we can output data with interpolation.

5
00:00:13,480 --> 00:00:17,350
Now, you don't always want to use interpolation

6
00:00:17,350 --> 00:00:18,980
for outputting data, though.

7
00:00:18,980 --> 00:00:20,163
Here's an example.

8
00:00:21,030 --> 00:00:23,257
Let's say we have a second paragraph, where I say,

9
00:00:23,257 --> 00:00:26,800
"learn more about Vue",

10
00:00:26,800 --> 00:00:30,120
and I want to make sure that "about Vue" is a link.

11
00:00:30,120 --> 00:00:33,370
Of course we can use a anchor tag with the ref attribute

12
00:00:33,370 --> 00:00:37,140
for that, and wrap that around "about Vue".

13
00:00:37,140 --> 00:00:39,080
If I do that, this is what we get.

14
00:00:39,080 --> 00:00:42,193
And now in here, we can pass in our link.

15
00:00:43,920 --> 00:00:47,930
Now, just as before, we could absolutely hard code

16
00:00:47,930 --> 00:00:51,340
this here in our HTML code,

17
00:00:51,340 --> 00:00:56,340
but let's again store the link value in our Vue app instead,

18
00:00:57,760 --> 00:01:01,940
and then add some syntax to output the stored value here,

19
00:01:01,940 --> 00:01:04,819
simply so that later in the next step, we can make this

20
00:01:04,819 --> 00:01:06,700
a bit more dynamic.

21
00:01:06,700 --> 00:01:09,330
So for that, I'm going to add a second property

22
00:01:09,330 --> 00:01:12,470
to this object which is returned in data,

23
00:01:12,470 --> 00:01:13,937
and I'll name it "vueLink".

24
00:01:14,860 --> 00:01:18,700
And now this again is a string that can lead to a page

25
00:01:18,700 --> 00:01:21,670
where you can learn more about Vue.

26
00:01:21,670 --> 00:01:24,950
Now here, I'm simply going to use the official Vue webpage,

27
00:01:24,950 --> 00:01:27,940
but again you can of course use anything here.

28
00:01:27,940 --> 00:01:31,610
Now, this vueLink property now holds the link

29
00:01:31,610 --> 00:01:35,020
that should be output here, and we can of course try

30
00:01:35,020 --> 00:01:38,140
to use our curly braces here, just as we did it

31
00:01:38,140 --> 00:01:40,530
between the paragraph tags, now I'm doing this

32
00:01:40,530 --> 00:01:43,040
on the ref attribute.

33
00:01:43,040 --> 00:01:45,520
So here we then point at vueLink,

34
00:01:45,520 --> 00:01:49,200
save this, reload, and click "about Vue"

35
00:01:49,200 --> 00:01:52,830
as you see, this fails, and, why does it fail,

36
00:01:52,830 --> 00:01:54,500
well, let's inspect this

37
00:01:54,500 --> 00:01:56,910
with the browser developer tools real quick,

38
00:01:56,910 --> 00:01:59,570
I'm using Chrome here, where you can right click something

39
00:01:59,570 --> 00:02:02,210
to inspect it, and you will see that

40
00:02:02,210 --> 00:02:05,980
the value for the ref attribute

41
00:02:05,980 --> 00:02:10,789
is actually the unconverted double curly brace syntax.

42
00:02:10,789 --> 00:02:14,090
So clearly Vue did not replace this

43
00:02:14,090 --> 00:02:16,950
with the actual value stored in vueLink,

44
00:02:16,950 --> 00:02:20,340
as it did it before for this course goal part.

45
00:02:20,340 --> 00:02:22,630
Now why did Vue not do that?

46
00:02:22,630 --> 00:02:26,580
We are inside of the Vue controlled HTML code.

47
00:02:26,580 --> 00:02:28,653
So Vue should detect this.

48
00:02:29,730 --> 00:02:31,120
Well, the reason is simple.

49
00:02:31,120 --> 00:02:35,440
This double curly brace syntax is only available

50
00:02:35,440 --> 00:02:38,600
between opening and closing HTML tags, you could say.

51
00:02:38,600 --> 00:02:43,600
So anywhere, where you would, well, output actual content.

52
00:02:43,720 --> 00:02:48,070
If you wanna pass in a dynamic value to an attribute,

53
00:02:48,070 --> 00:02:52,400
like here, where I wanna set the value of the ref attribute,

54
00:02:52,400 --> 00:02:55,590
dynamically with help of Vue, we need to use

55
00:02:55,590 --> 00:02:59,260
a different syntax, which thankfully is available though.

56
00:02:59,260 --> 00:03:03,120
And that's the Vue binding syntax.

57
00:03:03,120 --> 00:03:06,150
For that, we use a so called vue directive,

58
00:03:06,150 --> 00:03:08,350
which is simply an extra instruction

59
00:03:08,350 --> 00:03:11,070
we add in the HTML code.

60
00:03:11,070 --> 00:03:14,760
And we can use such directives on HTML elements,

61
00:03:14,760 --> 00:03:17,240
like on this anchor element.

62
00:03:17,240 --> 00:03:20,940
The directive we need here is v-bind.

63
00:03:20,940 --> 00:03:25,190
V-bind is a reserved name, detected and understood by Vue,

64
00:03:25,190 --> 00:03:27,590
and you can tell that it's by Vue

65
00:03:27,590 --> 00:03:30,130
because it starts with "v-".

66
00:03:30,130 --> 00:03:33,530
All built in directives which ship with Vue,

67
00:03:33,530 --> 00:03:36,060
start with "v-", and we're going to see

68
00:03:36,060 --> 00:03:38,510
a couple of other ones too throughout the course.

69
00:03:39,440 --> 00:03:43,170
Now, what does this v-bind directive do?

70
00:03:43,170 --> 00:03:46,660
As I said, a directive is basically an instruction.

71
00:03:46,660 --> 00:03:49,970
An instruction we give to Vue to do something.

72
00:03:49,970 --> 00:03:54,970
And v-bind tells Vue to bind, so to set,

73
00:03:55,150 --> 00:03:57,200
the value of something,

74
00:03:57,200 --> 00:03:59,860
and the "of something" part basically just means

75
00:03:59,860 --> 00:04:03,580
of an attribute on an HTML element.

76
00:04:03,580 --> 00:04:07,880
And to let Vue know which attribute's value to set,

77
00:04:07,880 --> 00:04:10,410
we add a colon after v-bind,

78
00:04:10,410 --> 00:04:13,240
and then the attribute name, in this case ref,

79
00:04:13,240 --> 00:04:16,680
and this is the full syntax which vue will understand,

80
00:04:16,680 --> 00:04:21,680
to dynamically set a value of an HTML element attribute,

81
00:04:21,760 --> 00:04:23,820
in this case of the ref attribute.

82
00:04:23,820 --> 00:04:27,860
This tells Vue, please find, please set

83
00:04:27,860 --> 00:04:31,120
the value of the ref attribute to something,

84
00:04:31,120 --> 00:04:33,180
and now the "to something" is passed between

85
00:04:33,180 --> 00:04:35,550
the opening and closing double quotes here,

86
00:04:35,550 --> 00:04:39,620
and here again, you can now reference a value of

87
00:04:39,620 --> 00:04:43,660
your data object, so in this case, vueLink for example,

88
00:04:43,660 --> 00:04:44,980
just like this.

89
00:04:44,980 --> 00:04:48,400
So this here, v-bind, is basically, you could say,

90
00:04:48,400 --> 00:04:52,940
the attribute alternative to this interpolation syntax.

91
00:04:52,940 --> 00:04:55,880
You use interpolation between HTML tags,

92
00:04:55,880 --> 00:04:59,190
and if you need to set the value on an HTML tag,

93
00:04:59,190 --> 00:05:01,070
so, to an attribute like this,

94
00:05:01,070 --> 00:05:02,640
you use v-bind.

95
00:05:02,640 --> 00:05:04,401
If you now save this and reload,

96
00:05:04,401 --> 00:05:08,170
we now click this link, I'm taken to the Vue docks.

97
00:05:08,170 --> 00:05:11,920
So I'm basically forwarded to the page this link points at.

98
00:05:11,920 --> 00:05:15,700
So now this works, and v-bind, just like interpolation,

99
00:05:15,700 --> 00:05:18,000
is a key feature you need to know,

100
00:05:18,000 --> 00:05:21,070
because typically, you don't just want to output content

101
00:05:21,070 --> 00:05:22,980
between opening and closing tags,

102
00:05:22,980 --> 00:05:26,310
often you have the scenario that you need to bind,

103
00:05:26,310 --> 00:05:30,320
that you need to set the value of some HTML attribute

104
00:05:30,320 --> 00:05:34,120
to some Vue managed data, and with v-bind,

105
00:05:34,120 --> 00:05:35,703
that's very easy to do.

