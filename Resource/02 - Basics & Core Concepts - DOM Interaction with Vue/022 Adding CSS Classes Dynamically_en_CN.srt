1
00:00:02,320 --> 00:00:05,190
现在动态绑定内联样式

2
00:00:05,190 --> 00:00:07,820
正如我们在这里所做的那样，

3
00:00:07,820 --> 00:00:11,200
但是内联样式有几个缺点。

4
00:00:11,200 --> 00:00:13,870
他们凌驾于所有其他风格之上，

5
00:00:13,870 --> 00:00:15,970
这有时是你需要的，

6
00:00:15,970 --> 00:00:17,980
但往往会导致问题。

7
00:00:17,980 --> 00:00:21,610
因此，在现代 Web 开发和 CSS 中，

8
00:00:21,610 --> 00:00:25,040
我们通常不会经常使用内联样式。

9
00:00:25,040 --> 00:00:27,070
所以，让我们真正摆脱它

10
00:00:27,070 --> 00:00:29,580
让我给你看别的东西。

11
00:00:29,580 --> 00:00:32,930
我们如何动态绑定 CSS 类，

12
00:00:32,930 --> 00:00:36,600
因为这是我们可以在这里使用的另一种方法。

13
00:00:36,600 --> 00:00:39,830
让我们看看样式，CSS，

14
00:00:39,830 --> 00:00:42,270
让我们在这里添加一个新的 CSS 类，

15
00:00:42,270 --> 00:00:45,780
一个新的 CSS 作为类选择器，我将其命名为 active，

16
00:00:45,780 --> 00:00:47,820
但你可以使用任何你想要的名字。

17
00:00:47,820 --> 00:00:50,890
唯一的规则或唯一的财产

18
00:00:50,890 --> 00:00:53,980
我会设计有边框颜色的，

19
00:00:53,980 --> 00:00:55,560
设置为红色。

20
00:00:55,560 --> 00:00:57,860
实际上是为了让它更容易看到，

21
00:00:57,860 --> 00:01:00,330
让我也将背景颜色更改为鲑鱼

22
00:01:01,675 --> 00:01:03,310
但这是可选的。

23
00:01:03,310 --> 00:01:06,750
所以，现在我们必须在这里激活这个 CSS 类

24
00:01:06,750 --> 00:01:10,340
在 CSS 文件中，我们现在可以关闭它。

25
00:01:10,340 --> 00:01:14,950
现在假设我们要动态添加这个类

26
00:01:15,820 --> 00:01:20,803
如果 boxASelected 为真，则到此 div。

27
00:01:21,810 --> 00:01:23,460
因此，当然，

28
00:01:23,460 --> 00:01:27,630
我们可以动态绑定类属性

29
00:01:27,630 --> 00:01:32,463
使用 V 绑定或仅使用冒号类的简写。

30
00:01:33,770 --> 00:01:37,600
现在课程当然需要一个字符串。

31
00:01:37,600 --> 00:01:39,950
应添加的类的名称，例如，

32
00:01:39,950 --> 00:01:44,070
demo，负责这个默认的盒子样式，

33
00:01:44,070 --> 00:01:46,730
这就是为什么我在这里传递一个字符串。

34
00:01:46,730 --> 00:01:48,590
但我们现在可以确定

35
00:01:48,590 --> 00:01:51,350
我们传递的不仅仅是那个字符串

36
00:01:51,350 --> 00:01:55,430
如果确实选择了框 A。

37
00:01:55,430 --> 00:01:58,720
因此，如果此处选择框 A 为真。

38
00:01:58,720 --> 00:02:01,123
为此，我们可以再次选中 boxASelected，

39
00:02:01,970 --> 00:02:05,870
因此，请在三元表达式中检查此属性。

40
00:02:05,870 --> 00:02:07,810
我们现在可以在这里使用 JavaScript

41
00:02:07,810 --> 00:02:10,620
因为我们用 V 绑定来绑定它。

42
00:02:10,620 --> 00:02:15,620
检查是否属实，如果是，我们添加演示和活动。

43
00:02:15,960 --> 00:02:17,030
这需要是一个字符串

44
00:02:17,030 --> 00:02:20,330
因为这在这里都被评估为 JavaScript

45
00:02:20,330 --> 00:02:22,910
我们想用这些类返回一个字符串，

46
00:02:22,910 --> 00:02:25,420
如果选择了两个班级。

47
00:02:25,420 --> 00:02:28,673
否则，在这个三元表达式中，我们将只添加到 demo。

48
00:02:29,690 --> 00:02:33,930
因此，仅当框 A 被选为 true 时才会添加该活动。

49
00:02:33,930 --> 00:02:36,293
如果我重新加载，这有效。

50
00:02:37,150 --> 00:02:40,950
然而，这不是最好的代码，

51
00:02:40,950 --> 00:02:42,330
有点难读

52
00:02:42,330 --> 00:02:46,110
想象一下这将是多么难以阅读

53
00:02:46,110 --> 00:02:51,110
如果我们有更多想要动态切换的类。

54
00:02:51,300 --> 00:02:54,470
谢天谢地，就像风格一样，

55
00:02:54,470 --> 00:02:58,000
Vue JS 支持一种特殊的语法，

56
00:02:58,000 --> 00:03:01,050
特别是对于类属性

57
00:03:01,050 --> 00:03:03,930
如果你用 V 绑定绑定它。

58
00:03:03,930 --> 00:03:06,140
你也可以在这里传递一个对象，

59
00:03:06,140 --> 00:03:08,280
这通常是行不通的。

60
00:03:08,280 --> 00:03:11,800
如果你不绑定它，那没有任何意义。

61
00:03:11,800 --> 00:03:16,100
但是如果你绑定它，Vue 支持这个对象语法

62
00:03:16,100 --> 00:03:19,030
在那里你现在可以添加属性

63
00:03:19,030 --> 00:03:23,880
属性名称反映您的 CSS 类的位置

64
00:03:23,880 --> 00:03:28,880
并且这些属性的值为真或假

65
00:03:29,060 --> 00:03:31,610
或一个真、少或假的结果，

66
00:03:31,610 --> 00:03:34,510
指示是否应添加该类。

67
00:03:34,510 --> 00:03:36,810
所以，我们可以添加 demo 作为键名，

68
00:03:36,810 --> 00:03:39,770
作为属性名称并将其设置为 true

69
00:03:39,770 --> 00:03:44,280
以便始终添加演示并添加活动

70
00:03:44,280 --> 00:03:47,453
并将 active 的值设置为 boxASelected

71
00:03:48,610 --> 00:03:52,530
以便将活动类添加到此 div

72
00:03:52,530 --> 00:03:54,85​​3
如果 boxASelected 是真的。

73
00:03:55,910 --> 00:03:57,410
如果我们保存并重新加载，

74
00:03:57,410 --> 00:03:59,690
我们有和以前一样的行为，

75
00:03:59,690 --> 00:04:02,175
但有更多可读的代码，

76
00:04:02,175 --> 00:04:05,700
特别是如果我们在这里添加越来越多的类，

77
00:04:05,700 --> 00:04:08,810
这保持可读性和可维护性，

78
00:04:08,810 --> 00:04:11,213
这当然是超级重要的。

79
00:04:12,340 --> 00:04:16,029
现在我们也可以在其他 div 上做同样的事情。

80
00:04:16,029 --> 00:04:17,839
但实际上在我们这样做之前，

81
00:04:17,839 --> 00:04:20,250
我想进一步简化。

82
00:04:20,250 --> 00:04:22,910
将 demo 设置为 true 有点多余，

83
00:04:22,910 --> 00:04:25,620
我们总是添加到那个类。

84
00:04:25,620 --> 00:04:28,890
因此，谢天谢地，我们可以从这里删除它，

85
00:04:28,890 --> 00:04:30,690
从这个对象中删除它

86
00:04:30,690 --> 00:04:33,570
而是像这样添加类属性

87
00:04:33,570 --> 00:04:34,960
并将其设置为演示

88
00:04:34,960 --> 00:04:39,620
并且还有我们动态绑定的类属性。

89
00:04:39,620 --> 00:04:42,260
所以，这里的这个不是动态绑定的，

90
00:04:42,260 --> 00:04:44,170
我这里没有冒号。

91
00:04:44,170 --> 00:04:47,020
所以，这是常规的类属性

92
00:04:47,020 --> 00:04:48,910
我会把它设置为演示。

93
00:04:48,910 --> 00:04:51,730
Vue 基本上会认识到这一点

94
00:04:51,730 --> 00:04:53,750
永远不要改变它。

95
00:04:53,750 --> 00:04:56,150
但后来我也动态绑定类

96
00:04:56,150 --> 00:05:00,200
Vue 会做的是评估结果

97
00:05:00,200 --> 00:05:02,740
这个动态类绑定

98
00:05:02,740 --> 00:05:06,420
并将其与此处的硬编码合并。

99
00:05:06,420 --> 00:05:09,560
这样，如果我重新加载，我们会得到与以前相同的行为，

100
00:05:09,560 --> 00:05:13,590
但用更少的代码甚至更容易管理代码，

101
00:05:13,590 --> 00:05:14,423
我应该说。

102
00:05:15,600 --> 00:05:19,620
那么当然，现在我们可以很容易地把它带过来

103
00:05:19,620 --> 00:05:23,040
如果我们愿意，也可以发送给其他 div

104
00:05:23,040 --> 00:05:26,590
只需检查 boxBSelected 和 boxCSelected。

105
00:05:30,070 --> 00:05:33,570
这样，我们也可以突出显示这些框。

106
00:05:33,570 --> 00:05:36,860
我们目前无法取消标记，

107
00:05:36,860 --> 00:05:40,430
但是，这仍然是添加动态类的方法

108
00:05:40,430 --> 00:05:42,983
和 Vue 的动态样式。

109
00:05:44,600 --> 00:05:45,970
现在，如果你想确保用户

110
00:05:45,970 --> 00:05:49,770
实际上可以切换它而不仅仅是将其标记为活动，

111
00:05:49,770 --> 00:05:52,810
我们可以简单地转到我们的代码并稍微改变一下

112
00:05:52,810 --> 00:05:55,170
而不是设置此框ASelected

113
00:05:55,170 --> 00:05:58,800
一直为真，我将其设置为相反

114
00:05:58,800 --> 00:06:00,903
此框A已选

115
00:06:00,903 --> 00:06:04,840
这样最后，如果选择了框 A，

116
00:06:04,840 --> 00:06:07,570
如果它是真的，它现在是假的，

117
00:06:07,570 --> 00:06:09,360
感谢这个感叹号。

118
00:06:09,360 --> 00:06:12,493
而这个假值就是boxASelected的新值，

119
00:06:13,590 --> 00:06:17,100
我会为其他盒子做同样的事情。

120
00:06:17,100 --> 00:06:19,840
通过这个简单的调整，

121
00:06:19,840 --> 00:06:23,190
我们确保现在这是一个可切换的，

122
00:06:23,190 --> 00:06:26,760
我们可以切换它而不仅仅是将其设置为活动状态，

123
00:06:26,760 --> 00:06:29,453
但也将其设置为非活动状态。