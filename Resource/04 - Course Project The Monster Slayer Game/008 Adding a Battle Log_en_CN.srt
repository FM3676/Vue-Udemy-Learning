1
00:00:02,130 --> 00:00:05,010
所以让我们继续战斗日志。

2
00:00:05,010 --> 00:00:06,650
而且肯定有很多方法

3
00:00:06,650 --> 00:00:08,840
实施这样的日志。

4
00:00:08,840 --> 00:00:11,759
我想要一个日志，我们可以在其中添加消息

5
00:00:11,759 --> 00:00:16,110
那基本上跟踪发生了哪些动作？

6
00:00:16,110 --> 00:00:18,670
谁开始了这个行动？

7
00:00:18,670 --> 00:00:22,040
哪个价值与这个行动有关？

8
00:00:22,040 --> 00:00:24,740
例如，造成了多少伤害。

9
00:00:24,740 --> 00:00:27,210
为此，我们应该回到 app.js

10
00:00:27,210 --> 00:00:29,400
并在这里添加一个新方法，

11
00:00:29,400 --> 00:00:31,990
可以称为 addLogMessage，

12
00:00:31,990 --> 00:00:34,420
因为这就是我们要做的。

13
00:00:34,420 --> 00:00:38,760
此方法应采用三个参数。

14
00:00:38,760 --> 00:00:42,113
它应该获取信息，谁做了什么。

15
00:00:43,360 --> 00:00:45,580
所以我要命名它是谁。

16
00:00:45,580 --> 00:00:48,160
然后我想知道发生了什么。

17
00:00:48,160 --> 00:00:51,210
我们攻击了吗？我们痊愈了吗？

18
00:00:51,210 --> 00:00:54,180
所以我要在这里添加一个什么

19
00:00:54,180 --> 00:00:58,110
我需要知道价值，造成了多少伤害。

20
00:00:58,110 --> 00:00:59,920
我们治愈了多少钱？

21
00:00:59,920 --> 00:01:02,360
所以这些是我们这里需要的自由参数。

22
00:01:02,360 --> 00:01:04,959
谁，什么和价值。

23
00:01:04,959 --> 00:01:06,430
有了这些信息，

24
00:01:06,430 --> 00:01:08,850
我想添加一条新的日志消息

25
00:01:08,850 --> 00:01:11,800
到越来越多的 logMessages 列表，

26
00:01:11,800 --> 00:01:14,300
然后可以在这里输出

27
00:01:14,300 --> 00:01:17,380
在屏幕上的这个战斗日志中。

28
00:01:17,380 --> 00:01:20,460
因此，我们需要一个数据属性

29
00:01:20,460 --> 00:01:22,620
一组 logMessages，

30
00:01:22,620 --> 00:01:25,890
哪些可以改变，哪些 Vue 跟踪

31
00:01:25,890 --> 00:01:27,390
了解变化

32
00:01:27,390 --> 00:01:31,000
以便在更改时更新 UI？

33
00:01:31,000 --> 00:01:35,640
因此，在这里，我将添加一个 logMessages 数组，

34
00:01:35,640 --> 00:01:37,960
最初是空的。

35
00:01:37,960 --> 00:01:39,570
当我们在做的时候，

36
00:01:39,570 --> 00:01:42,700
我们也可以将其重置为空数组

37
00:01:42,700 --> 00:01:44,350
当我们开始一个新游戏时。

38
00:01:44,350 --> 00:01:47,563
所以在这里将 logMessages 设置回一个空数组，

39
00:01:48,420 --> 00:01:52,894
但是现在我们在 addLogMessage 中获得了 logMessages

40
00:01:52,894 --> 00:01:56,640
我想向这个数组添加一条新的日志消息

41
00:01:56,640 --> 00:01:58,910
每当调用此方法时。

42
00:01:58,910 --> 00:02:01,860
我想在数组的开头添加它，

43
00:02:01,860 --> 00:02:05,560
以便最新消息始终位于最前面。

44
00:02:05,560 --> 00:02:07,630
所以它是数组中的第一个，

45
00:02:07,630 --> 00:02:10,220
我们可以通过联系 logMessages 来做到这一点

46
00:02:10,220 --> 00:02:11,793
并使用 unshift。

47
00:02:12,990 --> 00:02:15,430
Unshift基本上就像push，

48
00:02:15,430 --> 00:02:19,978
但是 push 在数组末尾添加了一些东西

49
00:02:19,978 --> 00:02:23,803
unshift 在数组的开头添加一些东西。

50
00:02:25,050 --> 00:02:28,730
现在由您决定日志消息的外观。

51
00:02:28,730 --> 00:02:32,460
到目前为止，在其他讲座和模块中的课程。

52
00:02:32,460 --> 00:02:36,660
当我们使用列表和数组以及 v-for 时，

53
00:02:36,660 --> 00:02:41,140
我们总是有充满文本的字符串的数组。

54
00:02:41,140 --> 00:02:45,150
在这里，因为我们有重要的免费信息，

55
00:02:45,150 --> 00:02:48,620
我实际上会在这个数组中添加一个对象。

56
00:02:48,620 --> 00:02:51,220
所以日志消息是一个对象，

57
00:02:51,220 --> 00:02:54,050
你会看到我们如何在屏幕上输出does

58
00:02:54,050 --> 00:02:55,950
在一秒钟内。

59
00:02:55,950 --> 00:03:00,390
所以在这里我现在将添加不同的信息

60
00:03:00,390 --> 00:03:03,850
到这个对象到谁，什么和价值是准确的

61
00:03:03,850 --> 00:03:07,350
我将把关键行动命名为：谁

62
00:03:07,350 --> 00:03:10,690
动作类型：什么

63
00:03:10,690 --> 00:03:14,590
和 actionValue 我们得到的价值。

64
00:03:14,590 --> 00:03:17,730
所以我们向我们的 logMessages 添加一个对象，

65
00:03:17,730 --> 00:03:21,940
它具有按动作类型和动作值的三个键动作。

66
00:03:21,940 --> 00:03:24,240
这样我们就知道是谁做了这个动作，

67
00:03:24,240 --> 00:03:25,900
是什么动作

68
00:03:25,900 --> 00:03:27,963
以及行动的价值是什么。

69
00:03:29,360 --> 00:03:31,930
这就是我们添加 logMessages 的方式。

70
00:03:31,930 --> 00:03:34,700
现在应该添加一条新的日志消息

71
00:03:34,700 --> 00:03:38,120
例如，当我们攻击怪物时。

72
00:03:38,120 --> 00:03:42,750
所以在attackMonster中，在怪物攻击我们之前，

73
00:03:42,750 --> 00:03:47,750
我想调用addLogMessage，所以这个新加的方法

74
00:03:47,860 --> 00:03:50,370
并设置谁播放

75
00:03:50,370 --> 00:03:53,400
因为玩家攻击了怪物

76
00:03:53,400 --> 00:03:56,730
想要将动作设置为攻击

77
00:03:56,730 --> 00:04:01,730
并像这样传入attackValue。

78
00:04:03,530 --> 00:04:07,050
现在，当怪物在attackPlayer中攻击我们时，

79
00:04:07,050 --> 00:04:09,110
我还想添加一条日志消息，

80
00:04:09,110 --> 00:04:12,260
但现在攻击我们的是怪物

81
00:04:12,260 --> 00:04:16,223
对于这个给定的攻击值，您也可以在此处得出。

82
00:04:17,350 --> 00:04:20,649
当然，我们对特殊攻击也是如此。

83
00:04:20,649 --> 00:04:23,370
玩家在这里攻击怪物。

84
00:04:23,370 --> 00:04:26,460
我们也可以将这种特殊攻击命名为，

85
00:04:26,460 --> 00:04:28,030
但这完全取决于你

86
00:04:28,030 --> 00:04:31,250
你以后想如何处理这些不同的类型。

87
00:04:31,250 --> 00:04:32,770
我不会区分

88
00:04:32,770 --> 00:04:35,190
介于特殊攻击和普通攻击之间。

89
00:04:35,190 --> 00:04:37,620
所以我就命名它，这里也是攻击。

90
00:04:37,620 --> 00:04:40,770
如果您想添加这样的区分，

91
00:04:40,770 --> 00:04:43,640
你可以在这里使用不同的标识符，

92
00:04:43,640 --> 00:04:45,003
但我会坚持攻击。

93
00:04:46,810 --> 00:04:48,890
最后但并非最不重要的治疗在这里，

94
00:04:48,890 --> 00:04:53,890
玩家治疗自己的脚后跟值。

95
00:04:54,580 --> 00:04:57,603
这就是我想在此处添加的日志消息。

96
00:04:59,730 --> 00:05:03,320
所以现在我们已经添加了这些不同的 logMessages

97
00:05:03,320 --> 00:05:06,400
这样我们的 logMessages 数组就会增长。

98
00:05:06,400 --> 00:05:10,223
现在的问题是我们如何输出这些消息。

99
00:05:11,340 --> 00:05:15,060
在 index.html 中，我们在这里得到了这个无序列表

100
00:05:15,060 --> 00:05:16,470
在我们的战斗日志中

101
00:05:16,470 --> 00:05:18,740
这个无序列表应该呈现

102
00:05:18,740 --> 00:05:21,040
一堆列表项。

103
00:05:21,040 --> 00:05:22,430
正如我之前提到的，

104
00:05:22,430 --> 00:05:26,503
你不需要使用列表项来使用 v-for。

105
00:05:26,503 --> 00:05:29,210
V-for 可用于任何元素，

106
00:05:29,210 --> 00:05:31,410
但是因为我们正在输出数据列表

107
00:05:31,410 --> 00:05:34,450
我们想编写语义正确的代码

108
00:05:34,450 --> 00:05:37,720
通常你会在列表项上使用 v-for，

109
00:05:37,720 --> 00:05:41,630
因为那是语义正确的 HTML 元素

110
00:05:41,630 --> 00:05:43,410
适合列表项。

111
00:05:43,410 --> 00:05:45,170
这只是一个旁注。

112
00:05:45,170 --> 00:05:47,250
当然这里更重要的是

113
00:05:47,250 --> 00:05:49,100
虽然我们使用 v-for

114
00:05:49,100 --> 00:05:51,680
我们学到的一个很好的 Vue 指令

115
00:05:51,680 --> 00:05:55,000
这可以帮助我们输出列表内容。

116
00:05:55,000 --> 00:05:58,190
它允许我们重复这个列表项元素，

117
00:05:58,190 --> 00:06:00,750
并根据需要经常创建它

118
00:06:00,750 --> 00:06:04,571
在屏幕上有一个列表项 HTML 元素

119
00:06:04,571 --> 00:06:09,430
我们的 logMessages 数组中的每个项目。

120
00:06:09,430 --> 00:06:12,430
所以这里我们需要参考logMessages

121
00:06:12,430 --> 00:06:15,320
并用 in 关键字浏览它

122
00:06:15,320 --> 00:06:18,970
然后访问每条日志消息

123
00:06:18,970 --> 00:06:21,890
我们现在可以在里面使用

124
00:06:21,890 --> 00:06:24,363
这个重复的列表项。

125
00:06:27,080 --> 00:06:28,053
现在在这里。

126
00:06:29,240 --> 00:06:30,880
我们要输出的内容

127
00:06:30,880 --> 00:06:33,440
当然完全取决于你。

128
00:06:33,440 --> 00:06:35,900
我们可以在这里使用插值

129
00:06:35,900 --> 00:06:39,690
按字段输出动作，

130
00:06:39,690 --> 00:06:43,160
这是我们作为日志消息添加的自由字段之一，

131
00:06:43,160 --> 00:06:45,747
这基本上表明谁做了某事。

132
00:06:45,747 --> 00:06:48,390
然后我们可以添加一个破折号

133
00:06:48,390 --> 00:06:50,960
和一个新的插值在这里

134
00:06:50,960 --> 00:06:53,513
输出 logMessage.actionType

135
00:06:57,223 --> 00:06:59,440
以便我们知道发生了什么。

136
00:06:59,440 --> 00:07:01,550
然后又是一个破折号

137
00:07:01,550 --> 00:07:04,770
和另一个r 插值在这里

138
00:07:04,770 --> 00:07:09,523
输出我们的行动价值。

139
00:07:11,200 --> 00:07:12,440
这是我们可以做的

140
00:07:12,440 --> 00:07:13,720
我们将输出

141
00:07:13,720 --> 00:07:15,900
谁做了什么，发生了什么

142
00:07:15,900 --> 00:07:17,793
以及关联的值。

143
00:07:18,740 --> 00:07:21,090
如果我们保存并重新加载，

144
00:07:21,090 --> 00:07:23,680
确实，如果我单击此处的攻击，您会看到。

145
00:07:23,680 --> 00:07:26,550
我们有这两个 logMessages

146
00:07:26,550 --> 00:07:29,120
我们看到玩家攻击了六

147
00:07:29,120 --> 00:07:31,720
并且在怪物攻击之后出现了八次。

148
00:07:31,720 --> 00:07:33,260
这是一个美好的开始，

149
00:07:33,260 --> 00:07:35,820
但其实我准备了一些款式

150
00:07:35,820 --> 00:07:38,230
以更好的方式输出它。

151
00:07:38,230 --> 00:07:40,173
所以让我们实际使用它们。

152
00:07:41,250 --> 00:07:43,660
因此，我将摆脱它。

153
00:07:43,660 --> 00:07:47,700
相反，在这里添加一个跨度，一个跨度元素，

154
00:07:47,700 --> 00:07:52,700
它实际上应该包含动作的发起者。

155
00:07:52,980 --> 00:07:55,490
所以这个动作按字段。

156
00:07:55,490 --> 00:07:57,250
所以在这里我想访问 logMessage

157
00:07:58,880 --> 00:08:03,880
并检查 actionBy 是否等于 player。

158
00:08:05,310 --> 00:08:09,400
在这种情况下，我想在这里用大写 P 打印 player

159
00:08:09,400 --> 00:08:13,410
否则它会是怪物，所以我会输出它。

160
00:08:13,410 --> 00:08:16,252
所以这里有点三元表达。

161
00:08:16,252 --> 00:08:19,900
之后我也想有第二个跨度

162
00:08:19,900 --> 00:08:24,410
它包含发生的动作类型，

163
00:08:24,410 --> 00:08:29,260
在这里，我们要么造成伤害，要么治愈自己。

164
00:08:29,260 --> 00:08:34,260
所以使用 v-if，我将检查 logMessage.actionType

165
00:08:34,340 --> 00:08:36,240
等于治愈。

166
00:08:36,240 --> 00:08:37,360
在这种情况下，

167
00:08:37,360 --> 00:08:41,159
我想说治愈自己

168
00:08:41,159 --> 00:08:45,110
所以我们说玩家可以治愈自己，

169
00:08:45,110 --> 00:08:47,580
因为，当然，然后，

170
00:08:47,580 --> 00:08:48,750
完成的治疗量，

171
00:08:48,750 --> 00:08:50,670
我将在另一个跨度中包装

172
00:08:50,670 --> 00:08:53,670
只是这样我以后可以添加一些样式

173
00:08:53,670 --> 00:08:55,598
突出价值

174
00:08:55,598 --> 00:08:58,286
在这里进入第二个跨度，

175
00:08:58,286 --> 00:09:03,286
我将添加日志消息操作值，

176
00:09:03,430 --> 00:09:06,120
这是在这里被治愈的数量。

177
00:09:06,120 --> 00:09:08,460
我会在这里给出这个跨度

178
00:09:08,460 --> 00:09:13,070
一个 CSS 类的 log--heal，

179
00:09:13,070 --> 00:09:15,930
这是这里准备好的 CSS 类之一

180
00:09:15,930 --> 00:09:19,670
简单地将我们治愈的数量涂成绿色。

181
00:09:19,670 --> 00:09:22,720
这就是我在这里有这个额外跨度的唯一原因

182
00:09:22,720 --> 00:09:25,250
这样我就可以添加一个额外的 CSS 类

183
00:09:25,250 --> 00:09:27,463
就这个跟值文字。

184
00:09:29,210 --> 00:09:30,650
现在这是一种选择。

185
00:09:30,650 --> 00:09:32,020
我需要一些跨度

186
00:09:32,020 --> 00:09:35,700
旁边的这位将军治愈了自己的跨度。

187
00:09:35,700 --> 00:09:37,298
这就是场景

188
00:09:37,298 --> 00:09:39,980
我们实际上处理了损坏的

189
00:09:39,980 --> 00:09:42,230
我们没有治愈自己。

190
00:09:42,230 --> 00:09:43,640
这里我们可以使用 v-else

191
00:09:43,640 --> 00:09:46,180
因为造成伤害是唯一的选择

192
00:09:46,180 --> 00:09:47,670
我们在这场比赛中。

193
00:09:47,670 --> 00:09:50,850
因此在这里我会说攻击

194
00:09:50,850 --> 00:09:55,850
所以我们说诸如玩家攻击和交易之类的东西。

195
00:09:58,140 --> 00:10:00,690
现在再一次，我会把伤害放在一个跨度内

196
00:10:00,690 --> 00:10:03,570
这样我们就可以添加一个额外的 CSS 类

197
00:10:03,570 --> 00:10:06,103
在这种情况下，log--damage 类，

198
00:10:08,600 --> 00:10:12,563
这是我们准备好的 CSS 类给它一个红色。

199
00:10:15,370 --> 00:10:19,260
并在那个特殊的跨度内再次输出伤害值。

200
00:10:19,260 --> 00:10:22,250
这样我们就可以利用这个突出显示，

201
00:10:22,250 --> 00:10:24,670
这种特殊的 CSS 样式？

202
00:10:24,670 --> 00:10:28,233
所以这里我们再次有 logMessage.actionValue。

203
00:10:31,630 --> 00:10:33,780
所以这就是我们现在可以如何构建它的方式。

204
00:10:33,780 --> 00:10:37,660
我还想在这里添加一个 CSS 类到这个头等舱

205
00:10:37,660 --> 00:10:40,310
突出谁做了某事。

206
00:10:40,310 --> 00:10:43,840
为此，我将在这里动态添加一个类

207
00:10:43,840 --> 00:10:46,000
因为我想添加不同的类

208
00:10:46,000 --> 00:10:48,480
取决于我们拥有的玩家

209
00:10:48,480 --> 00:10:51,280
或者怪物在这里做某事。

210
00:10:51,280 --> 00:10:54,020
所以我会在这里添加这个对象语法

211
00:10:54,020 --> 00:10:57,570
并添加一类日志播放器，

212
00:10:57,570 --> 00:11:00,793
这是另一个准备好的课程，

213
00:11:01,800 --> 00:11:04,626
如果 action by 是玩家

214
00:11:04,626 --> 00:11:08,860
并添加 log--monster

215
00:11:08,860 --> 00:11:12,430
如果动作是由怪物开始的，

216
00:11:12,430 --> 00:11:16,310
顺便说一下，您需要在这些键周围加上单引号，

217
00:11:16,310 --> 00:11:18,640
因为我们在这里是一个 JavaScript 对象

218
00:11:18,640 --> 00:11:22,150
并且不允许在属性名称中使用破折号

219
00:11:22,150 --> 00:11:25,810
无需将整个属性名称包含在引号中

220
00:11:25,810 --> 00:11:28,510
不过，如果有引号，它们是允许的。

221
00:11:28,510 --> 00:11:30,390
所以这就是为什么你需要单引号

222
00:11:30,390 --> 00:11:32,323
在这里围绕您的财产名称。

223
00:11:34,340 --> 00:11:37,600
这些属性的值在这里，

224
00:11:37,600 --> 00:11:40,960
正如您所了解的，需要是指示的值

225
00:11:40,960 --> 00:11:45,550
是否应将这些类添加到该跨度。

226
00:11:45,550 --> 00:11:49,220
所以你最终需要 true 或 false 。

227
00:11:49,220 --> 00:11:52,360
因此我们可以简单地检查 logMessage.actionBy

228
00:11:53,880 --> 00:11:56,020
在这里等于玩家。

229
00:11:56,020 --> 00:11:57,360
如果这是真的，

230
00:11:57,360 --> 00:11:59,580
我想添加 log--player 类。

231
00:11:59,580 --> 00:12:01,603
如果那是假的，我不想添加它。

232
00:12:03,650 --> 00:12:05,720
而对于添加 log--monster，

233
00:12:05,720 --> 00:12:08,880
我想检查 logMessage.actionBy

234
00:12:08,880 --> 00:12:11,360
等于怪物。

235
00:12:11,360 --> 00:12:12,950
当然只有两者之一

236
00:12:12,950 --> 00:12:14,763
在给定的时间将是真实的。

237
00:12:16,010 --> 00:12:17,940
这就是我的逻辑。

238
00:12:17,940 --> 00:12:20,140
现在，这很长，

239
00:12:20,140 --> 00:12:22,800
但将其外包到计算属性中

240
00:12:22,800 --> 00:12:25,220
实际上是不可能的

241
00:12:25,220 --> 00:12:27,200
因为这不取决于

242
00:12:27,200 --> 00:12:29,400
在一些通用数据属性上，

243
00:12:29,400 --> 00:12:33,620
但是根据我们得到的这个确切列表项的具体值，

244
00:12:33,620 --> 00:12:34,900
正在渲染。

245
00:12:34,900 --> 00:12:38,500
因此，如果您想将其外包到 JavaScript 代码中，

246
00:12:38,500 --> 00:12:41,050
你确实需要使用一种方法

247
00:12:41,050 --> 00:12:44,790
例如，您将 logMessage.actionBy 传递给它，

248
00:12:44,790 --> 00:12:49,320
因为这不是单一值管理的应用程序范围，

249
00:12:49,320 --> 00:12:52,710
但这取决于正在呈现哪个列表项。

250
00:12:52,710 --> 00:12:54,840
这只是一个旁注。

251
00:12:54,840 --> 00:12:55,730
然而，有了这个，

252
00:12:55,730 --> 00:12:58,610
如果我们保存并重新加载，如果我们现在攻击，

253
00:12:58,610 --> 00:13:01,580
我们看到类似怪物攻击并造成 12 的东西，

254
00:13:01,580 --> 00:13:03,710
玩家攻击并处理六。

255
00:13:03,710 --> 00:13:06,820
如果我们治疗，我们会看到玩家治疗自己 9

256
00:13:06,820 --> 00:13:08,130
在怪物之后，

257
00:13:08,130 --> 00:13:09,500
攻击我们13，

258
00:13:09,500 --> 00:13:11,900
所以这并没有太大帮助。

259
00:13:11,900 --> 00:13:14,440
这现在看起来更好等等。

260
00:13:14,440 --> 00:13:16,480
所以这一切似乎都奏效了。

261
00:13:16,480 --> 00:13:17,984
现在我们得到了一个日志

262
00:13:17,984 --> 00:13:20,130
如果游戏结束，

263
00:13:20,130 --> 00:13:22,450
我们可以检查整个日志。

264
00:13:22,450 --> 00:13:23,800
如果我们开始一个新游戏，

265
00:13:23,800 --> 00:13:26,320
当然，它应该是重置的。

266
00:13:26,320 --> 00:13:27,940
因为在开始游戏时，

267
00:13:27,940 --> 00:13:31,003
我们再次将 logMessages 设置为一个空数组。

268
00:13:32,870 --> 00:13:35,830
这就是这里完成的游戏。

269
00:13:35,830 --> 00:13:38,897
这实际上是一个不错的第一个项目，

270
00:13:38,897 --> 00:13:42,640
它显示了我们了解的所有核心功能

271
00:13:42,640 --> 00:13:47,640
比如插值，v-bind，v-on 不同的事件，

272
00:13:47,810 --> 00:13:52,200
方法、计算、观察、v-if、v-for

273
00:13:52,200 --> 00:13:53,670
都在这里。

274
00:13:53,670 --> 00:13:56,440
因此我希望这个项目

275
00:13:56,440 --> 00:13:59,460
帮助您更好地了解 Vue，

276
00:13:59,460 --> 00:14:02,440
组成 Vue 的不同部分

277
00:14:02,440 --> 00:14:05,100
以及它们如何协同工作。

278
00:14:05,100 --> 00:14:09,393
现在我们已经做好了深入研究 Vue 的准备。