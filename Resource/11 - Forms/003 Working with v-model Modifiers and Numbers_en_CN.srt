1
00:00:02,150 --> 00:00:04,480
让我们继续这个时代。

2
00:00:04,480 --> 00:00:07,673
这里输入的年龄实际上是数字类型。

3
00:00:08,600 --> 00:00:10,420
现在这可能会令人困惑，

4
00:00:10,420 --> 00:00:13,630
仅仅因为它的类型号并不意味着

5
00:00:13,630 --> 00:00:14,900
您在此处输入的内容

6
00:00:14,900 --> 00:00:18,300
将被视为代码中的类型编号。

7
00:00:18,300 --> 00:00:20,020
看起来像一个数字

8
00:00:20,020 --> 00:00:23,670
你将无法在此处输入除数字以外的任何内容，

9
00:00:23,670 --> 00:00:26,170
但你不会自动，

10
00:00:26,170 --> 00:00:29,440
在代码中获取类型 number 的值。

11
00:00:29,440 --> 00:00:32,320
听起来很混乱，让我告诉你我的意思。

12
00:00:32,320 --> 00:00:36,213
让我们添加一个新的数据属性 userAge，也许。

13
00:00:37,070 --> 00:00:39,410
让我们也将它设置为一个空字符串，

14
00:00:39,410 --> 00:00:41,860
或者可能是一个数字，或者可能是 null。

15
00:00:41,860 --> 00:00:45,850
让我们也许使用 null 因为我不想使用零。

16
00:00:45,850 --> 00:00:47,730
我也不想使用空字符串

17
00:00:47,730 --> 00:00:49,320
因为它应该是一个数字。

18
00:00:49,320 --> 00:00:51,170
所以我会用 null 说清楚

19
00:00:51,170 --> 00:00:53,633
我们对此还没有任何价值。

20
00:00:55,580 --> 00:01:00,580
现在让我们在这里将 userAge 绑定到这个输入，这个输入。

21
00:01:02,100 --> 00:01:05,560
我们可以使用在这个输入上工作的 v-model 来做到这一点

22
00:01:05,560 --> 00:01:07,570
就像第一个一样

23
00:01:08,430 --> 00:01:10,963
在这里，我现在可以指向 userAge。

24
00:01:12,560 --> 00:01:17,560
现在有了这个，让我们在这里，哎呀，方法

25
00:01:17,730 --> 00:01:20,300
我将控制台记录 userAge，

26
00:01:21,950 --> 00:01:25,710
我现在会故意使用两个控制台日志

27
00:01:25,710 --> 00:01:29,000
这样我就不会将用户年龄与字符串连接起来

28
00:01:29,000 --> 00:01:33,363
到更长的字符串，但这样我就可以保持用户年龄的类型。

29
00:01:35,540 --> 00:01:39,520
下面我将记录一个随机数，在本例中为 31

30
00:01:40,950 --> 00:01:43,960
你马上就会明白我为什么要这么做。

31
00:01:43,960 --> 00:01:47,500
然后我当然也可以将其重置为空

32
00:01:47,500 --> 00:01:49,693
也在输入字段中重置它。

33
00:01:51,870 --> 00:01:54,820
有了这一切，如果我们回去，

34
00:01:54,820 --> 00:01:57,060
我当然仍然可以在这里输入最大值，

35
00:01:57,060 --> 00:02:01,840
但我也可以在此处输入 31 或 32 或任何您想要的。

36
00:02:01,840 --> 00:02:05,590
如果我单击保存数据，您会看到它已提交

37
00:02:06,820 --> 00:02:11,143
你会看到 32 看起来就像 31。

38
00:02:13,580 --> 00:02:15,950
那么这里有什么特别之处。

39
00:02:15,950 --> 00:02:18,000
好吧，看看会发生什么

40
00:02:18,000 --> 00:02:21,440
如果我不是用 v-model 检索到的值

41
00:02:21,440 --> 00:02:25,543
或者不仅使用 v-model，而且如果我还在这里添加一个 ref，

42
00:02:26,682 --> 00:02:29,023
ageInput 可以是参考标识符。

43
00:02:30,320 --> 00:02:33,980
加上那个 ref，让我回到这里

44
00:02:33,980 --> 00:02:36,880
然后我将控制台记录该值

45
00:02:36,880 --> 00:02:41,623
这个参考的ageInput.value。

46
00:02:43,070 --> 00:02:45,960
所以我正在访问本机 dom 元素

47
00:02:45,960 --> 00:02:48,660
然后我可以访问 value 属性，

48
00:02:48,660 --> 00:02:50,113
我在这里输出这个。

49
00:02:51,170 --> 00:02:55,230
如果我这样做并在此处输入 32，

50
00:02:55,230 --> 00:02:56,880
你会看到一些有趣的东西。

51
00:02:57,760 --> 00:03:02,620
这 32 是我们内部管理的数据属性，

52
00:03:02,620 --> 00:03:04,503
它与 v-model 绑定。

53
00:03:05,460 --> 00:03:09,773
这 31 是我在这里输出的虚拟数字。

54
00:03:10,740 --> 00:03:14,337
我在这里用 refs 输出的值是 32

55
00:03:14,337 --> 00:03:16,050
有趣的是

56
00:03:16,050 --> 00:03:18,740
这是黑色的，这是蓝色的。

57
00:03:18,740 --> 00:03:21,430
蓝色表示它的类型号，

58
00:03:21,430 --> 00:03:24,620
黑色表示它是字符串类型。

59
00:03:24,620 --> 00:03:26,810
所以这是一种不同的数据类型。

60
00:03:26,810 --> 00:03:28,430
为什么这很重要？

61
00:03:28,430 --> 00:03:30,680
好吧，假设你继续工作

62
00:03:30,680 --> 00:03:32,250
用你拿到的那个号码。

63
00:03:32,250 --> 00:03:36,290
也许你加五个，让我在这两种情况下都这样做。

64
00:03:36,290 --> 00:03:38,770
对于我们在数据中管理的属性

65
00:03:38,770 --> 00:03:41,283
对于我们通过 refs 获得的属性。

66
00:03:42,860 --> 00:03:46,450
如果我这样做并且我再次输入 32，

67
00:03:46,450 --> 00:03:49,440
我们得到 37 的数据道具埃蒂

68
00:03:49,440 --> 00:03:53,373
但是 ref 属性为 325，

69
00:03:54,530 --> 00:03:56,460
这不是数学错误。

70
00:03:56,460 --> 00:03:58,950
这只是一个串联的字符串，

71
00:03:58,950 --> 00:04:02,433
32 和 5 合二为一。

72
00:04:03,690 --> 00:04:07,000
所以你应该在这里知道的有趣的事情

73
00:04:07,000 --> 00:04:08,800
是那个v模型，

74
00:04:08,800 --> 00:04:12,110
如果用于数字类型的输入

75
00:04:12,110 --> 00:04:14,660
自动获取用户输入

76
00:04:14,660 --> 00:04:18,123
并将其从字符串转换为多种数据类型。

77
00:04:19,540 --> 00:04:23,250
默认情况下，如果您只使用 JavaScript

78
00:04:23,250 --> 00:04:25,250
或者如果您使用的是 refs，因此

79
00:04:25,250 --> 00:04:28,880
表示此输入的本机 JavaScript 对象。

80
00:04:28,880 --> 00:04:33,493
默认情况下，存储在值中的始终是字符串。

81
00:04:34,850 --> 00:04:39,850
这是它看到的 Vue 和 v-model 添加的额外功能

82
00:04:40,300 --> 00:04:42,930
该输入的类型为 number

83
00:04:42,930 --> 00:04:46,600
并因此转换此字符串值

84
00:04:46,600 --> 00:04:48,423
为您带来多项价值。

85
00:04:49,890 --> 00:04:52,310
您也可以强制它这样做。

86
00:04:52,310 --> 00:04:55,350
例如，如果您在这里使用另一种类型，

87
00:04:55,350 --> 00:04:57,940
你可以强制 Vue 进行转换

88
00:04:57,940 --> 00:05:00,750
通过在此处的 v-model 之后添加修饰符，

89
00:05:00,750 --> 00:05:03,030
数字修饰符。

90
00:05:03,030 --> 00:05:05,130
这迫使这种转换，

91
00:05:05,130 --> 00:05:07,690
哪个 v-model 在这里自动执行

92
00:05:07,690 --> 00:05:09,283
在类型号的情况下。

93
00:05:11,410 --> 00:05:14,440
说到这些修饰符，你可能已经看过了，

94
00:05:14,440 --> 00:05:17,570
还有一些其他的修饰符。

95
00:05:17,570 --> 00:05:20,680
惰性修饰符允许您更改

96
00:05:20,680 --> 00:05:23,710
Vue 如何更新绑定属性。

97
00:05:23,710 --> 00:05:26,500
如果它在每次击键时都这样做

98
00:05:26,500 --> 00:05:31,500
或者，如果对于某些输入，它会以较低的频率执行此操作。

99
00:05:31,560 --> 00:05:34,300
Trim 让你告诉 Vue

100
00:05:34,300 --> 00:05:37,020
它应该删除多余的空白

101
00:05:37,020 --> 00:05:40,763
在输入的文本的开头和结尾。

102
00:05:41,810 --> 00:05:45,150
这相当于手动执行此操作

103
00:05:45,150 --> 00:05:49,253
在此字符串上使用 trim 方法。

104
00:05:50,430 --> 00:05:54,560
因此，添加修剪后，您可以确保始终获得输入

105
00:05:54,560 --> 00:05:57,710
最后没有前导或尾随空格，

106
00:05:57,710 --> 00:06:00,460
这当然也是有用的。

107
00:06:01,750 --> 00:06:03,970
那是很多关于 v-model 的讨论

108
00:06:03,970 --> 00:06:06,420
它的修饰符和数字，

109
00:06:06,420 --> 00:06:08,630
但这可能是一个常见的错误，

110
00:06:08,630 --> 00:06:10,750
您添加到应用程序中。

111
00:06:10,750 --> 00:06:12,360
你会认为你有一个号码

112
00:06:12,360 --> 00:06:15,130
实际上你正在使用一个字符串。

113
00:06:15,130 --> 00:06:16,270
特别重要

114
00:06:16,270 --> 00:06:20,640
了解 v-model 提供给我们的这种特殊行为

115
00:06:20,640 --> 00:06:23,650
因为我在课程前面已经提到过

116
00:06:23,650 --> 00:06:25,690
你可以使用 v-model

117
00:06:25,690 --> 00:06:29,060
用于访问某些数据或参考。

118
00:06:29,060 --> 00:06:32,660
好吧，事实证明你可以，但在幕后

119
00:06:32,660 --> 00:06:35,920
这两种方法有不同的行为

120
00:06:35,920 --> 00:06:38,660
如果你使用一个 ref，这很好，

121
00:06:38,660 --> 00:06:41,410
例如，您应该了解以下事实

122
00:06:41,410 --> 00:06:45,540
不会发生自动类型转换。

123
00:06:45,540 --> 00:06:47,960
说到这里就够了。

124
00:06:47,960 --> 00:06:50,410
有了它，让我们看看我们如何互动

125
00:06:50,410 --> 00:06:52,713
与我们在此页面上获得的所有其他输入。