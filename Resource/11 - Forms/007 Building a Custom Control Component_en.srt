1
00:00:02,220 --> 00:00:03,820
Thus far, we always worked

2
00:00:03,820 --> 00:00:06,890
with those built-in form input elements.

3
00:00:06,890 --> 00:00:09,780
And of course, you will work with those a lot,

4
00:00:09,780 --> 00:00:12,640
but sometimes you also need to build your own one.

5
00:00:12,640 --> 00:00:14,420
Well, let's do that now.

6
00:00:14,420 --> 00:00:17,720
I will build a RatingControl element here,

7
00:00:17,720 --> 00:00:20,490
which allows the user to pick a rating.

8
00:00:20,490 --> 00:00:22,650
So, here we'll have a template,

9
00:00:22,650 --> 00:00:25,970
and I wanna have an unordered list in there

10
00:00:25,970 --> 00:00:28,163
because I will have three choices.

11
00:00:31,220 --> 00:00:33,560
First choice is, poor.

12
00:00:33,560 --> 00:00:36,430
Second choice is, average.

13
00:00:36,430 --> 00:00:38,383
Third choice is, great.

14
00:00:39,840 --> 00:00:42,090
Now, these choices should be clickable.

15
00:00:42,090 --> 00:00:46,850
So I will actually add buttons here around these words

16
00:00:49,550 --> 00:00:51,750
so that we have better semantics,

17
00:00:51,750 --> 00:00:54,953
and make it a bit more accessible.

18
00:00:58,850 --> 00:01:03,850
And then we can add our scoped styling here, like that.

19
00:01:05,030 --> 00:01:07,410
Now, I will keep it relatively simple.

20
00:01:07,410 --> 00:01:08,960
I'll just remove the list style

21
00:01:08,960 --> 00:01:10,303
from the unordered list,

22
00:01:11,290 --> 00:01:13,810
and give it a little bit of margin to top and bottom,

23
00:01:13,810 --> 00:01:15,690
and no margin left and right.

24
00:01:15,690 --> 00:01:20,570
Remove all padding, and set the display style to flex,

25
00:01:20,570 --> 00:01:25,570
to use Flexbox, and then style the list items

26
00:01:26,060 --> 00:01:30,993
to give every item a margin of, 1rem left and right.

27
00:01:31,900 --> 00:01:36,900
Give it a border of one pixel solid, and a light gray color.

28
00:01:39,600 --> 00:01:42,660
Padding of 1rem here,

29
00:01:42,660 --> 00:01:46,010
and also set the display flex here,

30
00:01:46,010 --> 00:01:50,060
to justify the content in the center on both axis.

31
00:01:50,060 --> 00:01:52,580
If you can't follow along with the styling here,

32
00:01:52,580 --> 00:01:54,860
that's no problem, it's not a styling course.

33
00:01:54,860 --> 00:01:57,740
You can just type along here, of course.

34
00:01:57,740 --> 00:02:02,740
Now, for the button here, I'll give that a font of inherit,

35
00:02:05,180 --> 00:02:09,199
no border, and a background color of transparent,

36
00:02:09,199 --> 00:02:12,340
whoops, transparent,

37
00:02:12,340 --> 00:02:14,640
and set the cursor to pointer

38
00:02:14,640 --> 00:02:16,393
to have the proper mouse cursor.

39
00:02:17,940 --> 00:02:20,460
Now, that's my rating control.

40
00:02:20,460 --> 00:02:22,800
In the form I now wanna use it.

41
00:02:22,800 --> 00:02:25,120
So here towards the end,

42
00:02:25,120 --> 00:02:28,500
maybe before the accept terms checkbox,

43
00:02:28,500 --> 00:02:33,420
I'll add a div with my class of form-control.

44
00:02:33,420 --> 00:02:37,520
And in there, I'll add my rating-control element,

45
00:02:37,520 --> 00:02:38,743
which I just created.

46
00:02:39,860 --> 00:02:42,430
Now, of course, we need to register it

47
00:02:42,430 --> 00:02:44,100
for that to be available.

48
00:02:44,100 --> 00:02:46,060
So let's import rating-control

49
00:02:46,060 --> 00:02:48,783
from, ./RatingControl.vue,

50
00:02:49,840 --> 00:02:52,500
and add the components option here

51
00:02:52,500 --> 00:02:56,653
to our configuration object, and add rating-control.

52
00:02:59,240 --> 00:03:03,600
And I'm getting an error that I'm missing an end tag.

53
00:03:03,600 --> 00:03:06,913
Yes, there should be a closing button tag here, of course.

54
00:03:07,770 --> 00:03:10,203
So now we got these ratings here.

55
00:03:11,210 --> 00:03:15,260
When I press them, they all submit to form,

56
00:03:15,260 --> 00:03:17,160
which is definitely not what I want,

57
00:03:17,160 --> 00:03:19,490
but it makes sense because ultimately

58
00:03:19,490 --> 00:03:22,663
these here are buttons inside of a form.

59
00:03:24,050 --> 00:03:27,870
So, to change this in the RatingControl,

60
00:03:27,870 --> 00:03:31,450
I will give these buttons here, a type of button,

61
00:03:31,450 --> 00:03:35,440
which overrides the default of being a submit button,

62
00:03:35,440 --> 00:03:38,980
so that these buttons will no longer submit a form,

63
00:03:38,980 --> 00:03:40,283
if they are in one.

64
00:03:41,150 --> 00:03:42,860
And with that, we now no longer

65
00:03:42,860 --> 00:03:45,200
see that form being submitted.

66
00:03:45,200 --> 00:03:46,630
Now, my idea is simple.

67
00:03:46,630 --> 00:03:50,150
Whatever the user selects here, should be highlighted,

68
00:03:50,150 --> 00:03:52,110
and then, of course, should also be saved

69
00:03:52,110 --> 00:03:54,093
as part of the overall form.

70
00:03:55,430 --> 00:03:58,960
Now, let's work on the internal highlighting first.

71
00:03:58,960 --> 00:04:03,010
For that, we can add a simple class here,

72
00:04:03,010 --> 00:04:06,810
active, for example, in the rating-control styling,

73
00:04:06,810 --> 00:04:11,810
and set the border color to purple here,

74
00:04:13,340 --> 00:04:15,200
whichever color you want.

75
00:04:15,200 --> 00:04:19,753
I will pick this color here, let's say, this one.

76
00:04:22,580 --> 00:04:27,251
And I'll select the button inside of an active class element

77
00:04:27,251 --> 00:04:30,453
and give that the same color.

78
00:04:31,690 --> 00:04:34,660
And the active class should be added to the list item,

79
00:04:34,660 --> 00:04:36,620
which is currently active.

80
00:04:36,620 --> 00:04:39,600
We can keep track of that by adding a script here

81
00:04:39,600 --> 00:04:41,003
with a data property.

82
00:04:42,020 --> 00:04:47,020
And in here, we can store the active option.

83
00:04:49,120 --> 00:04:51,103
And let's say initially, that is null.

84
00:04:52,510 --> 00:04:53,930
And when we click a button,

85
00:04:53,930 --> 00:04:57,250
the active option should be set to, let's say, A, B and C,

86
00:04:57,250 --> 00:04:59,010
or, poor, average, and great,

87
00:04:59,010 --> 00:05:00,640
and then the respective list items

88
00:05:00,640 --> 00:05:01,740
should be highlighted.

89
00:05:02,880 --> 00:05:05,303
For that, we can add methods here, of course,

90
00:05:07,400 --> 00:05:09,253
and add an activate method.

91
00:05:10,370 --> 00:05:13,770
And here I want to find out which option that was.

92
00:05:13,770 --> 00:05:16,450
So I'll accept that option argument,

93
00:05:16,450 --> 00:05:20,030
and set this active option equal to option.

94
00:05:20,030 --> 00:05:21,560
And the activate method here

95
00:05:21,560 --> 00:05:24,390
will now be triggered whenever a button is clicked.

96
00:05:24,390 --> 00:05:27,373
So here I call activate for poor,

97
00:05:29,370 --> 00:05:34,253
on the next button, I'll do that for average,

98
00:05:36,120 --> 00:05:39,120
and on the third button, we'll do it for great.

99
00:05:39,120 --> 00:05:41,500
And now we just need to pick this value up

100
00:05:41,500 --> 00:05:45,200
and add the styling to the proper list item element.

101
00:05:45,200 --> 00:05:47,790
By binding class dynamically,

102
00:05:47,790 --> 00:05:50,220
and adding the active class,

103
00:05:50,220 --> 00:05:52,645
which is the class we added down there,

104
00:05:52,645 --> 00:05:57,645
if in this case, active option is equal to poor.

105
00:06:01,890 --> 00:06:05,430
And I will now copy that to all the list items.

106
00:06:05,430 --> 00:06:09,023
Here I check for average, and here I check for great.

107
00:06:11,380 --> 00:06:16,380
If we save this, we are able to pick different options,

108
00:06:17,730 --> 00:06:19,790
and indeed, it gets highlighted.

109
00:06:19,790 --> 00:06:21,230
This is all nice,

110
00:06:21,230 --> 00:06:24,833
but how can we now connect this to our form?

