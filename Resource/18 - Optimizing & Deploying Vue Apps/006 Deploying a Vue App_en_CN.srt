1
00:00:02,130 --> 00:00:05,380
所以让我们部署我们的 dist 文件夹内容，

2
00:00:05,380 --> 00:00:07,540
他们提到有很多选择

3
00:00:07,540 --> 00:00:09,962
用于托管静态 Web 应用程序。

4
00:00:09,962 --> 00:00:14,220
AWS 是免费的，Netlify，Firebase 托管。

5
00:00:14,220 --> 00:00:17,980
我会选择 Firebase，因为我们一直在使用它

6
00:00:17,980 --> 00:00:20,180
在课程的早期部分。

7
00:00:20,180 --> 00:00:23,430
所以你现在可能有一个 Firebase 项目，

8
00:00:23,430 --> 00:00:25,893
因此托管将很容易设置。

9
00:00:26,810 --> 00:00:29,350
您只需单击托管和您的项目，

10
00:00:29,350 --> 00:00:32,430
您还可以创建一个新项目进行托管。

11
00:00:32,430 --> 00:00:34,480
它不必是同一个

12
00:00:34,480 --> 00:00:38,590
就像您的 Firebase 数据库一样，只是作为旁注。

13
00:00:38,590 --> 00:00:40,470
但在这里，我将使用相同的

14
00:00:40,470 --> 00:00:42,050
我会点击托管，

15
00:00:42,050 --> 00:00:44,700
你会在这里找到说明，但最后，

16
00:00:44,700 --> 00:00:47,300
托管非常简单。

17
00:00:47,300 --> 00:00:50,170
如果你点击，开始，我们看到我们首先，

18
00:00:50,170 --> 00:00:53,210
需要安装一个额外的工具，好吗？

19
00:00:53,210 --> 00:00:54,570
所以让我们这样做。

20
00:00:54,570 --> 00:00:58,240
让我们在 Linux 和 Mac iOS 上运行这个命令，

21
00:00:58,240 --> 00:01:00,950
你可能需要在它前面添加伪，

22
00:01:00,950 --> 00:01:03,780
在 Windows 上您不需要这样做。

23
00:01:03,780 --> 00:01:08,120
要运行此命令，然后将安装

24
00:01:08,120 --> 00:01:12,920
Firebase 在您的机器上全局提供的额外工具，

25
00:01:12,920 --> 00:01:17,360
我们将需要该工具稍后上传我们的项目。

26
00:01:17,360 --> 00:01:19,723
所以让我们等待这个安装完成。

27
00:01:21,580 --> 00:01:25,840
一旦完成，我们就可以进入下一步。

28
00:01:25,840 --> 00:01:29,813
现在我们需要通过运行 Firebase 登录来登录。

29
00:01:30,890 --> 00:01:34,760
所以让我们运行它，这应该会打开一个选项卡

30
00:01:34,760 --> 00:01:37,300
在浏览器中并允许您登录，

31
00:01:37,300 --> 00:01:39,070
如果您尚未登录，

32
00:01:39,070 --> 00:01:42,520
或者它会提示您输入密码和用户名，

33
00:01:42,520 --> 00:01:43,510
您的电子邮件地址，

34
00:01:43,510 --> 00:01:46,110
你必须使用这些凭据登录，

35
00:01:46,110 --> 00:01:49,310
您用于登录 Firebase 帐户的

36
00:01:49,310 --> 00:01:50,683
之前也是。

37
00:01:51,810 --> 00:01:55,140
完成后，您需要在其中运行 Firebase。

38
00:01:55,140 --> 00:01:58,750
所以复制那个命令，现在在你的项目文件夹中，

39
00:01:58,750 --> 00:02:01,140
在您的整个项目文件夹中，在这里，

40
00:02:01,140 --> 00:02:03,303
您可以在其中运行 Firebase。

41
00:02:04,390 --> 00:02:06,590
这会问你几个问题。

42
00:02:07,640 --> 00:02:11,770
它会询问您要管理 Firebase 的哪个部分

43
00:02:11,770 --> 00:02:16,320
使用此命令行界面，目前在哪里使用。

44
00:02:16,320 --> 00:02:19,000
我们真的只想在这里使用托管。

45
00:02:19,000 --> 00:02:21,640
所以用箭头键选择主机，

46
00:02:21,640 --> 00:02:26,223
并按空间上市，然后进入。

47
00:02:27,520 --> 00:02:30,030
现在，系统会提示您在任何地方托管此内容

48
00:02:30,030 --> 00:02:33,600
到现有的 Firebase 项目或创建一个新项目。

49
00:02:33,600 --> 00:02:35,650
正如我所说，你可以创建一个新的，

50
00:02:35,650 --> 00:02:37,433
但我会使用现有的。

51
00:02:38,420 --> 00:02:41,400
然后它应该列出你拥有的所有项目。

52
00:02:41,400 --> 00:02:43,960
我只是选择那个项目

53
00:02:43,960 --> 00:02:46,163
我已经很早就开始工作了。

54
00:02:47,570 --> 00:02:49,540
现在我们有了有趣的部分。

55
00:02:49,540 --> 00:02:53,690
它询问我们的公共目录应该是什么。

56
00:02:53,690 --> 00:02:56,980
这很重要，因为那是目录

57
00:02:56,980 --> 00:02:59,993
其中包含将实际上传的文件。

58
00:03:01,210 --> 00:03:04,313
所以这里就是 dist 文件夹。

59
00:03:05,480 --> 00:03:07,223
所以我们应该在这里输入dist。

60
00:03:08,630 --> 00:03:12,160
输入 dist 后，按回车键，

61
00:03:12,160 --> 00:03:14,310
并询问您是否应该配置

62
00:03:14,310 --> 00:03:19,310
作为单页应用程序并将所有 URL 重写为 /index.html。

63
00:03:20,390 --> 00:03:23,430
现在这可能会令人困惑，为什么这很重要？

64
00:03:23,430 --> 00:03:24,393
这是怎么回事？

65
00:03:25,400 --> 00:03:27,340
对于单页应用ns,

66
00:03:27,340 --> 00:03:30,290
在路由方面你必须小心

67
00:03:30,290 --> 00:03:32,343
并将您的应用程序托管在服务器上。

68
00:03:33,290 --> 00:03:35,590
当用户访问您的网页时，

69
00:03:35,590 --> 00:03:40,000
假设它托管在像“mypage.com”这样的域上

70
00:03:40,000 --> 00:03:44,680
一个所谓的请求被发送到服务器。

71
00:03:44,680 --> 00:03:48,100
现在假设请求不是针对您的主域，

72
00:03:48,100 --> 00:03:53,100
但它是“mypage.com/products”或类似的东西。

73
00:03:54,390 --> 00:03:57,950
现在，正如我刚才所说，该请求到达服务器。

74
00:03:57,950 --> 00:04:01,300
您的静态 Web 应用程序所在的服务器，

75
00:04:01,300 --> 00:04:04,533
您的 Vue 单页应用程序托管在。

76
00:04:05,410 --> 00:04:10,220
现在，这个服务器实际上应该忽略路径

77
00:04:10,220 --> 00:04:11,810
这是请求的一部分，

78
00:04:11,810 --> 00:04:14,390
因为如果它不忽略它，

79
00:04:14,390 --> 00:04:19,180
然后服务器将尝试在服务器上查找某些内容

80
00:04:19,180 --> 00:04:20,700
与此请求相匹配。

81
00:04:20,700 --> 00:04:23,700
例如，它查找产品文件夹

82
00:04:23,700 --> 00:04:27,500
在您的托管文件中并尝试查找 HTML 文件

83
00:04:27,500 --> 00:04:29,900
在这样的产品文件夹中。

84
00:04:29,900 --> 00:04:32,150
对于我们会失败的应用程序

85
00:04:32,150 --> 00:04:35,850
因为对于我们的应用，我们部署的文件夹结构是这样的。

86
00:04:35,850 --> 00:04:38,260
我们只有一个 HTML 文件。

87
00:04:38,260 --> 00:04:41,283
例如，在我们的应用程序中，我们有一个 /coach 的路线，

88
00:04:42,280 --> 00:04:45,560
但是我们这里没有教练文件夹，

89
00:04:45,560 --> 00:04:49,090
这是最终将在服务器上的内容。

90
00:04:49,090 --> 00:04:52,490
这就是为什么我们需要告诉服务器忽略路径

91
00:04:52,490 --> 00:04:56,700
相反，总是返回 index.html 文件，

92
00:04:56,700 --> 00:04:59,750
然后又包含 JavaScript 代码

93
00:04:59,750 --> 00:05:04,750
关闭我们的应用程序，然后 Vue 路由器可以接管

94
00:05:05,010 --> 00:05:10,010
并在客户端处理此路径，因此在浏览器中。

95
00:05:10,060 --> 00:05:12,560
这真的很重要，Vue 路由器

96
00:05:12,560 --> 00:05:14,200
不在服务器上运行。

97
00:05:14,200 --> 00:05:17,240
因此，它只能处理路径

98
00:05:17,240 --> 00:05:21,180
如果服务器忽略它，它在 URL 中。

99
00:05:21,180 --> 00:05:23,980
该开发服务器已配置

100
00:05:23,980 --> 00:05:25,300
像这样工作，

101
00:05:25,300 --> 00:05:28,240
这就是为什么我们以前不必担心这一点。

102
00:05:28,240 --> 00:05:31,410
但是网络服务器，真正的网络服务器，

103
00:05:31,410 --> 00:05:34,023
通常默认情况下不要忽略它。

104
00:05:35,030 --> 00:05:37,700
那就是我的 Firebase 在这里问我们，

105
00:05:37,700 --> 00:05:40,960
如果我们想将其配置为单页应用程序。

106
00:05:40,960 --> 00:05:43,940
如果我们在这里选择是，我们应该这样做，

107
00:05:43,940 --> 00:05:47,960
然后 Firebase 将忽略服务器上的所有请求

108
00:05:47,960 --> 00:05:52,960
并且如此处所述，将所有 URL 重写为 index.html。

109
00:05:53,320 --> 00:05:56,773
所以总是 index.html 被提供。

110
00:05:58,550 --> 00:06:00,430
所以让我们在这里选择yes。

111
00:06:00,430 --> 00:06:03,300
现在它告诉我们我们已经有了一个 index.html 文件

112
00:06:03,300 --> 00:06:05,560
在这个，如果它应该覆盖这个

113
00:06:05,560 --> 00:06:09,673
在这里我们想进入，不，因为我们想保留我们的文件。

114
00:06:10,990 --> 00:06:14,140
现在我们初始化了一切。

115
00:06:14,140 --> 00:06:15,730
现在要真正部署这个，

116
00:06:15,730 --> 00:06:17,710
我只想做一个改变。

117
00:06:17,710 --> 00:06:20,750
在 index.html 的公用文件夹中，

118
00:06:20,750 --> 00:06:25,750
我们可以在项目构建之前编辑 index.html 文件。

119
00:06:26,320 --> 00:06:29,080
所以你想对你的项目做任何改变，

120
00:06:29,080 --> 00:06:31,640
到您的 HTML 代码，例如，在这里，

121
00:06:31,640 --> 00:06:34,480
应该在这里制作，而不是在这里制作。

122
00:06:34,480 --> 00:06:36,420
你不应该触摸代码，

123
00:06:36,420 --> 00:06:38,650
它在 dist 文件夹中生成。

124
00:06:38,650 --> 00:06:43,550
相反，编辑您的输入文件并重建项目，

125
00:06:43,550 --> 00:06:47,180
如果你想在这里有不同的输出。

126
00:06:47,180 --> 00:06:50,160
例如，在这里，我想编辑标题。

127
00:06:50,160 --> 00:06:55,110
它实际上在这里使用了一个占位符，最后，

128
00:06:55,110 --> 00:06:57,940
从其他地方提取标题，

129
00:06:57,940 -->00:07:01,470
但我们可以删除它并用 Find a Coach 覆盖它，

130
00:07:01,470 --> 00:07:04,250
例如，这是我的标题。

131
00:07:04,250 --> 00:07:06,160
现在我们还可以添加一个元标记

132
00:07:06,160 --> 00:07:08,880
带有描述的名称

133
00:07:08,880 --> 00:07:13,020
然后还添加搜索引擎的描述。

134
00:07:13,020 --> 00:07:16,763
就像寻找教练并成长为开发人员一样。

135
00:07:17,820 --> 00:07:20,280
现在有了这些最后的调整，

136
00:07:20,280 --> 00:07:23,660
我将再次运行 npn run build 以便进行这些更改

137
00:07:23,660 --> 00:07:26,740
被拾取并反映在 dist 文件夹中，

138
00:07:26,740 --> 00:07:28,273
现在重新创建。

139
00:07:29,170 --> 00:07:31,700
现在我们配置了 Firebase，

140
00:07:31,700 --> 00:07:33,670
我们必须最终的 dist 文件夹，

141
00:07:33,670 --> 00:07:37,223
现在我们要将代码推送到 Firebase。

142
00:07:38,130 --> 00:07:42,170
如果我们按照 Firebase 的说明操作就完成了

143
00:07:42,170 --> 00:07:44,773
现在运行 Firebase 部署。

144
00:07:45,700 --> 00:07:49,820
所以现在我们这样做，运行 Firebase 部署，

145
00:07:49,820 --> 00:07:54,123
现在这将获取我们的代码并上传到 Firebase。

146
00:07:54,960 --> 00:07:57,120
现在它向我们展示了这里的进步，

147
00:07:57,120 --> 00:07:58,653
让我们等待这个完成。

148
00:08:00,260 --> 00:08:03,530
一旦它，它也给了我们 URL

149
00:08:03,530 --> 00:08:05,430
我们可以在哪里访问这个应用程序。

150
00:08:05,430 --> 00:08:09,350
所以我要复制到这里打开它，

151
00:08:09,350 --> 00:08:13,200
好吧，这是我们之前构建的应用程序

152
00:08:13,200 --> 00:08:16,523
现在在他们的真实网络服务器上运行。

153
00:08:17,630 --> 00:08:20,130
现在，当您查看此内容时，我将处于离线状态，

154
00:08:20,130 --> 00:08:23,880
但您可以在自己的项目中自行尝试。

155
00:08:23,880 --> 00:08:25,920
对于您想要配置的任何其他内容

156
00:08:25,920 --> 00:08:28,363
像自定义域或类似的东西，

157
00:08:29,420 --> 00:08:32,010
在那里查看 Firebase 控制台

158
00:08:32,010 --> 00:08:34,390
在托管下部署应用程序后，

159
00:08:34,390 --> 00:08:37,370
你可以看到你的应用，你可以添加一个自定义域

160
00:08:37,370 --> 00:08:39,679
你可以在这里做很多不同的事情

161
00:08:39,679 --> 00:08:42,283
根据您的要求对此进行微调。

162
00:08:43,340 --> 00:08:45,240
这就是部署。

163
00:08:45,240 --> 00:08:47,720
这些是步骤和核心概念

164
00:08:47,720 --> 00:08:50,640
当你想部署时，你应该记住

165
00:08:50,640 --> 00:08:52,683
Vue 应用程序到真实服务器。