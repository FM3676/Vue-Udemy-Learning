1
00:00:02,300 --> 00:00:04,610
所以现在我们看到了钩子的作用，

2
00:00:04,610 --> 00:00:08,983
为什么它们会比 mixins 更好或更好？

3
00:00:09,830 --> 00:00:12,280
好吧，我看到了两个主要优点。

4
00:00:12,280 --> 00:00:15,390
一方面，很容易使它们可配置。

5
00:00:15,390 --> 00:00:17,120
正如你在上一节课中看到的，

6
00:00:17,120 --> 00:00:19,550
添加额外参数很容易

7
00:00:19,550 --> 00:00:22,830
突然之间，你的钩子用途广泛

8
00:00:22,830 --> 00:00:25,460
并且可以在不同的组件中使用

9
00:00:25,460 --> 00:00:28,433
有不同的配置，这很棒。

10
00:00:29,520 --> 00:00:33,810
此外，他们修复了 mixins 的一个主要缺陷。

11
00:00:33,810 --> 00:00:37,380
对于 mixins，我提到了在更大的应用程序中

12
00:00:37,380 --> 00:00:40,980
和更多的mixin，很难看出哪个数据属性

13
00:00:40,980 --> 00:00:43,950
以及哪个mixin添加了哪个方法。

14
00:00:43,950 --> 00:00:46,150
使用自定义钩子，这很容易。

15
00:00:46,150 --> 00:00:48,490
我的意思是，自定义钩子返回

16
00:00:48,490 --> 00:00:51,130
它想要暴露给组件的东西

17
00:00:51,130 --> 00:00:54,010
因此，我们必须接受这些事情

18
00:00:54,010 --> 00:00:56,400
就像这里，我们得到一个数组

19
00:00:56,400 --> 00:00:59,080
并将我们需要的东西拉出数组

20
00:00:59,080 --> 00:01:01,410
并将它们存储在常量中。

21
00:01:01,410 --> 00:01:05,400
很容易看到 alertIsVisible、showAlert、

22
00:01:05,400 --> 00:01:08,493
和 hideAlert 来自 useAlert 钩子。

23
00:01:09,380 --> 00:01:12,860
所以即使我们使用 10 或 20 个自定义钩子，

24
00:01:12,860 --> 00:01:16,950
总是很容易立即看到哪个功能

25
00:01:16,950 --> 00:01:20,020
以及哪个数据块来自哪个钩子。

26
00:01:20,020 --> 00:01:22,540
这可能是一个主要优势

27
00:01:22,540 --> 00:01:24,933
在更大的应用程序和更大的组件中。