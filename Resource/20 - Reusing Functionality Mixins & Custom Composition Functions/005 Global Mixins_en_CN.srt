1
00:00:02,070 --> 00:00:05,360
现在除了我们迄今为止添加的 mixins，

2
00:00:05,360 --> 00:00:07,960
或者正如我们迄今为止添加的那样，

3
00:00:07,960 --> 00:00:10,240
已在本地添加到组件中，

4
00:00:10,240 --> 00:00:12,560
您还可以定义全局混合，

5
00:00:12,560 --> 00:00:15,720
影响所有组件，而不仅仅是组件

6
00:00:15,720 --> 00:00:17,690
您在其中明确添加它们。

7
00:00:17,690 --> 00:00:21,150
虽然说实话全球 mixins 可能有

8
00:00:21,150 --> 00:00:23,115
一个非常有限的用例。

9
00:00:23,115 --> 00:00:25,570
现在，一个用例可能是一些日志记录

10
00:00:25,570 --> 00:00:27,580
或分析功能，

11
00:00:27,580 --> 00:00:29,430
您想将其添加到每个组件中。

12
00:00:29,430 --> 00:00:32,460
例如，要知道组件何时安装，

13
00:00:32,460 --> 00:00:34,020
任何类似的东西。

14
00:00:34,020 --> 00:00:39,020
为此，我们可以创建一个 logger.js，mixins 文件

15
00:00:39,160 --> 00:00:40,560
在 Mixins 文件夹中，

16
00:00:40,560 --> 00:00:43,960
并在那里，导出我们的 mixin 对象

17
00:00:43,960 --> 00:00:47,180
现在在这个对象中我不想更改任何数据，

18
00:00:47,180 --> 00:00:49,666
但相反，我将添加该生命周期挂钩的挂载。

19
00:00:49,666 --> 00:00:52,730
当然可以添加到任何组件

20
00:00:52,730 --> 00:00:55,440
你也可以在 mixin 中定义它。

21
00:00:55,440 --> 00:00:56,520
作为旁注，

22
00:00:56,520 --> 00:00:59,300
如果这个 mixins 将与一个组件合并，

23
00:00:59,300 --> 00:01:01,830
它也有一个安装的生命周期钩子，

24
00:01:01,830 --> 00:01:05,190
两个生命周期钩子都会执行组件中的那个，

25
00:01:05,190 --> 00:01:07,160
和一个在 mixins 中的一个

26
00:01:07,160 --> 00:01:09,610
从最后执行的组件

27
00:01:09,610 --> 00:01:12,520
以便它能够覆盖所做的任何更改

28
00:01:12,520 --> 00:01:13,530
通过混合。

29
00:01:13,530 --> 00:01:15,310
但这只是一个旁注。

30
00:01:15,310 --> 00:01:18,030
在这里，我定义了安装在这个 mixin 中

31
00:01:18,030 --> 00:01:20,080
我想用作全局混合

32
00:01:20,080 --> 00:01:23,400
目前我将在这里登录。

33
00:01:23,400 --> 00:01:26,760
因此，对于作为开发人员的我来说只是一些日志记录，

34
00:01:26,760 --> 00:01:30,650
也许你想在这里的某个数据库中存储一些东西，

35
00:01:30,650 --> 00:01:32,180
一些分析数据，

36
00:01:32,180 --> 00:01:35,003
像这样的事情可以在全局 mixin 中完成。

37
00:01:35,850 --> 00:01:37,520
所以在这里我只是记录

38
00:01:37,520 --> 00:01:40,687
现在我们可以将其注册为全局混合

39
00:01:40,687 --> 00:01:43,380
通过转到我们的 main.js 文件，

40
00:01:43,380 --> 00:01:46,830
我们还定义了全局组件等等。

41
00:01:46,830 --> 00:01:49,440
这里我们可以导入 logger mixin

42
00:01:49,440 --> 00:01:53,669
来自 /mixins/logger.js

43
00:01:53,669 --> 00:01:55,980
并通过简单添加的导入

44
00:01:55,980 --> 00:01:59,950
通过调用 app.mixin 你可能会看到一个模式。

45
00:01:59,950 --> 00:02:02,720
我们有用于全局组件的应用程序组件，

46
00:02:02,720 --> 00:02:05,840
我们有 app.mixin 用于全局混合。

47
00:02:05,840 --> 00:02:10,229
我们只是在此处指向我们的导入，LoggerMixins。

48
00:02:11,210 --> 00:02:14,370
现在这将其注册为全局混合

49
00:02:14,370 --> 00:02:16,143
如果我们现在保存它，

50
00:02:17,070 --> 00:02:19,500
我在这里收到警报，当然仍然，

51
00:02:19,500 --> 00:02:23,460
但我们现在也看到安装在开发人员工具中。

52
00:02:23,460 --> 00:02:27,230
我们看到，只要一个组件安装良好

53
00:02:27,230 --> 00:02:28,063
到屏幕。

54
00:02:28,063 --> 00:02:28,896
例如，

55
00:02:28,896 --> 00:02:30,763
每当我们打开对话。

56
00:02:31,930 --> 00:02:35,060
正如我所说，这些是全局混合，

57
00:02:35,060 --> 00:02:37,840
可能是一个非常有限的用例

58
00:02:37,840 --> 00:02:41,990
或者它们可能有用的有限数量的用例，

59
00:02:41,990 --> 00:02:44,550
但仍然需要注意以防万一

60
00:02:44,550 --> 00:02:47,420
你有一些应该添加的功能

61
00:02:47,420 --> 00:02:50,173
应用程序中的每个组件。