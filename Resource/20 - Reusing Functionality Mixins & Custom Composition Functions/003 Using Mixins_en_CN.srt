1
00:00:02,110 --> 00:00:04,360
在这个例子中，项目，逻辑，

2
00:00:04,360 --> 00:00:08,070
我想重用的可以在添加和

3
00:00:08,070 --> 00:00:10,000
删除用户组件。

4
00:00:10,000 --> 00:00:11,650
我基本上有

5
00:00:11,650 --> 00:00:14,780
相同的数据和方法，实际上所有

6
00:00:14,780 --> 00:00:18,130
组件选项，如果你仔细看看。

7
00:00:18,130 --> 00:00:22,370
现在你可以通过创建一些来重用这些逻辑

8
00:00:22,370 --> 00:00:23,760
包装组件，

9
00:00:23,760 --> 00:00:27,070
但另一个强大的工具可以轻松分享这个

10
00:00:27,070 --> 00:00:29,950
跨两个组件的配置是

11
00:00:29,950 --> 00:00:31,523
已经提到的mixin。

12
00:00:32,619 --> 00:00:35,190
为此，我将创建一个新文件夹 mixins，

13
00:00:35,190 --> 00:00:36,190
名字由你决定

14
00:00:36,190 --> 00:00:38,750
但我想这个名字是有道理的，因为我要去

15
00:00:38,750 --> 00:00:41,470
在其中存储一个或多个 mixin，

16
00:00:41,470 --> 00:00:46,090
我将添加警报混合文件，

17
00:00:46,090 --> 00:00:48,490
或者只是警报 js 文件。

18
00:00:48,490 --> 00:00:51,563
但是，名称取决于您，您想如何命名此文件。

19
00:00:52,970 --> 00:00:55,010
在这个新的 js 文件中，

20
00:00:55,010 --> 00:00:56,440
所以不是点vue文件，

21
00:00:56,440 --> 00:01:01,440
但是在这个 js 文件中，我想存储我的共享配置逻辑。

22
00:01:03,960 --> 00:01:07,480
而这里的这种情况，实际上是一个极端的情况，

23
00:01:07,480 --> 00:01:08,357
整个配置对象

24
00:01:08,357 --> 00:01:09,190
因为两个组件完全相等

25
00:01:09,190 --> 00:01:14,190
它们完全一样。

26
00:01:15,120 --> 00:01:17,700
所以因此我实际上会抓住

27
00:01:17,700 --> 00:01:20,350
这里的整个默认导出，

28
00:01:20,350 --> 00:01:23,100
从其中一个组件中复制它并转到

29
00:01:23,100 --> 00:01:25,583
警报 js 文件并将其粘贴到那里。

30
00:01:26,430 --> 00:01:30,450
所以现在在警报 js 中，我正在导出这个对象

31
00:01:30,450 --> 00:01:33,370
作为默认对象。

32
00:01:33,370 --> 00:01:35,680
现在这样做有什么好处？

33
00:01:35,680 --> 00:01:40,220
好吧，现在我们可以在这些组件中将其用作 mixin。

34
00:01:40,220 --> 00:01:44,800
因此，例如，在那里添加用户，我现在可以导入

35
00:01:44,800 --> 00:01:48,730
这个名字的警报混合由你决定

36
00:01:48,730 --> 00:01:51,950
从，上一层跳入

37
00:01:51,950 --> 00:01:55,033
mixins 文件夹警报 js，

38
00:01:55,900 --> 00:02:00,900
现在我们可以删除这里的所有代码，这样我们就可以离开了

39
00:02:00,980 --> 00:02:04,930
使用空配置对象并添加一个新选项，

40
00:02:04,930 --> 00:02:09,530
我们以前没有使用过的 mixins 选项。

41
00:02:09,530 --> 00:02:13,210
这需要一个数组，你可以在其中添加所有的 mixin，

42
00:02:13,210 --> 00:02:16,940
所以你想应用到这个组件的所有共享代码。

43
00:02:16,940 --> 00:02:19,313
在这里我添加了我的警报混合，

44
00:02:21,030 --> 00:02:25,410
我现在要复制这个，去删除用户

45
00:02:25,410 --> 00:02:26,940
并添加相同的代码

46
00:02:26,940 --> 00:02:29,913
那里替换现有的配置对象。

47
00:02:31,390 --> 00:02:34,680
现在有了这个，我们只需要再做一个调整。

48
00:02:34,680 --> 00:02:37,990
我现在收到关于我的用户警报的错误。

49
00:02:37,990 --> 00:02:42,300
删除用户不需要这里导入

50
00:02:42,300 --> 00:02:44,100
并添加用户 Vue，

51
00:02:44,100 --> 00:02:45,390
但我们必须添加它

52
00:02:45,390 --> 00:02:48,903
在我们的 mixin 中，因为这里我引用了用户警报。

53
00:02:49,930 --> 00:02:54,930
所以在这里我要从上一页导入用户警报

54
00:02:55,100 --> 00:02:59,443
级别，进入组件，用户警报点 Vue。

55
00:03:00,910 --> 00:03:03,150
有了它，我可以保存并重新加载。

56
00:03:03,150 --> 00:03:06,713
我们收到警告，无法解析组件。

57
00:03:08,560 --> 00:03:11,140
这个mixin概念在这里会起作用，

58
00:03:11,140 --> 00:03:13,900
但实际上不适用于组件。

59
00:03:13,900 --> 00:03:15,090
如果你有组件

60
00:03:15,090 --> 00:03:17,100
应该在组件中注册，

61
00:03:17,100 --> 00:03:21,630
此组件选项不能通过 mixin 共享。

62
00:03:21,630 --> 00:03:24,560
因此，我们实际上必须删除它并删除

63
00:03:24,560 --> 00:03:26,080
我们刚刚添加的导入

64
00:03:26,080 --> 00:03:29,350
并将其带回我们的自定义组件中

65
00:03:29,350 --> 00:03:31,780
在这里进入我们的自定义组件选项。

66
00:03:31,780 --> 00:03:33,680
所以重新添加组件指向

67
00:03:33,680 --> 00:03:36,840
在用户提醒并重新添加导入。

68
00:03:36,840 --> 00:03:38,820
是的，我知道我们刚刚删除了它，

69
00:03:38,820 --> 00:03:42,030
但重要的是要了解你能做什么以及你能做什么

70
00:03:42,030 --> 00:03:45,940
无法通过 mixins 和组件配置共享

71
00:03:45,940 --> 00:03:47,573
实际上不能共享。

72
00:03:48,700 --> 00:03:52,420
所以让我们快速将它重新添加到我们的添加和删除用户中

73
00:03:52,420 --> 00:03:55,053
组件，然后保存所有内容。

74
00:03:56,350 --> 00:03:58,300
尽管如此，如果我们重新加载，

75
00:03:58,300 --> 00:04:02,570
这将正常工作，并且像以前一样工作，

76
00:04:02,570 --> 00:04:04,310
但有一个关键区别。

77
00:04:04,310 --> 00:04:09,140
现在我们可以更精简地添加和删除用户组件

78
00:04:09,140 --> 00:04:12,770
配置对象只包含 components 选项

79
00:04:12,770 --> 00:04:16,910
然后是 mixins 选项和我们在两者中的所有逻辑

80
00:04:16,910 --> 00:04:20,070
之前的组件现在在我们的 mixin 中，

81
00:04:20,070 --> 00:04:21,760
使用这些mixin，

82
00:04:21,760 --> 00:04:25,730
您可以共享您通常拥有的所有组件选项

83
00:04:25,730 --> 00:04:28,230
除了你在这里看到的组件，

84
00:04:28,230 --> 00:04:33,080
但是你可以共享数据、计算、方法、观察者，

85
00:04:33,080 --> 00:04:38,080
无论您需要什么，都可以通过 mixins 共享。

86
00:04:38,130 --> 00:04:41,180
因此 mixins 可以成为一个强大的工具

87
00:04:41,180 --> 00:04:43,900
使您的组件更精简和共享，

88
00:04:43,900 --> 00:04:46,483
跨组件重用逻辑。