1
00:00:02,100 --> 00:00:03,680
所以你可以清楚地告诉

2
00:00:03,680 --> 00:00:06,200
自定义事件很重要，

3
00:00:06,200 --> 00:00:09,850
组件通信的一个重要特征。

4
00:00:09,850 --> 00:00:12,070
现在，就像道具一样，

5
00:00:12,070 --> 00:00:13,530
你可以定义它们。

6
00:00:13,530 --> 00:00:14,960
你可以让 Vue 知道

7
00:00:14,960 --> 00:00:18,160
关于您的组件将发出的事件。

8
00:00:18,160 --> 00:00:20,690
对于道具，这实际上是必需的。

9
00:00:20,690 --> 00:00:23,410
对于事件，它是推荐的。

10
00:00:23,410 --> 00:00:26,690
现在我将在这里关闭它以获得一些空间。

11
00:00:26,690 --> 00:00:28,370
道具还在，

12
00:00:28,370 --> 00:00:32,659
我只是折叠它，以便它占用更少的空间。

13
00:00:32,659 --> 00:00:34,840
我将添加一个新属性

14
00:00:34,840 --> 00:00:38,190
到 FriendContact 配置对象。

15
00:00:38,190 --> 00:00:40,403
这就是 emit 属性。

16
00:00:41,440 --> 00:00:43,500
现在发出，可以说，

17
00:00:43,500 --> 00:00:46,300
是道具的对应物。

18
00:00:46,300 --> 00:00:47,700
在道具中，您将定义

19
00:00:47,700 --> 00:00:49,890
该组件接收哪些道具。

20
00:00:49,890 --> 00:00:52,890
在 emits 中，您将定义哪些自定义事件

21
00:00:52,890 --> 00:00:56,550
你的组件最终会在某个时候发出。

22
00:00:56,550 --> 00:00:59,620
你这样做是为了记录你的组件，

23
00:00:59,620 --> 00:01:02,290
为了让其他开发人员明白，

24
00:01:02,290 --> 00:01:04,050
你的组件是如何工作的，

25
00:01:04,050 --> 00:01:06,610
以及他们可以收听哪些事件。

26
00:01:06,610 --> 00:01:08,010
这简直是​​有用的。

27
00:01:08,010 --> 00:01:11,080
它使您更容易理解您的组件。

28
00:01:11,080 --> 00:01:14,500
因为否则我必须查看你所有的代码

29
00:01:14,500 --> 00:01:16,720
看到有一些代码

30
00:01:16,720 --> 00:01:19,370
你在哪里发出切换最喜欢的。

31
00:01:19,370 --> 00:01:22,200
使用发射，您只需添加

32
00:01:22,200 --> 00:01:23,033
切换

33
00:01:24,610 --> 00:01:27,050
最喜欢这里作为这个混乱的字符串，

34
00:01:27,050 --> 00:01:28,400
这将清楚地表明

35
00:01:28,400 --> 00:01:31,530
您的组件中肯定有一些代码，

36
00:01:31,530 --> 00:01:35,303
这会导致发出具有该标识符的事件。

37
00:01:36,360 --> 00:01:39,200
您还可以将发射提升到一个新的水平。

38
00:01:39,200 --> 00:01:41,350
这是使用它的基本形式，

39
00:01:41,350 --> 00:01:45,000
它已经有助于理解您的组件。

40
00:01:45,000 --> 00:01:46,610
但就像道具一样，

41
00:01:46,610 --> 00:01:49,590
您也可以指定一个对象，

42
00:01:49,590 --> 00:01:52,190
然后添加您承认的事件

43
00:01:52,190 --> 00:01:55,120
作为这里的钥匙

44
00:01:55,120 --> 00:01:56,750
像这样，

45
00:01:56,750 --> 00:02:00,610
然后提供更详细的配置。

46
00:02:00,610 --> 00:02:04,370
您应该添加的配置是一个函数，

47
00:02:04,370 --> 00:02:07,200
接收数据的函数，

48
00:02:07,200 --> 00:02:10,810
您最终将作为参数发出。

49
00:02:10,810 --> 00:02:12,050
所以在这种情况下，

50
00:02:12,050 --> 00:02:14,270
我们最终会发出一个 ID。

51
00:02:14,270 --> 00:02:16,260
所以在这里我们要添加

52
00:02:16,260 --> 00:02:19,170
ID作为参数，

53
00:02:19,170 --> 00:02:22,900
我这样做是为了让“切换最喜欢的”显而易见

54
00:02:22,900 --> 00:02:26,570
是应该由函数处理的事件

55
00:02:26,570 --> 00:02:28,283
需要一个 ID。

56
00:02:29,170 --> 00:02:31,393
因为我会在这里发出一个ID。

57
00:02:32,560 --> 00:02:34,960
然后，您还可以在此处添加验证

58
00:02:34,960 --> 00:02:37,870
确保在发出事件时，

59
00:02:37,870 --> 00:02:40,670
这个数据，应该是事件的一部分

60
00:02:40,670 --> 00:02:42,690
没有被遗忘。

61
00:02:42,690 --> 00:02:46,230
我们可以检查ID是否存在，

62
00:02:46,230 --> 00:02:47,930
如果这是真的

63
00:02:47,930 --> 00:02:50,590
并返回真，如果是这样的话

64
00:02:50,590 --> 00:02:53,610
否则返回假，

65
00:02:53,610 --> 00:02:58,007
并且可能还会在控制台中发出警告

66
00:02:59,170 --> 00:03:00,930
身份证不见了

67
00:03:00,930 --> 00:03:03,940
帮助发出此事件的开发人员，

68
00:03:03,940 --> 00:03:05,293
抓住这个错误。

69
00:03:06,930 --> 00:03:08,000
现在，例如，

70
00:03:08,000 --> 00:03:10,460
如果我在这里删除第二个参数，

71
00:03:10,460 --> 00:03:11,930
我保存了那个

72
00:03:11,930 --> 00:03:13,870
我点击“切换收藏”，

73
00:03:13,870 --> 00:03:15,640
我在这里得到一个错误。

74
00:03:15,640 --> 00:03:17,320
但在那个错误之前，

75
00:03:17,320 --> 00:03:20,660
我实际上也收到了警告

76
00:03:20,660 --> 00:03:22,460
无效的事件参数，

77
00:03:22,460 --> 00:03:25,880
事件“toggle-favorite”的事件验证失败，

78
00:03:25,880 --> 00:03:27,430
身份证丢失。

79
00:03:27,430 --> 00:03:29,800
所以这是你不必添加的东西，

80
00:03:29,800 --> 00:03:33,240
但这可以让您作为开发人员的生活更轻松，

81
00:03:33,240 --> 00:03:36,420
特别是如果你在一个团队中工作。

82
00:03:36,420 --> 00:03:38,320
现在让我们把这个ID带回来

83
00:03:38,320 --> 00:03:42,350
我不会添加这个详细的验证

84
00:03:42,350 --> 00:03:44,270
到整个课程的自定义事件。

85
00:03:44,270 --> 00:03:45,670
但由于它是完整的指南，

86
00:03:45,670 --> 00:03:47,700
我当然想给你看这个

87
00:03:47,700 --> 00:03:49,303
让你知道这个功能。

88
00:03:50,480 --> 00:03:52,810
尽管如此，我将在这里恢复，

89
00:03:52,810 --> 00:03:55,200
回到这个更简单的定义，

90
00:03:55,200 --> 00:03:57,730
这是我将在整个课程中使用的方法

91
00:03:57,730 --> 00:03:59,430
只是为了让它显而易见

92
00:03:59,430 --> 00:04:03,393
该组件最终将发出哪些自定义事件。