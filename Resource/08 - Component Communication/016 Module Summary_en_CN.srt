1
00:00:02,360 --> 00:00:03,870
就是这样

2
00:00:03,870 --> 00:00:06,430
组件通信模块。

3
00:00:06,430 --> 00:00:08,620
又是一个大模块

4
00:00:08,620 --> 00:00:11,210
教授了很多重要的概念，

5
00:00:11,210 --> 00:00:14,380
但最后，真的只是几个核心概念，

6
00:00:14,380 --> 00:00:16,210
你需要记住的

7
00:00:16,210 --> 00:00:19,360
让您的组件相互通信。

8
00:00:19,360 --> 00:00:20,810
现在一般来说，

9
00:00:20,810 --> 00:00:24,240
组件用于构建用户界面

10
00:00:24,240 --> 00:00:25,570
通过结合它们。

11
00:00:25,570 --> 00:00:27,480
组件的伟大之处在于

12
00:00:27,480 --> 00:00:30,910
您可以将逻辑封装在模板中

13
00:00:30,910 --> 00:00:34,840
并将您的代码分成多个较小的部分，

14
00:00:34,840 --> 00:00:37,390
并且您还可以重用组件，

15
00:00:37,390 --> 00:00:41,630
例如，封装列表项的组件。

16
00:00:41,630 --> 00:00:46,370
然后组件自动形成父子关系。

17
00:00:46,370 --> 00:00:50,870
如果在组件 A 的模板中使用组件 B

18
00:00:50,870 --> 00:00:54,820
那么组件 A 是组件 B 的父组件，

19
00:00:54,820 --> 00:00:57,030
在这种情况下，这将是孩子。

20
00:00:57,030 --> 00:00:59,010
如果你有一个组件 C

21
00:00:59,010 --> 00:01:01,200
在组件 B 的模板中，

22
00:01:01,200 --> 00:01:06,200
C 是 B 的子组件，也是组件 A 的子组件。

23
00:01:06,230 --> 00:01:08,550
这就是我在整个模块中讨论的内容

24
00:01:08,550 --> 00:01:11,350
以及你在行动中看到的。

25
00:01:11,350 --> 00:01:12,560
这很重要，

26
00:01:12,560 --> 00:01:16,280
因为当我们谈论组件通信时，

27
00:01:16,280 --> 00:01:17,750
你需要记住

28
00:01:17,750 --> 00:01:22,750
Vue 使用单向数据流进行通信。

29
00:01:23,150 --> 00:01:23,983
所以基本上，

30
00:01:23,983 --> 00:01:27,570
我们有办法将数据向下传递到组件

31
00:01:27,570 --> 00:01:32,120
或者也从使用不同概念的组件开始。

32
00:01:32,120 --> 00:01:34,640
嗯，这些是概念。

33
00:01:34,640 --> 00:01:37,750
为了向下传递数据，我们有道具。

34
00:01:37,750 --> 00:01:41,830
这允许我们将数据从父母传递给孩子。

35
00:01:41,830 --> 00:01:43,930
所以道具就是用来做这个的，

36
00:01:43,930 --> 00:01:46,786
我们应该提前定义道具

37
00:01:46,786 --> 00:01:50,380
在将接收它们的子组件中。

38
00:01:50,380 --> 00:01:53,020
您可以只指定一个数组

39
00:01:53,020 --> 00:01:55,960
让你知道你想收到的道具，

40
00:01:55,960 --> 00:01:58,170
或者你更详细，

41
00:01:58,170 --> 00:01:59,610
你也让 Vue 知道

42
00:01:59,610 --> 00:02:01,700
您期望哪种类型的数据，

43
00:02:01,700 --> 00:02:04,480
是否需要道具以及所有这些。

44
00:02:04,480 --> 00:02:06,230
你看得很详细

45
00:02:06,230 --> 00:02:07,963
贯穿本模块。

46
00:02:09,470 --> 00:02:11,950
如果你需要另一个方向，

47
00:02:11,950 --> 00:02:13,870
所以从孩子到父母，

48
00:02:13,870 --> 00:02:15,870
您需要自定义事件。

49
00:02:15,870 --> 00:02:19,070
组件可以发出自定义事件，

50
00:02:19,070 --> 00:02:22,270
借助内置的美元符号 emit 方法，

51
00:02:22,270 --> 00:02:25,560
让父组件知道某事

52
00:02:25,560 --> 00:02:27,230
并触发代码

53
00:02:27,230 --> 00:02:30,123
或触发父组件中的方法。

54
00:02:31,400 --> 00:02:33,800
自定义事件也可以携带数据，

55
00:02:33,800 --> 00:02:35,650
正如您在本模块中所看到的，

56
00:02:35,650 --> 00:02:39,750
例如，您可以转发用户输入的数据

57
00:02:39,750 --> 00:02:41,580
进入一些输入字段，

58
00:02:41,580 --> 00:02:44,180
被选中的东西的想法

59
00:02:44,180 --> 00:02:48,100
或您的用例中需要的任何数据。

60
00:02:48,100 --> 00:02:51,910
所以我们有父子和子父之间的沟通。

61
00:02:51,910 --> 00:02:55,820
我们这里没有的是邻居通信。

62
00:02:55,820 --> 00:02:58,950
所以如果我们有两个兄弟元素。

63
00:02:58,950 --> 00:03:02,050
我在整个模块中也谈到了这一点。

64
00:03:02,050 --> 00:03:06,430
如果您有两个相邻组件的情况

65
00:03:06,430 --> 00:03:08,110
需要交换数据，

66
00:03:08,110 --> 00:03:08,960
你最终会

67
00:03:08,960 --> 00:03:11,900
始终使用公共父组件

68
00:03:11,900 --> 00:03:14,010
在这两个兄弟组件中，

69
00:03:14,010 --> 00:03:15,650
店铺里面的数据，

70
00:03:15,650 --> 00:03:18,580
然后与每个兄弟姐妹的父母交谈

71
00:03:18,580 --> 00:03:20,150
并将数据向下传递

72
00:03:20,150 --> 00:03:23,110
到需要数据的各个兄弟组件。

73
00:03:23,110 --> 00:03:25,640
所以你最终总是有父子。

74
00:03:25,640 --> 00:03:29,183
你没有兄弟姐妹交流或类似的东西。

75
00:03:31,070 --> 00:03:32,910
有时你有这样的场景

76
00:03:32,910 --> 00:03:36,210
你有很多组件在路上

77
00:03:36,210 --> 00:03:38,370
您需要通过它传递数据

78
00:03:38,370 --> 00:03:40,050
或您的自定义事件。

79
00:03:40,050 --> 00:03:43,260
为此你得到了这个提供注入模式，

80
00:03:43,260 --> 00:03:46,000
我在本模块末尾向您展示了它。

81
00:03:46,000 --> 00:03:49,890
如果您的数据需要经过很多组件，

82
00:03:49,890 --> 00:03:53,010
基本上只是通过这些数据，

83
00:03:53,010 --> 00:03:55,530
在道具或自定义事件的帮助下，

84
00:03:55,530 --> 00:03:59,000
那么您可能需要考虑提供注入。

85
00:03:59,000 --> 00:04:02,520
这允许您在父组件中提供数据

86
00:04:02,520 --> 00:04:05,810
然后将其注入任何子组件中，

87
00:04:05,810 --> 00:04:08,390
不管嵌套多深，

88
00:04:08,390 --> 00:04:09,996
不传递数据

89
00:04:09,996 --> 00:04:12,590
通过多个级别的组件

90
00:04:12,590 --> 00:04:15,240
使用道具或自定义事件。

91
00:04:15,240 --> 00:04:16,510
现在，正如我提到的，

92
00:04:16,510 --> 00:04:19,060
不要使用 Provide-Inject 来替换

93
00:04:19,060 --> 00:04:21,510
你所有的道具或自定义事件。

94
00:04:21,510 --> 00:04:23,360
相反，真的只使用它

95
00:04:23,360 --> 00:04:28,000
如果您需要这种远程通信，您可以说。

96
00:04:28,000 --> 00:04:29,980
这就是你需要知道的一切

97
00:04:29,980 --> 00:04:32,940
关于此时的组件通信。

98
00:04:32,940 --> 00:04:36,720
确保您理解本模块中教授的概念

99
00:04:36,720 --> 00:04:38,660
让我们前进

100
00:04:38,660 --> 00:04:41,943
让我们深入了解 Vue 和组件。