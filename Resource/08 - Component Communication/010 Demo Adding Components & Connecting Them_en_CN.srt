1
00:00:02,170 --> 00:00:05,130
我完全清楚这是很多

2
00:00:05,130 --> 00:00:08,930
关于组件、道具和事件的新信息。

3
00:00:08,930 --> 00:00:11,420
关键的收获当然是道具在那里

4
00:00:11,420 --> 00:00:14,930
将数据发送到组件中并且事件在那里

5
00:00:14,930 --> 00:00:17,683
从组件中发送数据，你可以说。

6
00:00:18,830 --> 00:00:22,350
现在让我们一起练习一下，以后你也会有

7
00:00:22,350 --> 00:00:24,140
您自己完成的任务。

8
00:00:24,140 --> 00:00:26,450
但是让我们一起开始，让我们添加

9
00:00:26,450 --> 00:00:28,340
这个应用程序的全新组件。

10
00:00:28,340 --> 00:00:30,993
还有一个全新的功能。

11
00:00:32,240 --> 00:00:36,590
因为目前，我们这里的朋友相当静止。

12
00:00:36,590 --> 00:00:40,810
我们和两个朋友有一个数组，是的 isFavorite

13
00:00:40,810 --> 00:00:43,780
可以更改，但我们无法添加

14
00:00:43,780 --> 00:00:45,570
或在这里删除朋友。

15
00:00:45,570 --> 00:00:47,610
这是我想添加的功能

16
00:00:47,610 --> 00:00:49,053
这个演示应用程序。

17
00:00:49,950 --> 00:00:53,300
因此，我们将添加一个新组件，允许我们

18
00:00:53,300 --> 00:00:56,390
输入新朋友的数据。

19
00:00:56,390 --> 00:00:59,690
比如说姓名、电话和电子邮件地址。

20
00:00:59,690 --> 00:01:02,930
然后我希望能够确认该数据

21
00:01:02,930 --> 00:01:05,272
并且应该在此处添加该数据。

22
00:01:06,730 --> 00:01:10,190
现在我们完全可以在此处添加此表单。

23
00:01:10,190 --> 00:01:13,573
假设在标题下方，我们可以添加一个表单。

24
00:01:14,860 --> 00:01:19,860
然后在这里我们可以添加我们的输入，就像这样。

25
00:01:21,100 --> 00:01:24,870
然后我们还可以添加适当的样式并确保

26
00:01:24,870 --> 00:01:28,020
我们得到了我们需要的所有输入元素以及数据

27
00:01:28,020 --> 00:01:31,533
输入并确认我们将其添加到此朋友数组中。

28
00:01:32,870 --> 00:01:36,283
这会起作用，但这完全不是你应该做的。

29
00:01:37,620 --> 00:01:41,030
而不是拥有大量逻辑的大型视图文件

30
00:01:41,030 --> 00:01:42,380
在那里，你应该

31
00:01:42,380 --> 00:01:46,690
取而代之的是多个较小的专用组件。

32
00:01:46,690 --> 00:01:51,110
然后通过组合这些组件来构建您的 UI。

33
00:01:51,110 --> 00:01:55,200
所以实际上，我们不会在这里添加表格

34
00:01:55,200 --> 00:01:57,910
但是在 components 文件夹中，我们将添加

35
00:01:57,910 --> 00:01:58,993
一个新的组件。

36
00:02:00,374 --> 00:02:05,113
NewFriend 可以是组件名称。

37
00:02:06,070 --> 00:02:09,023
所以我将文件命名为 NewFriend.vue。

38
00:02:10,400 --> 00:02:13,290
在那里我们将再次添加我们的模板

39
00:02:14,580 --> 00:02:16,653
和我们的脚本部分。

40
00:02:19,530 --> 00:02:23,400
我们将创建该表单并处理用户输入

41
00:02:23,400 --> 00:02:26,400
在这个组件中，然后发出

42
00:02:26,400 --> 00:02:29,860
确认一切后的自定义事件

43
00:02:29,860 --> 00:02:30,864
到 App.vue 文件

44
00:02:30,864 --> 00:02:35,023
并将所有输入的数据传递到 App.vue。

45
00:02:36,550 --> 00:02:39,193
现在，绝对可以自己尝试一下。

46
00:02:40,360 --> 00:02:42,920
这是您暂停视频并实施的机会

47
00:02:42,920 --> 00:02:45,830
这是你自己的，但此后我们将执行此步骤

48
00:02:45,830 --> 00:02:47,000
一步一个脚印。

49
00:02:47,000 --> 00:02:50,820
练习这个组件概念和道具

50
00:02:50,820 --> 00:02:53,040
和自定义事件概念。

51
00:02:53,040 --> 00:02:54,460
尽管如此，如果你想尝试一下

52
00:02:54,460 --> 00:02:57,163
你自己，这是你暂停视频的机会。

53
00:03:01,160 --> 00:03:03,570
那么，你成功了吗？

54
00:03:03,570 --> 00:03:05,610
现在让我们一起尝试。

55
00:03:05,610 --> 00:03:09,453
在 NewFriends.vue 中，我将添加一个表单。

56
00:03:11,470 --> 00:03:14,300
因此，一个默认的 HTML 元素。

57
00:03:14,300 --> 00:03:17,780
在这里，我现在想要各种输入。

58
00:03:17,780 --> 00:03:22,780
因此，我将为名称添加文本类型的输入

59
00:03:23,200 --> 00:03:27,013
也许还可以在我们说名字的地方添加一个标签。

60
00:03:29,080 --> 00:03:32,280
然后我会在这里重复几次。

61
00:03:32,280 --> 00:03:36,430
我实际上还将每个标签输入集放入

62
00:03:36,430 --> 00:03:39,980
一个单独的 div 以便更容易区分它们。

63
00:03:39,980 --> 00:03:44,980
所以在这里，我们还输入了电话号码。

64
00:03:45,550 --> 00:03:47,870
在这里我们可以设置要告诉的类型，因为我们想要

65
00:03:47,870 --> 00:03:49,890
在这里获取电话号码。

66
00:03:49,890 --> 00:03:52,900
在这里我们得到了电子邮件地址，我们可以设置类型

67
00:03:52,900 --> 00:03:55,730
发送电子邮件以获取电子邮件地址。

68
00:03:55,730 --> 00:03:58,690
这就是所有常规的 HTML。

69
00:03:58,690 --> 00:04:01,380
下面假设我们有另一个 div，在

70
00:04:01,380 --> 00:04:05,720
我们有我们的按钮，我们说添加联系人。

71
00:04:06,970 --> 00:04:09,740
而且由于此按钮位于表单内

72
00:04:09,740 --> 00:04:12,363
当它被点击时，该表单将被提交。

73
00:04:15,380 --> 00:04:19,700
现在在脚本文本中，我将导出

74
00:04:19,700 --> 00:04:22,160
默认的 JavaScript 对象

75
00:04:22,160 --> 00:04:26,300
它将保存该组件的配置。

76
00:04:26,300 --> 00:04:28,963
但目前它是空的，我们稍后会添加更多。

77
00:04:30,370 --> 00:04:35,370
在 main.js 中，我们现在可以导入这个组件。

78
00:04:35,410 --> 00:04:38,830
我们可以导入新的朋友组件

79
00:04:38,830 --> 00:04:43,750
来自 ./components NewFriend.vue。

80
00:04:43,750 --> 00:04:48,623
并将其注册为带有 app 组件的组件。

81
00:04:50,350 --> 00:04:54,200
New-friend 可以是我们自定义的 HTML 标签。

82
00:04:54,200 --> 00:04:57,350
请记住，它应该是一个包含两个单词的标签

83
00:04:57,350 --> 00:04:59,410
新词之间的破折号。

84
00:04:59,410 --> 00:05:03,170
而新朋友是我们的组件配置，甚至

85
00:05:03,170 --> 00:05:05,223
虽然它目前是一个空对象。

86
00:05:06,270 --> 00:05:08,763
但是模板已经被拾取。

87
00:05:10,320 --> 00:05:13,440
因此在 App.vue 中，在标题之间

88
00:05:13,440 --> 00:05:14,700
和无序列表。

89
00:05:14,700 --> 00:05:18,860
我们可以添加我们的新朋友组件。

90
00:05:18,860 --> 00:05:20,333
打开和关闭。

91
00:05:22,370 --> 00:05:25,530
如果我们这样做，我们会在这里看到我们的表格。

92
00:05:25,530 --> 00:05:28,560
现在的造型不是超级漂亮。

93
00:05:28,560 --> 00:05:32,010
所以我会在样式标签中稍微调整一下

94
00:05:32,010 --> 00:05:33,563
在 App.vue 文件中。

95
00:05:35,410 --> 00:05:38,920
最后我将重用我使用的样式

96
00:05:38,920 --> 00:05:40,890
对于列表项。

97
00:05:40,890 --> 00:05:45,080
所以在这里，我也将使用它来定位表单元素。

98
00:05:45,080 --> 00:05:46,790
现在我们有了这个表格。

99
00:05:46,790 --> 00:05:49,370
现在它仍然不是超级漂亮

100
00:05:49,370 --> 00:05:51,210
标签和输入。

101
00:05:51,210 --> 00:05:54,230
因此，我将快速添加一些新样式，

102
00:05:54,230 --> 00:05:56,330
但我不想让你厌烦。

103
00:05:56,330 --> 00:05:59,230
所以附上找个表格点的CSS文件

104
00:05:59,230 --> 00:06:01,913
其中包含这些样式，我将在此处添加。

105
00:06:05,170 --> 00:06:08,840
现在将这三种样式添加到样式文本中，

106
00:06:08,840 --> 00:06:11,050
这是您应该在屏幕上看到的内容。

107
00:06:11,050 --> 00:06:12,830
所以现在这是我们自己的组件，

108
00:06:12,830 --> 00:06:16,670
一个全新的表单组件，允许我们输入数据

109
00:06:16,670 --> 00:06:19,600
姓名、电话号码和电子邮件地址

110
00:06:19,600 --> 00:06:21,423
然后单击添加联系人。

111
00:06:22,500 --> 00:06:27,290
那么现在对于逻辑，我们在这里需要哪些道具？

112
00:06:27,290 --> 00:06:30,040
好吧，我想说我们不需要道具。

113
00:06:30,040 --> 00:06:33,410
因为这个组件会收集一些用户数据

114
00:06:33,410 --> 00:06:36,830
最终它应该将它提供给 App.ue，

115
00:06:36,830 --> 00:06:40,070
但它并不真正需要任何外部数据。

116
00:06:40,070 --> 00:06:42,490
所以我在这里看不到我们需要的任何道具

117
00:06:42,490 --> 00:06:43,323
眼下。

118
00:06:44,660 --> 00:06:48,250
但正如我刚才所说，我们肯定需要发出一个事件。

119
00:06:48,250 --> 00:06:52,280
因此我已经在 emits 属性上

120
00:06:52,280 --> 00:06:56,920
并在此处添加我选择的事件名称或您选择的事件名称

121
00:06:56,920 --> 00:06:58,140
当然在你的情况下。

122
00:06:58,140 --> 00:07:02,310
我会命名它，添加联系人，因为那是那种

123
00:07:02,310 --> 00:07:04,000
我们将在这里发出的事件。

124
00:07:04,000 --> 00:07:07,110
但你也可以选择一个不同的名字，任何名字

125
00:07:07,110 --> 00:07:08,333
这对你来说很有意义。

126
00:07:09,650 --> 00:07:12,260
我还将在这里添加我的数据属性

127
00:07:12,260 --> 00:07:15,770
并管理一些组件特定的数据。

128
00:07:15,770 --> 00:07:19,360
所以这个组件需要的数据。

129
00:07:19,360 --> 00:07:23,300
在这里基本上我想存储用户输入的内容

130
00:07:23,300 --> 00:07:27,540
作为一个名字，作为一个ph一个号码和一个电子邮件地址。

131
00:07:27,540 --> 00:07:30,800
因此，我将在这里添加三个数据属性。

132
00:07:30,800 --> 00:07:33,950
输入的名称，最初是一个空字符串。

133
00:07:33,950 --> 00:07:36,990
输入的电话，最初是一个空字符串

134
00:07:36,990 --> 00:07:39,893
你猜对了，输入了电子邮件。

135
00:07:41,740 --> 00:07:45,970
我会将这些数据属性与 v-model 绑定。

136
00:07:45,970 --> 00:07:50,090
所以这里的 v-model 必然是输入的名字。

137
00:07:50,090 --> 00:07:54,510
在这里，我将绑定电话号码输入

138
00:07:54,510 --> 00:07:58,200
使用 v-model 输入电话和电子邮件

139
00:07:58,200 --> 00:08:03,200
使用 v-model，输入电子邮件。

140
00:08:03,370 --> 00:08:06,583
因此，每次击键时，我们都会存储用户输入的内容。

141
00:08:08,270 --> 00:08:10,680
我也会听提交事件

142
00:08:10,680 --> 00:08:13,160
在带有@submit 的表单上。

143
00:08:13,160 --> 00:08:17,010
我将使用 prevent 修饰符来确保

144
00:08:17,010 --> 00:08:20,750
提交时，我们会阻止浏览器默认设置。

145
00:08:20,750 --> 00:08:23,510
这将导致页面被重新加载，这

146
00:08:23,510 --> 00:08:24,810
不是我想要的。

147
00:08:24,810 --> 00:08:27,080
我想在里面完全处理

148
00:08:27,080 --> 00:08:28,713
正在运行的视图应用程序。

149
00:08:30,930 --> 00:08:34,049
在这里，我们可以指出我们选择的方法

150
00:08:34,049 --> 00:08:37,110
我将方法命名为提交数据。

151
00:08:37,110 --> 00:08:39,860
但同样是你的代码，你可以命名的方法

152
00:08:39,860 --> 00:08:41,059
随心所欲。

153
00:08:41,059 --> 00:08:43,620
但是我们当然必须添加该方法。

154
00:08:43,620 --> 00:08:46,780
所以在数据之后，我们将方法添加到

155
00:08:46,780 --> 00:08:50,040
这个 NewFriend 组件配置对象。

156
00:08:50,040 --> 00:08:53,520
在那里我将添加提交数据方法，现在

157
00:08:53,520 --> 00:08:56,390
将在提交表单时触发。

158
00:08:56,390 --> 00:08:59,610
在这里，我想做一件简单的事情。

159
00:08:59,610 --> 00:09:03,750
我想发出我的自定义添加联系人事件，

160
00:09:03,750 --> 00:09:07,460
这样我就可以将这些数据转发给任何人

161
00:09:07,460 --> 00:09:09,750
正在收听该自定义事件。

162
00:09:09,750 --> 00:09:12,583
稍后将是 App.vue 文件。

163
00:09:13,630 --> 00:09:16,540
所以在这里我们使用这个美元符号发出。

164
00:09:16,540 --> 00:09:20,190
然后发出，添加联系人。

165
00:09:20,190 --> 00:09:24,693
所以我在这里宣布的自定义事件，基本上。

166
00:09:25,910 --> 00:09:30,910
然后我们转发这个输入的名字，这个输入的电话

167
00:09:31,020 --> 00:09:33,380
这输入了电子邮件。

168
00:09:33,380 --> 00:09:36,130
您也可以将其组合成一个对象

169
00:09:36,130 --> 00:09:39,680
并且只发出一个他们对或的论点，就像我正在做的那样

170
00:09:39,680 --> 00:09:42,003
它在这里发出三个参数。

171
00:09:43,570 --> 00:09:47,200
现在我们可以去 App.vue 听

172
00:09:47,200 --> 00:09:50,630
到 NewFriend 组件上的这个自定义事件。

173
00:09:50,630 --> 00:09:54,543
使用@add-contact。

174
00:09:56,940 --> 00:10:00,630
然后指向一个我们需要在这里定义的方法。

175
00:10:00,630 --> 00:10:03,840
我还将命名添加方法添加联系人。

176
00:10:03,840 --> 00:10:06,700
但同样，这个名字取决于你，它不必是

177
00:10:06,700 --> 00:10:09,530
与我们用于活动的相同。

178
00:10:09,530 --> 00:10:11,703
这两个不必相同。

179
00:10:12,980 --> 00:10:17,310
所以现在在方法中，我将添加 addContact

180
00:10:17,310 --> 00:10:20,400
我们在这里期望三个参数。

181
00:10:20,400 --> 00:10:24,460
因为我们发出了三个名称的数据，

182
00:10:24,460 --> 00:10:25,923
电话号码，电子邮件。

183
00:10:26,830 --> 00:10:30,610
所以在这里我希望得到姓名、电话和电子邮件。

184
00:10:30,610 --> 00:10:33,550
这些参数名称由您决定，但顺序

185
00:10:33,550 --> 00:10:35,260
当然很重要。

186
00:10:35,260 --> 00:10:38,270
因为和这里指定的顺序一样

187
00:10:38,270 --> 00:10:40,780
当我们发出事件时。

188
00:10:40,780 --> 00:10:45,780
然后在这里，我们可以创建一个新朋友联系人

189
00:10:47,750 --> 00:10:50,283
这应该是一个新的 JavaScript 对象。

190
00:10:51,160 --> 00:10:53,140
现在具有相同的结构

191
00:10:53,140 --> 00:10:55,960
作为我们的虚拟起始对象。

192
00:10:55,960 --> 00:10:59,620
所以姓名，电话和电子邮件，还有身份证

193
00:10:59,620 --> 00:11:02,083
也是最喜欢的属性。

194
00:11:02,920 --> 00:11:07,550
现在我们可以生成一个伪唯一ID，通过

195
00:11:07,550 --> 00:11:11,100
例如使用当前日期，whi我们可以得到喜欢

196
00:11:11,100 --> 00:11:13,070
这在 JavaScript 中。

197
00:11:13,070 --> 00:11:16,360
并将其转换为 ISO 字符串

198
00:11:16,360 --> 00:11:18,930
这样我们基本上就有了一个反映

199
00:11:18,930 --> 00:11:21,810
当前时间戳，不是完全唯一的

200
00:11:21,810 --> 00:11:23,593
但现在足够独特。

201
00:11:25,390 --> 00:11:28,130
然后我们可以设置我们的其他数据属性。

202
00:11:28,130 --> 00:11:30,390
就像我们设置的名字一样

203
00:11:30,390 --> 00:11:31,730
我们在这里得到的名字。

204
00:11:31,730 --> 00:11:34,760
这就是该对象中的属性名称。

205
00:11:34,760 --> 00:11:37,180
这个在结肠的右侧，

206
00:11:37,180 --> 00:11:40,240
指的是我们得到的名称参数。

207
00:11:40,240 --> 00:11:44,550
我将在这里为电话和电子邮件做同样的事情。

208
00:11:44,550 --> 00:11:47,980
我为参数选择了相同的名称

209
00:11:47,980 --> 00:11:51,320
正如我对房产所做的那样纯属巧合。

210
00:11:51,320 --> 00:11:53,430
当然，您不必这样做。

211
00:11:53,430 --> 00:11:56,240
但是属性名称应该是相同的

212
00:11:56,240 --> 00:11:59,730
就像在你的虚拟对象中一样，因为你指的是

213
00:11:59,730 --> 00:12:03,040
设置值时到这里的那些属性

214
00:12:03,040 --> 00:12:06,073
用于好友联系人组件的道具。

215
00:12:10,660 --> 00:12:13,330
现在我们还需要这里的 isFavorite 属性

216
00:12:13,330 --> 00:12:16,033
假设默认情况下这是错误的。

217
00:12:17,210 --> 00:12:19,580
现在我们得到了 newFriendContact

218
00:12:19,580 --> 00:12:22,920
现在我们可以联系这些朋友了。

219
00:12:22,920 --> 00:12:26,620
所以对于我们的朋友数据属性，我们有

220
00:12:26,620 --> 00:12:29,023
在我们的应用程序配置对象中。

221
00:12:30,360 --> 00:12:33,560
所以联系这个朋友并推动

222
00:12:34,660 --> 00:12:39,403
新朋友联系这里，这个新创建的对象。

223
00:12:40,890 --> 00:12:45,890
如果我们保存所有这些，我应该

224
00:12:46,020 --> 00:12:50,780
可以在此处输入新联系人。

225
00:12:50,780 --> 00:12:53,560
单击添加联系人，他在这里。

226
00:12:53,560 --> 00:12:57,380
这是我刚刚输入的数据的 Max，工作方式如下

227
00:12:57,380 --> 00:12:58,603
其他组件。

228
00:13:00,570 --> 00:13:04,630
现在可以了，我们可以添加自己的联系人

229
00:13:04,630 --> 00:13:08,010
我们在一个新组件的帮助下做到了这一点，

230
00:13:08,010 --> 00:13:09,400
新朋友组件。

231
00:13:09,400 --> 00:13:12,883
这也使用自定义事件。