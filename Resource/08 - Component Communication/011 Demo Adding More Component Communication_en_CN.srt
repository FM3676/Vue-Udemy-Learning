1
00:00:02,469 --> 00:00:04,100
现在正如我之前提到的，

2
00:00:04,100 --> 00:00:06,970
我也希望能够删除朋友。

3
00:00:06,970 --> 00:00:10,620
为此，让我们在 FriendContact.vue 组件中说，

4
00:00:10,620 --> 00:00:14,150
除了其他按钮，我将添加第三个按钮，

5
00:00:14,150 --> 00:00:15,240
我们已经有了。

6
00:00:15,240 --> 00:00:16,800
让我们在这个列表下面说，

7
00:00:16,800 --> 00:00:19,890
我们在每个朋友联系项目中都有，

8
00:00:19,890 --> 00:00:24,710
在那里我会添加一个新按钮，我说删除，

9
00:00:24,710 --> 00:00:27,520
我想做这个名字所暗示的事情。

10
00:00:27,520 --> 00:00:29,860
所以当然，我想听点击

11
00:00:29,860 --> 00:00:34,383
然后例如触发 deleteFriend 方法。

12
00:00:35,320 --> 00:00:37,170
而在这种方法中，

13
00:00:37,170 --> 00:00:40,690
我们在 FriendContact.vue 文件中添加，

14
00:00:40,690 --> 00:00:42,983
在这个方法中，我们现在想要做什么？

15
00:00:43,910 --> 00:00:44,840
嗯，最后，

16
00:00:44,840 --> 00:00:47,350
我们需要再次发出自定义事件，

17
00:00:47,350 --> 00:00:51,270
因为friends数组是在App.vue中管理的

18
00:00:53,000 --> 00:00:55,110
如果我们想删除一个朋友，

19
00:00:55,110 --> 00:00:57,810
我们需要从这个数组中删除它，

20
00:00:57,810 --> 00:01:00,763
因为我们用 v-for 渲染的就是这个数组。

21
00:01:02,290 --> 00:01:06,430
因此，我们基本上只需要，而不是 FriendContact，

22
00:01:06,430 --> 00:01:09,480
你可以说转发信息

23
00:01:09,480 --> 00:01:12,130
用户单击此处的删除按钮。

24
00:01:12,130 --> 00:01:13,020
所以在这里，我们再次，

25
00:01:13,020 --> 00:01:17,690
只需调用这个发射，美元符号发射，任何事件名称

26
00:01:17,690 --> 00:01:20,093
您的选择，如删除。

27
00:01:22,600 --> 00:01:25,430
现在，如果这就是你所做的一切，当然，

28
00:01:25,430 --> 00:01:29,360
你也不能像这样使用单独的方法，

29
00:01:29,360 --> 00:01:32,400
虽然你绝对可以做到，但没有错。

30
00:01:32,400 --> 00:01:37,350
但你也不能这样做，而是去你的模板

31
00:01:37,350 --> 00:01:41,730
然后在这里调用emit，就像这样

32
00:01:41,730 --> 00:01:45,463
在这里没有这个关键字，就像在模板中一样。

33
00:01:46,780 --> 00:01:49,350
这只是一个替代方案，由您决定，

34
00:01:49,350 --> 00:01:53,920
你喜欢什么，我都在为 toggleFavorite 做这两个。

35
00:01:53,920 --> 00:01:57,789
我正在采用这种额外的方法，我称之为。$`emit

36
00:01:57,789 --> 00:02:00,570
而对于删除，我现在不这样做

37
00:02:00,570 --> 00:02:03,913
而我直接在模板中调用emit。

38
00:02:05,850 --> 00:02:09,610
尽管如此，你想把它添加到你的发射数组中

39
00:02:09,610 --> 00:02:12,940
明确这个朋友联系组件

40
00:02:12,940 --> 00:02:17,270
有一个将在某个时候发出的删除事件。

41
00:02:17,270 --> 00:02:19,920
现在我们可以监听这个自定义事件

42
00:02:19,920 --> 00:02:22,310
在这个 FriendContact 组件上。

43
00:02:22,310 --> 00:02:25,330
所以在我们使用该组件的地方。

44
00:02:25,330 --> 00:02:27,550
在这种情况下，又是 App.vue 文件，

45
00:02:27,550 --> 00:02:32,480
在这里，我们可以使用@delete 监听删除事件

46
00:02:32,480 --> 00:02:35,870
在这个组件上，然后指向一个方法

47
00:02:35,870 --> 00:02:38,250
应该处理这个，

48
00:02:38,250 --> 00:02:41,853
deleteContact 对我来说听起来像是一个合适的方法名称。

49
00:02:43,590 --> 00:02:48,590
所以现在在 App.vue 中，我将添加这个 deleteContact 方法

50
00:02:49,210 --> 00:02:52,080
在这里，我现在想删除那个联系人

51
00:02:52,080 --> 00:02:53,600
从我的阵列。

52
00:02:53,600 --> 00:02:54,873
现在这里缺少什么？

53
00:02:56,450 --> 00:02:59,620
那么，一些识别标准，对吧？

54
00:02:59,620 --> 00:03:02,950
我们需要知道应该删除哪个联系人。

55
00:03:02,950 --> 00:03:05,803
所以就像之前切换收藏状态一样，

56
00:03:06,660 --> 00:03:09,510
了解朋友的想法会很好

57
00:03:09,510 --> 00:03:11,170
应该删除。

58
00:03:11,170 --> 00:03:13,380
因此之前所有的正义，

59
00:03:13,380 --> 00:03:15,830
我们可以去 FriendContact.vue,

60
00:03:15,830 --> 00:03:19,020
并将其作为第二个参数传递给发射，

61
00:03:19,020 --> 00:03:23,393
并转发我们在这里得到的 id Prop，

62
00:03:24,660 --> 00:03:27,793
所以请参考此处并通过删除传递它。

63
00:03:29,750 --> 00:03:33,920
所以现在在 App.vue 中，在 deleteContact 中，

64
00:03:33,920 --> 00:03:36,350
我们现在想找到那个 id 的朋友

65
00:03:36,350 --> 00:03:38,053
并删除他或她。

66
00:03:38,960 --> 00:03:41,830
以及在 JavaScript 中执行此操作的一种优雅方式

67
00:03:41,830 --> 00:03:44,610
当你有一个数组并且你想删除一个数组时

68
00:03:44,610 --> 00:03:46,970
根据您对该项目的一些信息

69
00:03:46,970 --> 00:03:50,940
应该删除的是你可以覆盖数组

70
00:03:50,940 --> 00:03:53,380
并为此属性分配一个新值

71
00:03:53,380 --> 00:03:54,830
存储数组。

72
00:03:54,830 --> 00:03:56,980
所以在这种情况下，friends 属性，

73
00:03:56,980 --> 00:04:00,980
并使用旧数组，但在其上调用了过滤器方法。

74
00:04:00,980 --> 00:04:05,300
过滤器是一种内置在 JavaScript 中的方法，

75
00:04:05,300 --> 00:04:08,860
它将基于数组返回一个新数组

76
00:04:08,860 --> 00:04:10,660
你在上面调用它。

77
00:04:10,660 --> 00:04:13,590
它会返回你调用它的数组，

78
00:04:13,590 --> 00:04:17,100
除了您要过滤掉的元素。

79
00:04:17,100 --> 00:04:19,410
对于那个过滤器想要一个功能，

80
00:04:19,410 --> 00:04:21,290
您作为论据提供的，

81
00:04:21,290 --> 00:04:23,760
如果该函数返回 true，

82
00:04:23,760 --> 00:04:25,530
一个元素被保留在周围，

83
00:04:25,530 --> 00:04:27,460
如果该函数返回 false，

84
00:04:27,460 --> 00:04:29,560
元素被删除。

85
00:04:29,560 --> 00:04:33,350
这是一个接收元素作为输入的函数，

86
00:04:33,350 --> 00:04:36,120
由 JavaScript 自动执行，因此它将运行

87
00:04:36,120 --> 00:04:38,900
为朋友和 JavaScript 中的每一位朋友

88
00:04:38,900 --> 00:04:41,860
会一步步喂饱每一位朋友。

89
00:04:41,860 --> 00:04:44,370
如果您想保留该项目，我们应该返回 true

90
00:04:44,370 --> 00:04:47,990
否则为 false 和此箭头函数语法

91
00:04:47,990 --> 00:04:51,280
只是用 JavaScript 编写函数的另一种方式，

92
00:04:51,280 --> 00:04:55,590
顺便说一句，在这里，我现在可以检查

93
00:04:55,590 --> 00:04:58,406
如果friend.id 不相等

94
00:04:58,406 --> 00:05:00,453
我要到这里的朋友。

95
00:05:01,840 --> 00:05:06,080
我正在检查不等式，因为如果它相等，

96
00:05:06,080 --> 00:05:07,530
我想保留它。

97
00:05:07,530 --> 00:05:09,470
所以在检查不相等时，

98
00:05:09,470 --> 00:05:14,290
我确保如果 id 相等，我返回 false，

99
00:05:14,290 --> 00:05:17,623
因为如果他们是平等的，我想删除那个朋友。

100
00:05:18,810 --> 00:05:21,200
我提到物品被丢弃

101
00:05:21,200 --> 00:05:24,430
如果我们在这里返回 false，那么我想返回 false

102
00:05:24,430 --> 00:05:26,003
如果我们找到匹配的 id。

103
00:05:27,520 --> 00:05:30,180
有了这个，我们生成了一个全新的朋友数组，

104
00:05:30,180 --> 00:05:33,770
这是旧数组减去具有此 ID 的朋友

105
00:05:33,770 --> 00:05:37,760
然后我们将其存储回我们的朋友数据属性中，

106
00:05:37,760 --> 00:05:40,630
然后 Vue 会检测到朋友的这种变化，

107
00:05:40,630 --> 00:05:44,430
它会看到朋友发生了变化，它将重新呈现该列表

108
00:05:44,430 --> 00:05:46,803
并适当地更新 UI。

109
00:05:48,410 --> 00:05:49,923
所以如果我们现在保存它，

110
00:05:51,110 --> 00:05:54,640
我在 Manuel 上点击 Delete here,

111
00:05:54,640 --> 00:05:56,480
你会看到曼努埃尔走了

112
00:05:56,480 --> 00:05:58,520
当然，我们也可以删除 Julie。

113
00:05:58,520 --> 00:06:00,570
如果我们重新加载数据，

114
00:06:00,570 --> 00:06:01,920
因为所有这些当然是，

115
00:06:01,920 --> 00:06:05,310
只是发生在 JavaScript 中，因此发生在内存中。

116
00:06:05,310 --> 00:06:07,840
但稍后，我们也会看到如何发送

117
00:06:07,840 --> 00:06:10,850
此类数据到服务器并永久存储

118
00:06:10,850 --> 00:06:12,690
在服务器站点数据库上。

119
00:06:12,690 --> 00:06:15,800
但就目前而言，这是向前迈出的一大步，

120
00:06:15,800 --> 00:06:19,150
因为它向我们展示了我们可以用组件做什么

121
00:06:19,150 --> 00:06:21,693
我们现在对组件进行了更多练习。