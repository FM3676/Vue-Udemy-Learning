1
00:00:02,310 --> 00:00:05,080
所以，我回到了这个项目

2
00:00:05,080 --> 00:00:06,930
我们在最后一个模块中设置，

3
00:00:06,930 --> 00:00:08,300
你会发现它附上了，

4
00:00:08,300 --> 00:00:10,200
确保运行 NPM 安装

5
00:00:10,200 --> 00:00:11,410
并启动你的服务器

6
00:00:11,410 --> 00:00:14,043
如果你刚刚下载了 NPM 运行服务器。

7
00:00:15,470 --> 00:00:17,550
你应该在屏幕上看到这个

8
00:00:17,550 --> 00:00:20,390
在本地主机 8080 上。

9
00:00:20,390 --> 00:00:24,490
所以，这是我们目前工作的虚拟应用程序，

10
00:00:24,490 --> 00:00:26,720
我们在这里使用了一个组件，

11
00:00:26,720 --> 00:00:29,440
我们正在使用朋友联系组件，

12
00:00:29,440 --> 00:00:33,223
我们在这里用 app 组件在主 JS 中定义。

13
00:00:35,200 --> 00:00:38,880
现在这个朋友联系组件有一个问题，

14
00:00:38,880 --> 00:00:40,680
它有一个缺陷。

15
00:00:40,680 --> 00:00:42,750
我们在这里输出的数据，

16
00:00:42,750 --> 00:00:44,350
朋友的名字，

17
00:00:44,350 --> 00:00:46,730
电话号码、电子邮件地址、

18
00:00:46,730 --> 00:00:51,190
所有这些都存储在组件内部

19
00:00:51,190 --> 00:00:54,010
在这个朋友数据属性中。

20
00:00:54,010 --> 00:00:56,960
现在，这是我们在整个课程中经常使用的模式。

21
00:00:56,960 --> 00:00:59,960
我们存储了一个 Vue 应用程序需要的数据

22
00:00:59,960 --> 00:01:01,800
在那个应用程序里面。

23
00:01:01,800 --> 00:01:04,900
但是对于组件，它通常会有所不同。

24
00:01:04,900 --> 00:01:09,390
在那里，你有时想要创建一个可重用的组件，

25
00:01:09,390 --> 00:01:12,760
其中包含标记和某些逻辑，

26
00:01:12,760 --> 00:01:15,860
像这里一样，切换列表的逻辑

27
00:01:15,860 --> 00:01:17,070
在按钮的帮助下，

28
00:01:17,070 --> 00:01:19,760
所以这应该是组件的一部分。

29
00:01:19,760 --> 00:01:23,410
但是应该从外部接收一些数据

30
00:01:23,410 --> 00:01:27,620
从外部我的意思是应用程序

31
00:01:27,620 --> 00:01:30,690
或正在使用该组件的组件，

32
00:01:30,690 --> 00:01:33,250
所以在我们的例子中，我们这里的主要应用程序，

33
00:01:33,250 --> 00:01:35,810
在这里，我们使用该组件的地方，

34
00:01:35,810 --> 00:01:40,530
该应用程序应该将数据传递到我们的组件中，

35
00:01:40,530 --> 00:01:43,680
这样当我们使用我们的组件两次时，

36
00:01:43,680 --> 00:01:46,200
我们可以将它与不同的数据一起使用

37
00:01:46,200 --> 00:01:48,410
在每个组件实例中，

38
00:01:48,410 --> 00:01:51,683
所以在我们在这里创建的每个 HTML 元素中。

39
00:01:52,610 --> 00:01:56,740
以便第一个联系人输出有关手册的数据

40
00:01:56,740 --> 00:01:59,290
我们第二次使用该组件时，

41
00:01:59,290 --> 00:02:02,500
例如，我们输出有关 Julie 的数据。

42
00:02:02,500 --> 00:02:03,840
那很好啊

43
00:02:03,840 --> 00:02:06,340
如果我们可以使用这样的组件，

44
00:02:06,340 --> 00:02:09,400
如果我们可以将它用作可重复使用的

45
00:02:09,400 --> 00:02:12,500
和可配置的 HTML 元素。

46
00:02:12,500 --> 00:02:15,490
目前它是可重复使用的

47
00:02:15,490 --> 00:02:18,340
但每次使用都包含相同的数据，

48
00:02:18,340 --> 00:02:20,963
这就是为什么我们两次看到曼努埃尔洛伦​​茨。

49
00:02:21,930 --> 00:02:24,890
当然，现在有一个解决方案

50
00:02:24,890 --> 00:02:28,040
因为这是一个如此重要的概念，

51
00:02:28,040 --> 00:02:31,640
能够配置相同的组件

52
00:02:31,640 --> 00:02:32,880
有不同的数据

53
00:02:32,880 --> 00:02:34,580
当你多次使用它时，

54
00:02:34,580 --> 00:02:36,350
这是一个核心概念

55
00:02:36,350 --> 00:02:39,920
因此我们可以用 Vue 来实现它，

56
00:02:39,920 --> 00:02:42,780
有一个叫做道具的概念。

57
00:02:42,780 --> 00:02:45,120
现在道具是什么？

58
00:02:45,120 --> 00:02:48,490
props 是属性的缩写

59
00:02:48,490 --> 00:02:53,330
您可以将 props 想象成自定义 HTML 属性。

60
00:02:53,330 --> 00:02:56,790
例如这里，在 App.vue 中，

61
00:02:56,790 --> 00:02:59,470
如果我们能传递数据就好了

62
00:02:59,470 --> 00:03:01,370
给我们的第一个朋友联系。

63
00:03:01,370 --> 00:03:05,790
假设我们将通过名称

64
00:03:05,790 --> 00:03:08,140
那就是曼努埃尔·洛伦兹。

65
00:03:08,140 --> 00:03:11,810
我们会传递电话号码

66
00:03:11,810 --> 00:03:14,783
这将是一些数字。

67
00:03:15,690 --> 00:03:19,300
我们会传入电子邮件地址

68
00:03:19,300 --> 00:03:24,300
例如，那将是 manuel@localhost.com。

69
00:03:24,760 --> 00:03:27,560
我要打那个重新格式化的快捷方式

70
00:03:27,560 --> 00:03:31,800
将其重新格式化为这个更易读的版本在这里。

71
00:03:31,800 --> 00:03:32,840
但这会很好

72
00:03:32,840 --> 00:03:37,230
如果我们可以像这样使用我们的朋友联系组件。

73
00:03:37,230 --> 00:03:41,060
然后这里供第二个朋友联系组件使用，

74
00:03:41,060 --> 00:03:43,910
我们可以传入相同的属性，

75
00:03:43,910 --> 00:03:45,800
但有不同的数据。

76
00:03:45,800 --> 00:03:48,830
所以我们可以复制它并添加到这里，

77
00:03:48,830 --> 00:03:51,670
但现在在第二个朋友联系上，

78
00:03:51,670 --> 00:03:54,360
通过朱莉琼斯，

79
00:03:54,360 --> 00:03:59,360
这里有我们选择的一些数据，

80
00:04:00,630 --> 00:04:02,770
并听到 julie@localhost。

81
00:04:02,770 --> 00:04:05,113
如果我们可以这样使用它会很好。

82
00:04:06,970 --> 00:04:08,920
现在，如果我们保存它，它可以工作

83
00:04:08,920 --> 00:04:11,820
但是我们当然不会在屏幕上看到这些数据。

84
00:04:11,820 --> 00:04:13,430
因为，是的，确实，

85
00:04:13,430 --> 00:04:16,100
你可以设置自己的属性，

86
00:04:16,100 --> 00:04:19,890
那些所谓的组件上的道具，

87
00:04:19,890 --> 00:04:22,630
但是为了在组件内部使用它们，

88
00:04:22,630 --> 00:04:24,440
你还需要写一些代码

89
00:04:24,440 --> 00:04:26,200
在组件文件中，

90
00:04:26,200 --> 00:04:29,393
所以在这种情况下，内部的朋友联系。

91
00:04:30,300 --> 00:04:35,067
您基本上应该让 Vue 了解这些属性

92
00:04:35,067 --> 00:04:39,123
您希望在组件上接受的道具。

93
00:04:40,640 --> 00:04:41,920
所以在我们的例子中，

94
00:04:41,920 --> 00:04:44,450
我们想让 Vue 知道名称，

95
00:04:44,450 --> 00:04:48,500
电话号码和电子邮件地址。

96
00:04:48,500 --> 00:04:50,820
我们可以让 Vue 意识到这一点

97
00:04:50,820 --> 00:04:53,270
通过转到我们的组件文件，

98
00:04:53,270 --> 00:04:55,070
进入配置对象，

99
00:04:55,070 --> 00:04:58,390
并在此处添加特定的新密钥，

100
00:04:58,390 --> 00:05:01,610
一个我们以前没有了解过的新属性，

101
00:05:01,610 --> 00:05:03,920
道具属性。

102
00:05:03,920 --> 00:05:07,750
在最简单的形式中，这需要一个数组。

103
00:05:07,750 --> 00:05:10,090
我说的是最简单的形式

104
00:05:10,090 --> 00:05:12,980
因为我们稍后还会了解不同的方式

105
00:05:12,980 --> 00:05:14,640
使用它。

106
00:05:14,640 --> 00:05:18,050
但以最简单的形式，我们传入一个数组，

107
00:05:18,050 --> 00:05:22,610
在这里，我们现在应该指定所有的道具。

108
00:05:22,610 --> 00:05:25,410
所以，所有的自定义属性，你可以说，

109
00:05:25,410 --> 00:05:29,250
我们想接受这个组件。

110
00:05:29,250 --> 00:05:31,220
在我们的例子中，那就是名字，

111
00:05:31,220 --> 00:05:33,610
电话号码和电子邮件地址。

112
00:05:33,610 --> 00:05:36,770
所以我们可以添加名称，作为一个字符串，

113
00:05:36,770 --> 00:05:39,900
您将道具作为字符串添加到此数组中。

114
00:05:39,900 --> 00:05:41,840
所以我们添加名称，

115
00:05:41,840 --> 00:05:45,310
然后是电话号码，这样写。

116
00:05:45,310 --> 00:05:47,100
我稍后再谈。

117
00:05:47,100 --> 00:05:50,020
并且邮箱地址也是这样写的。

118
00:05:50,020 --> 00:05:51,630
现在为什么是电话号码

119
00:05:51,630 --> 00:05:53,920
和这样写的电子邮件地址？

120
00:05:53,920 --> 00:05:58,130
因为，我们在这里定义为道具，

121
00:05:58,130 --> 00:06:01,490
将可用，就像数据属性一样，

122
00:06:01,490 --> 00:06:03,380
在整个 Vue 组件中，

123
00:06:03,380 --> 00:06:05,700
包括在模板中。

124
00:06:05,700 --> 00:06:08,110
所以，我们现在可以参考这个

125
00:06:08,110 --> 00:06:09,660
使用“this”关键字。

126
00:06:09,660 --> 00:06:11,690
如果我们需要，在方法中，

127
00:06:11,690 --> 00:06:16,690
例如，我们可以参考这个电话号码。

128
00:06:16,750 --> 00:06:18,450
这就是为什么我们这样写

129
00:06:18,450 --> 00:06:19,890
而不是破折号，

130
00:06:19,890 --> 00:06:21,030
因为用破折号，

131
00:06:21,030 --> 00:06:24,360
这将是一个无效的 JavaScript 属性名称，

132
00:06:24,360 --> 00:06:26,800
这将是无效的 JavaScript 代码。

133
00:06:26,800 --> 00:06:29,480
因此组件中的道具

134
00:06:29,480 --> 00:06:32,520
应该在这个骆驼案例中定义。

135
00:06:32,520 --> 00:06:37,520
并且 Vue 会自动翻译这样定义的 props

136
00:06:38,380 --> 00:06:41,240
用破折号变成这样的版本，

137
00:06:41,240 --> 00:06:44,450
所以使用这个kebab case，单词之间有一个破折号。

138
00:06:44,450 --> 00:06:47,300
事实上，在您的 HTML 模板中，

139
00:06:47,300 --> 00:06:49,950
你应该使用这个 kebab case 表示法。

140
00:06:49,950 --> 00:06:52,550
所以在这里你不应该使用电话号码，

141
00:06:52,550 --> 00:06:54,420
但电话破折号。

142
00:06:54,420 --> 00:06:57,620
为了与您的 HTML 代码的其余部分保持一致，

143
00:06:57,620 --> 00:07:01,553
它也使用小写的 kebab case 语法。

144
00:07:02,600 --> 00:07:04,590
乍一听可能很迷惑

145
00:07:04,590 --> 00:07:05,920
但其实很简单，

146
00:07:05,920 --> 00:07:08,850
在您的 HTML 代码中，使用这个 kebab case

147
00:07:08,850 --> 00:07:11,060
用于组件中的道具。

148
00:07:11,060 --> 00:07:13,870
当您定义道具时，此组件会收到，

149
00:07:13,870 --> 00:07:15,603
改用骆驼案。

150
00:07:16,730 --> 00:07:18,690
但更重要的外卖，

151
00:07:18,690 --> 00:07:22,900
除了那个符号，它是如何工作的。

152
00:07:22,900 --> 00:07:24,960
现在我们让 Vue 知道

153
00:07:24,960 --> 00:07:29,150
我们的朋友联系人组件有三个道具，

154
00:07:29,150 --> 00:07:30,940
它想要接收。

155
00:07:30,940 --> 00:07:33,330
所以三个自定义属性，

156
00:07:33,330 --> 00:07:37,090
可以在使用该组件时设置

157
00:07:37,090 --> 00:07:40,313
作为一个 HTML 元素，就像我们在这里做的一样。

158
00:07:41,700 --> 00:07:44,310
现在，在那个组件内部，

159
00:07:44,310 --> 00:07:45,950
在组件文件中，

160
00:07:45,950 --> 00:07:48,560
我们可以使用这三个道具。

161
00:07:48,560 --> 00:07:50,920
正如我刚才解释的，我们可以与他们合作

162
00:07:50,920 --> 00:07:53,750
就像我们可以使用数据属性一样。

163
00:07:53,750 --> 00:07:56,260
所以在我们的 JavaScript 代码中，

164
00:07:56,260 --> 00:08:01,010
我们可以使用它来访问不同的道具，

165
00:08:01,010 --> 00:08:03,150
或者，当然，在我们的模板中，

166
00:08:03,150 --> 00:08:04,850
我们也可以使用一些。

167
00:08:04,850 --> 00:08:06,930
现在我们可以在这里说，

168
00:08:06,930 --> 00:08:10,100
我们想输出名字，只是名字，

169
00:08:10,100 --> 00:08:15,040
不是 props.name 或 this.name，而只是名称。

170
00:08:15,040 --> 00:08:18,440
就像我们使用的细节在这里可见，

171
00:08:18,440 --> 00:08:20,060
这是一个数据属性，

172
00:08:20,060 --> 00:08:23,020
我们以完全相同的方式使用道具。

173
00:08:23,020 --> 00:08:25,340
因此，作为旁注，

174
00:08:25,340 --> 00:08:26,670
你当然应该确保

175
00:08:26,670 --> 00:08:29,120
你在那里没有任何名字冲突。

176
00:08:29,120 --> 00:08:31,200
如果你将某物定义为道具，

177
00:08:31,200 --> 00:08:33,760
你不应该使用完全相同的名字

178
00:08:33,760 --> 00:08:37,000
在您的数据属性或计算属性中。

179
00:08:37,000 --> 00:08:38,232
这只是一个旁注。

180
00:08:39,830 --> 00:08:41,730
但现在我们可以在这里使用名称。

181
00:08:41,730 --> 00:08:46,030
在这里，我们可以使用电话号码，

182
00:08:46,030 --> 00:08:51,030
在这里我们可以使用电子邮件地址，就像这样。

183
00:08:52,690 --> 00:08:54,85​​0
如果我们这样做并保存一切，

184
00:08:54,85​​0 --> 00:08:57,830
现在我们看到了两次组件，

185
00:08:57,830 --> 00:09:01,550
但现在每个组件都可以独立工作

186
00:09:01,550 --> 00:09:04,750
并且有自己的数据。

187
00:09:04,750 --> 00:09:06,680
这就是这里令人惊奇的部分，

188
00:09:06,680 --> 00:09:08,070
这是令人惊奇的事情。

189
00:09:08,070 --> 00:09:09,640
现在希望向您展示

190
00:09:09,640 --> 00:09:13,410
为什么组件在 Vue 中是一个很棒的概念

191
00:09:13,410 --> 00:09:15,800
在一般的编程中。

192
00:09:15,800 --> 00:09:18,710
现在我们可以定义标记

193
00:09:18,710 --> 00:09:21,960
以及我们组件的逻辑一次，

194
00:09:21,960 --> 00:09:25,070
然后根据需要经常使用它

195
00:09:25,070 --> 00:09:26,980
有不同类型的数据

196
00:09:26,980 --> 00:09:28,810
在我们的其他组件中，

197
00:09:28,810 --> 00:09:31,493
或者在我们的主应用程序中，就像我们在这里做的那样。

198
00:09:32,980 --> 00:09:35,650
我们构建了自己的 HTML 元素

199
00:09:35,650 --> 00:09:38,333
有自己的标记和自己的逻辑。

200
00:09:39,840 --> 00:09:41,680
我们让它可配置

201
00:09:41,680 --> 00:09:43,900
确保相同的元素

202
00:09:43,900 --> 00:09:47,770
可以多次使用不同的数据。

203
00:09:47,770 --> 00:09:50,860
所以道具是一个核心概念，

204
00:09:50,860 --> 00:09:52,950
我们会一直使用它

205
00:09:52,950 --> 00:09:54,450
贯穿整个课程。

206
00:09:54,450 --> 00:09:56,370
这是核心概念

207
00:09:56,370 --> 00:09:59,230
使组件真正有用

208
00:09:59,230 --> 00:10:01,083
而且真的很强大。