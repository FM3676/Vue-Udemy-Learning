1
00:00:02,460 --> 00:00:06,010
那么我们可以为自定义事件使用提供注入吗？

2
00:00:06,010 --> 00:00:08,050
答案是肯定的，

3
00:00:08,050 --> 00:00:11,800
但是通过稍微不同的实现。

4
00:00:11,800 --> 00:00:14,850
我们没有类似的事件机制，

5
00:00:14,850 --> 00:00:19,630
但是我们可以以不同的方式看待这个事件。

6
00:00:19,630 --> 00:00:22,720
最终，当发出自定义事件时，

7
00:00:22,720 --> 00:00:25,630
我们在某个时候连接一个方法

8
00:00:25,630 --> 00:00:29,030
在这种情况下在App dot Vue中，应该触发

9
00:00:29,030 --> 00:00:30,173
在这个事件上。

10
00:00:31,720 --> 00:00:35,640
嗯，当然，我们也可以通过这样的方法

11
00:00:35,640 --> 00:00:40,480
将道具向下传递到应该调用它的组件。

12
00:00:40,480 --> 00:00:45,430
所以我们可以在这里删除这个 SelectTopic 自定义事件

13
00:00:45,430 --> 00:00:48,490
在 App 点视图中的知识库上。

14
00:00:48,490 --> 00:00:51,860
然后我们可以去知识库

15
00:00:51,860 --> 00:00:55,290
因此也将其删除

16
00:00:55,290 --> 00:00:59,793
和删除的是发出选项和知识网格中的相同。

17
00:01:00,640 --> 00:01:04,117
在 KnowledgeElement 上删除此侦听器

18
00:01:04,117 --> 00:01:06,653
并删除此发出选项。

19
00:01:07,590 --> 00:01:11,200
在我们发出这个的知识元素中

20
00:01:11,200 --> 00:01:16,040
也没有在这里发出，而是做其他事情。

21
00:01:16,040 --> 00:01:19,850
相反，我们可以期望得到这个函数

22
00:01:19,850 --> 00:01:23,430
当按钮作为道具被按下时应该调用它，

23
00:01:23,430 --> 00:01:27,400
或者在这种情况下，作为注入值。

24
00:01:27,400 --> 00:01:31,120
所以我们可以在这里添加注入，然后简单地期待

25
00:01:31,120 --> 00:01:35,177
我们选择的任何键 我们选择的任何名称，例如，

26
00:01:35,177 --> 00:01:36,177
选择主题，

27
00:01:37,730 --> 00:01:39,250
但这个名字由你决定，

28
00:01:39,250 --> 00:01:42,423
然后在此处将其绑定到单击。

29
00:01:43,630 --> 00:01:46,580
所以我希望选择主题，

30
00:01:46,580 --> 00:01:50,300
我在这里注入的值是一个函数

31
00:01:50,300 --> 00:01:51,133
到底。

32
00:01:51,133 --> 00:01:54,810
一个函数，然后在单击发生时执行该函数。

33
00:01:54,810 --> 00:01:56,282
所以我在这里指向一个函数

34
00:01:56,282 --> 00:01:59,450
我想把这个函数作为一个值

35
00:01:59,450 --> 00:02:01,863
为此提供注入机制。

36
00:02:03,430 --> 00:02:06,950
现在注入它还不够，我们还需要提供它。

37
00:02:06,950 --> 00:02:09,539
所以我们可以去App点视图。

38
00:02:09,539 --> 00:02:12,280
我们现在需要提供它。

39
00:02:12,280 --> 00:02:15,430
现在我们得到了应该使用的函数

40
00:02:15,430 --> 00:02:18,170
用于激活主题。

41
00:02:18,170 --> 00:02:21,290
这就是我们的 ActivateTopic 方法。

42
00:02:21,290 --> 00:02:25,730
所以我们可以提供这个 SelectTopic 键，

43
00:02:25,730 --> 00:02:27,720
因为这是我在听的关键

44
00:02:27,720 --> 00:02:31,100
在知识元素中。这就是我要注入那里的钥匙，

45
00:02:31,100 --> 00:02:33,120
所以这是我要提供的关键

46
00:02:33,120 --> 00:02:37,580
它的价值就是这个activateTopic。

47
00:02:37,580 --> 00:02:41,620
所以我指的是这种方法。我不在这里执行它。

48
00:02:41,620 --> 00:02:44,270
我只是指着它让你知道，

49
00:02:44,270 --> 00:02:48,862
哎，这里那个方法，ActivateTopic，就是那个方法

50
00:02:48,862 --> 00:02:52,200
因此您应该提供的功能

51
00:02:52,200 --> 00:02:54,823
作为 SelectTopic 的值。

52
00:02:56,180 --> 00:02:58,730
然后当 SelectTopic 被注入

53
00:02:58,730 --> 00:03:00,720
在 KnowledgeElement 中，

54
00:03:00,720 --> 00:03:02,963
我们可以在这个组件中执行它。

55
00:03:03,970 --> 00:03:07,330
现在请记住，activateTopic 想知道

56
00:03:07,330 --> 00:03:11,860
我们选择了哪个 ID。因此，在 KnowledgeElement

57
00:03:11,860 --> 00:03:14,080
我指的是selectTopic

58
00:03:14,080 --> 00:03:17,350
单击它时作为要执行的功能。

59
00:03:17,350 --> 00:03:20,487
我应该确保这个ID，

60
00:03:20,487 --> 00:03:24,710
提供了我们作为道具方便地获得的东西。

61
00:03:24,710 --> 00:03:27,070
所以我现在称它为自己告诉视图

62
00:03:27,070 --> 00:03:30,420
这就是最终应该如何调用函数的方式，

63
00:03:30,420 --> 00:03:34,460
并且这个ID应该提供给我们得到的函数

64
00:03:34,460 --> 00:03:35,660
在这个 selectTopic 键上。

65
00:03:37,980 --> 00:03:42,580
如果我们现在保存并重新加载，这就是我们的应用程序，

66
00:03:42,580--> 00:03:46,600
我们仍然可以挑选不同的主题。

67
00:03:46,600 --> 00:03:49,530
所以现在这在没有传递道具的情况下工作，

68
00:03:49,530 --> 00:03:52,790
通过多个组件且不发射

69
00:03:52,790 --> 00:03:55,670
我们通过多个组件自定义事件。

70
00:03:55,670 --> 00:03:57,763
这只是一种不同的方法。