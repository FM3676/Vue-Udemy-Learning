1
00:00:02,110 --> 00:00:05,060
所以这就是暂时的道具。

2
00:00:05,060 --> 00:00:08,397
我们使用 props 从 app.vue 文件中传递数据

3
00:00:08,397 --> 00:00:11,400
到我们的 FriendContact 组件中。

4
00:00:11,400 --> 00:00:14,253
现在来自组件的通信呢

5
00:00:14,253 --> 00:00:15,880
给父母？

6
00:00:15,880 --> 00:00:18,570
一个很好的例子是切换收藏夹。

7
00:00:18,570 --> 00:00:21,862
目前，这是一种假的东西。

8
00:00:21,862 --> 00:00:25,890
对于每个生成的朋友，我都将其设置为 true。

9
00:00:25,890 --> 00:00:29,700
而且我们并没有真正在朋友特定的层面上管理它。

10
00:00:29,700 --> 00:00:32,891
是的，我可以为个别朋友切换它，

11
00:00:32,891 --> 00:00:36,030
但这只会在组件内部发生变化。

12
00:00:36,030 --> 00:00:39,027
实际上，就像名字，电话号码，

13
00:00:39,027 --> 00:00:40,910
电子邮件地址。

14
00:00:40,910 --> 00:00:44,670
is-favorite 不应该像这样设置为 true。

15
00:00:44,670 --> 00:00:47,930
相反，我们可能应该有一个 isFavorite 属性

16
00:00:47,930 --> 00:00:52,066
在我们的朋友对象上，以便真正存储此数据

17
00:00:52,066 --> 00:00:54,930
在输入数据上，剩下的在哪里

18
00:00:54,930 --> 00:00:56,763
我们的朋友数据也是如此。

19
00:00:57,890 --> 00:01:01,733
所以我们可以在这里和这里都有 isFavorite。

20
00:01:03,770 --> 00:01:06,110
这就是我们通常想要做的

21
00:01:06,110 --> 00:01:07,310
因为信息，

22
00:01:07,310 --> 00:01:09,667
朋友是否是我们的最爱

23
00:01:09,667 --> 00:01:13,220
和朋友一样重要

24
00:01:13,220 --> 00:01:16,760
作为其电话号码和电子邮件地址。

25
00:01:16,760 --> 00:01:19,300
这不仅仅是我们想要在这里改变的东西

26
00:01:19,300 --> 00:01:20,700
组件内部。

27
00:01:20,700 --> 00:01:23,690
它应该是我们核心好友数据的一部分，

28
00:01:23,690 --> 00:01:27,610
这可能来自数据库或类似的东西。

29
00:01:27,610 --> 00:01:30,200
现在我们在这里管理了 isFavorite，

30
00:01:30,200 --> 00:01:33,308
当然我们可以将它传递给我们的组件，

31
00:01:33,308 --> 00:01:38,283
但同样，它只是作为初始道具值，

32
00:01:38,283 --> 00:01:41,440
这意味着如果我在这里点击切换收藏夹，

33
00:01:41,440 --> 00:01:44,970
在 FriendContact 组件内部更改它，

34
00:01:44,970 --> 00:01:48,083
但不在我们的核心朋友数据中。

35
00:01:49,210 --> 00:01:51,449
当然，这只是一些虚拟数据，

36
00:01:51,449 --> 00:01:54,100
但如果这将来自数据库，

37
00:01:54,100 --> 00:01:56,590
我们可能想把它寄回去

38
00:01:56,590 --> 00:01:58,520
也到那个数据库。

39
00:01:58,520 --> 00:02:02,620
因此，仅在该组件内部更改它是不够的。

40
00:02:02,620 --> 00:02:06,095
我们还想在 app.vue 文件中更改它

41
00:02:06,095 --> 00:02:09,233
在我们的朋友数据中，在我们的朋友数组中。

42
00:02:10,250 --> 00:02:12,970
因此，我们现在需要沟通

43
00:02:12,970 --> 00:02:16,890
从 FriendContact 组件返回到 app.vue。

44
00:02:16,890 --> 00:02:19,542
所以基本上与道具相反。

45
00:02:19,542 --> 00:02:23,030
道具允许我们从 app.vue 传递数据

46
00:02:23,030 --> 00:02:24,860
给 FriendContact。

47
00:02:24,860 --> 00:02:29,490
现在我们需要一种让 FriendContact 告诉 app.vue 的方法

48
00:02:29,490 --> 00:02:32,040
最喜欢的状态改变了

49
00:02:32,040 --> 00:02:35,340
那怎么能行呢？

50
00:02:35,340 --> 00:02:37,013
我们如何实施呢？

51
00:02:38,450 --> 00:02:43,120
那么，它对常规 HTML 元素是如何工作的呢？

52
00:02:43,120 --> 00:02:44,810
如果我们点击一​​个按钮，

53
00:02:44,810 --> 00:02:47,600
按钮到底想让我们知道

54
00:02:47,600 --> 00:02:49,260
它被点击了。

55
00:02:49,260 --> 00:02:54,030
所以按钮会发出一个我们可以监听的点击事件。

56
00:02:54,030 --> 00:02:57,180
Vue 中的自定义组件也是如此。

57
00:02:57,180 --> 00:03:01,284
如果一个组件应该与其父级对话并让父级

58
00:03:01,284 --> 00:03:03,209
知道发生了什么事，

59
00:03:03,209 --> 00:03:05,878
该组件应该发出一个事件

60
00:03:05,878 --> 00:03:08,780
父母可以听的。

61
00:03:08,780 --> 00:03:12,262
事实上，您可以发出自己的自定义事件

62
00:03:12,262 --> 00:03:15,060
在你的 Vue 组件内部。

63
00:03:15,060 --> 00:03:19,275
例如这里，当触发 toggleFavorite 时。

64
00:03:19,275 --> 00:03:22,032
在这种方法中，而不是改变

65
00:03:22,032 --> 00:03:26,797
这个内部的friendIsFavorite 数据属性，

66
00:03:26,797 --> 00:03:31,150
我们可以用这个d 现在是一个内置方法，

67
00:03:31,150 --> 00:03:33,580
它与 Vue 一起提供

68
00:03:33,580 --> 00:03:36,240
因此它以美元符号开头，

69
00:03:36,240 --> 00:03:39,808
就像 refs 在幕后模块中所做的那样。

70
00:03:39,808 --> 00:03:43,683
但现在不是 refs，而是 emit，美元符号 emit。

71
00:03:44,690 --> 00:03:49,280
这是一个内置方法，您可以从内部调用

72
00:03:49,280 --> 00:03:52,980
this 关键字下的 Vue 组件。

73
00:03:52,980 --> 00:03:56,910
这允许您发出自己的自定义事件

74
00:03:56,910 --> 00:03:58,580
然后你可以听

75
00:03:58,580 --> 00:04:00,763
从父组件内部。

76
00:04:02,340 --> 00:04:05,490
现在 emit 至少需要一个参数，

77
00:04:05,490 --> 00:04:09,130
这就是自定义事件的名称。

78
00:04:09,130​​ --> 00:04:11,780
在这里，您可以随意命名此事件。

79
00:04:11,780 --> 00:04:12,620
这是你的活动。

80
00:04:12,620 --> 00:04:14,270
所以你可以使用任何你想要的名字。

81
00:04:15,400 --> 00:04:17,839
我会使用toggle-favorite。

82
00:04:17,839 --> 00:04:20,791
这里的约定是始终使用烤肉串

83
00:04:20,791 --> 00:04:22,993
无论您在哪里使用它。

84
00:04:23,963 --> 00:04:27,190
所以这与组件中的道具不同

85
00:04:27,190 --> 00:04:30,031
收到它，你用骆驼案

86
00:04:30,031 --> 00:04:34,410
并且您只使用 kebab case 来传递值。

87
00:04:34,410 --> 00:04:37,700
对于事件，它总是烤肉串。

88
00:04:37,700 --> 00:04:40,760
所以现在我们发出这个切换最喜欢的事件。

89
00:04:40,760 --> 00:04:44,133
我们自己的组件正在发出这个自定义事件。

90
00:04:45,440 --> 00:04:47,600
那你怎么办？

91
00:04:47,600 --> 00:04:50,170
好吧，你听它就像你可以听一样

92
00:04:50,170 --> 00:04:51,840
点击按钮。

93
00:04:51,840 --> 00:04:55,930
在我们使用自己的组件的 app.vue 文件中，

94
00:04:55,930 --> 00:05:00,800
您可以使用 v-on 或 @ 速记来收听。

95
00:05:00,800 --> 00:05:04,577
在这里我们可以收听toggle-favorite

96
00:05:04,577 --> 00:05:08,877
并将 this 绑定到任何应该执行的 JavaScript 代码

97
00:05:08,877 --> 00:05:11,203
发出此事件时。

98
00:05:13,300 --> 00:05:15,217
在这里，我们现在可以添加方法

99
00:05:15,217 --> 00:05:18,190
到我们的 Vue 应用配置对象，

100
00:05:18,190 --> 00:05:23,190
并添加一个名为 toggleFavoriteStatus 的方法，例如。

101
00:05:25,490 --> 00:05:30,490
然后在此处将此方法绑定到我们最喜欢的切换事件。

102
00:05:32,440 --> 00:05:35,390
如果我们保存它，那应该会起作用。

103
00:05:35,390 --> 00:05:37,500
当然，目前，这无济于事，

104
00:05:37,500 --> 00:05:40,130
但我们也没有收到错误。

105
00:05:40,130 --> 00:05:42,040
我们可以说它有效

106
00:05:42,040 --> 00:05:44,750
如果我们在这里添加警报

107
00:05:44,750 --> 00:05:47,560
在那个切换收藏状态方法中。

108
00:05:47,560 --> 00:05:52,110
这行得通，当然不是最终代码，

109
00:05:52,110 --> 00:05:53,233
但一个很好的测试。

110
00:05:54,380 --> 00:05:57,893
现在您会看到，如果我单击切换收藏夹，我会收到此警报。

111
00:05:58,830 --> 00:06:01,140
这就是我们可以回复的方式

112
00:06:01,140 --> 00:06:03,545
从组件到其父组件。

113
00:06:03,545 --> 00:06:05,283
但是，我们当然还没有完成。

114
00:06:06,190 --> 00:06:08,540
我们现在发出一个自定义事件，

115
00:06:08,540 --> 00:06:12,150
但这个事件可能应该携带一些数据

116
00:06:12,150 --> 00:06:15,850
这样我们也让家长，

117
00:06:15,850 --> 00:06:20,420
app.vue 文件知道两个联系人中的哪一个

118
00:06:20,420 --> 00:06:22,740
改变了喜欢的状态。

119
00:06:22,740 --> 00:06:27,253
因为我们有两个，在这里我们很难说清楚。

120
00:06:28,250 --> 00:06:31,148
好吧，在 FriendContact.vue 中，当我们发出

121
00:06:31,148 --> 00:06:33,980
我们还可以传递第二个参数。

122
00:06:33,980 --> 00:06:37,160
实际上，您可以传递任意数量的参数。

123
00:06:37,160 --> 00:06:41,170
每一个额外的论点都只是数据

124
00:06:41,170 --> 00:06:43,673
您与您的活动一起通过。

125
00:06:44,900 --> 00:06:46,820
所以例如这里，

126
00:06:46,820 --> 00:06:50,266
我们可以期待我们得到一个额外的道具，

127
00:06:50,266 --> 00:06:52,410
朋友的ID，

128
00:06:52,410 --> 00:06:56,463
这是字符串类型，应该是必需的。

129
00:06:57,800 --> 00:07:00,853
所以我添加了这个额外的道具定义。

130
00:07:01,860 --> 00:07:06,860
在 app.vue 中，我们确实有 ID，因此我们可以轻松地将它们传入

131
00:07:07,560 --> 00:07:11,480
只需绑定新定义的 ID 道具

132
00:07:11,480 --> 00:07:14,223
并像这样传递friends.id。

133
00:07:15,760 --> 00:07:19,070
现在使用提供给 FriendContact 的 ID

134
00:07:19,070 --> 00:07:24,070
在 ID 属性上，我们可以使用自定义事件在此处发出它。

135
00:07:24,920 --> 00:07:26,801
这个想法现在可用

136
00:07:26,801 --> 00:07:30,993
因为我刚刚在这个组件中添加了一个名为 ID 的道具。

137
00:07:32,030 --> 00:07:35,350
现在触发最喜欢的事件，当它发出时，

138
00:07:35,350 --> 00:07:38,290
将其作为额外数据携带。

139
00:07:38,290 --> 00:07:41,439
然后将作为第一个参数提供

140
00:07:41,439 --> 00:07:44,983
到侦听此事件的方法。

141
00:07:46,480 --> 00:07:50,224
所以在 app.vue 中，我们指向 toggleFavoriteStatus

142
00:07:50,224 --> 00:07:52,940
我们自己的事件的方法

143
00:07:52,940 --> 00:07:55,163
和 toggleFavoriteStatus 方法

144
00:07:55,163 --> 00:07:59,300
因此现在将收到此朋友 ID。

145
00:07:59,300 --> 00:08:01,790
您可以在此处随意命名此参数，

146
00:08:01,790 --> 00:08:06,492
但你会得到我们在这里提供的第二个论点

147
00:08:06,492 --> 00:08:08,950
当我们发出自定义事件时。

148
00:08:08,950 --> 00:08:13,060
此 ID 在这里被接受为第一个参数

149
00:08:13,060 --> 00:08:15,143
在切换收藏状态中。

150
00:08:17,040 --> 00:08:20,900
现在这可以帮助我们识别朋友

151
00:08:20,900 --> 00:08:24,470
我们要更改收藏状态的地方。

152
00:08:24,470 --> 00:08:28,032
所以现在我们可以联系我们的朋友数组

153
00:08:28,032 --> 00:08:30,500
并使用内置的 find 方法，

154
00:08:30,500 --> 00:08:33,799
存在于 JavaScript 中寻找朋友

155
00:08:34,659 --> 00:08:38,059
其中好友 ID 等于好友 ID

156
00:08:38,059 --> 00:08:39,549
我们到了。

157
00:08:39,549 --> 00:08:42,559
这是用于查找的默认 JavaScript 代码

158
00:08:42,559 --> 00:08:45,230
朋友数组中的那个朋友对象，

159
00:08:45,230 --> 00:08:48,310
其中 ID 属性具有相同的值

160
00:08:48,310 --> 00:08:50,803
作为我们这里的朋友 ID 参数。

161
00:08:53,790 --> 00:08:58,790
这就是我们可以命名的identifiedFriend。

162
00:08:59,780 --> 00:09:01,230
在那个确定的朋友身上，

163
00:09:02,290 --> 00:09:06,123
我们现在可以将 isFavorite 设置为当前不是的。

164
00:09:09,010 --> 00:09:11,620
这将改变这些数据。

165
00:09:11,620 --> 00:09:15,260
最酷的是当数据发生变化时，

166
00:09:15,260 --> 00:09:17,872
Vue 会检测到这个变化

167
00:09:17,872 --> 00:09:21,260
然后它会自动通过更新的

168
00:09:21,260 --> 00:09:26,260
收藏状态返回组件并更新 DUI。

169
00:09:26,450 --> 00:09:29,520
所以现在我们从来没有改变过最喜欢的状态

170
00:09:29,520 --> 00:09:32,280
在 FriendContact 组件内部，

171
00:09:32,280 --> 00:09:35,400
但我们总是在 app.vue 文件中更改它。

172
00:09:35,400 --> 00:09:38,550
而且，您会看到一切正常。

173
00:09:38,550 --> 00:09:40,670
我们需要为此做出的唯一改变

174
00:09:40,670 --> 00:09:45,620
又回到 FriendContact，我们现在摆脱这个

175
00:09:45,620 --> 00:09:49,663
我们之前在那里添加的friendIsFavorite 数据属性。

176
00:09:50,880 --> 00:09:53,920
相反，我们使用我们的 isFavorite 道具，

177
00:09:53,920 --> 00:09:56,400
我们正在得到什么，我们现在正在改变什么

178
00:09:56,400 --> 00:09:58,093
最终在 app.vue 中。

179
00:09:58,093 --> 00:10:01,110
我们在模板中使用了这个道具

180
00:10:02,210 --> 00:10:03,990
因为现在可以了。

181
00:10:03,990 --> 00:10:07,076
如果我们保存它，你会看到我可以切换它

182
00:10:07,076 --> 00:10:09,710
并且 Vue 检测到所有的变化

183
00:10:09,710 --> 00:10:11,910
并正确更新所有内容。

184
00:10:11,910 --> 00:10:15,830
现在我们正在使用这个单向数据流

185
00:10:15,830 --> 00:10:17,610
在两个方向。

186
00:10:17,610 --> 00:10:21,460
我们使用它从 app.vue 传递道具数据

187
00:10:21,460 --> 00:10:22,743
进入我们的组件，

188
00:10:23,770 --> 00:10:26,070
但我们也反过来使用它

189
00:10:26,070 --> 00:10:29,950
在我们自己的组件内发出自定义事件

190
00:10:29,950 --> 00:10:32,020
使用美元符号发出方法

191
00:10:32,020 --> 00:10:35,518
并在 app.vue 中监听这个自定义事件

192
00:10:35,518 --> 00:10:39,700
然后对 app.vue 中的数据进行更改，

193
00:10:39,700 --> 00:10:42,210
我们存储在 data 属性中

194
00:10:42,210 --> 00:10:47,210
在这里我们的主应用程序，然后反馈更新的数据

195
00:10:48,380 --> 00:10:52,350
进入我们的组件，然后 Vue 会看到一些东西

196
00:10:52,350 --> 00:10:55,890
更改，然后 Vue 更新 UI。

197
00:10:55,890 --> 00:10:58,820
这就是你与 co 合作的方式组件。

198
00:10:58,820 --> 00:11:00,260
您可以发出自己的事件

199
00:11:00,260 --> 00:11:01,760
您可以设置自己的数据。

200
00:11:02,650 --> 00:11:04,900
它实际上与工作非常相似

201
00:11:04,900 --> 00:11:06,977
使用默认 HTML 元素，

202
00:11:06,977 --> 00:11:10,830
只是你现在控制代码的区别

203
00:11:10,830 --> 00:11:13,693
在 HTML 元素的后面，可以这么说。