1
00:00:01,644 --> 00:00:03,350
现在当然，

2
00:00:03,350 --> 00:00:06,720
props 不能只设置为字符串值。

3
00:00:06,720 --> 00:00:10,140
当然，就像其他 HTML 元素一样，

4
00:00:10,140 --> 00:00:13,340
您可以将它们绑定到动态值。

5
00:00:13,340 --> 00:00:17,840
例如，目前最喜欢使用 1 或 0。

6
00:00:17,840 --> 00:00:20,420
现在，由于我们正好有两个值，

7
00:00:20,420 --> 00:00:25,060
更有意义的是，我们在这里需要一个布尔值。

8
00:00:25,060 --> 00:00:26,220
为了让我们清楚，

9
00:00:26,220 --> 00:00:28,850
这应该是布尔类型。

10
00:00:28,850 --> 00:00:31,350
然后我们也可以摆脱那个验证器，

11
00:00:31,350 --> 00:00:34,520
因为布尔值只能是真或假。

12
00:00:34,520 --> 00:00:36,710
没有其他值。

13
00:00:36,710 --> 00:00:39,270
那么这里的默认值可能是假的。

14
00:00:39,270 --> 00:00:41,603
所以默认情况下最喜欢的是假的。

15
00:00:42,870 --> 00:00:45,000
但现在传递虚假，

16
00:00:45,000 --> 00:00:49,810
我们不能在这里将其设置为 true 或 false。

17
00:00:49,810 --> 00:00:51,240
这不是它的工作方式，

18
00:00:51,240 --> 00:00:54,690
因为这将永远是一些文本。

19
00:00:54,690 --> 00:00:58,300
而不是使用真值类型，

20
00:00:58,300 --> 00:01:01,780
我们需要用 v-bind 绑定它，

21
00:01:01,780 --> 00:01:03,710
这是我们可以做的。

22
00:01:03,710 --> 00:01:06,100
我们可以绑定自己的props，

23
00:01:06,100 --> 00:01:10,490
就像我们可以绑定任何其他 HTML 属性一样。

24
00:01:10,490 --> 00:01:14,480
如果我们有一个需要 JavaScript 值的道具，

25
00:01:14,480 --> 00:01:18,150
除了字符串，那么我们需要使用 v-bind，

26
00:01:18,150 --> 00:01:22,260
或者当然是速记，传递那个值，

27
00:01:22,260 --> 00:01:24,670
当然，您仍然可以执行

28
00:01:24,670 --> 00:01:26,830
这里的任何 JavaScript 表达式，

29
00:01:26,830 --> 00:01:29,290
调用一个方法或任何你想做的，

30
00:01:29,290 --> 00:01:33,083
但您也可以使用它来传递非字符串值。

31
00:01:35,350 --> 00:01:38,000
但是能够动态绑定道具，

32
00:01:38,000 --> 00:01:39,900
不仅对此有用。

33
00:01:39,900 --> 00:01:43,120
传递非字符串值不仅有用，

34
00:01:43,120 --> 00:01:45,160
即使这很有用。

35
00:01:45,160 --> 00:01:47,880
但制作这些组件也很有用，

36
00:01:47,880 --> 00:01:49,810
更有活力一点。

37
00:01:49,810 --> 00:01:52,550
也许你已经忘记了，

38
00:01:52,550 --> 00:01:55,780
但我们在 NRA 有我们的朋友，

39
00:01:55,780 --> 00:01:59,160
在我们的 App.vue 文件中。

40
00:01:59,160 --> 00:02:03,173
现在如果我们可以再次使用 v-for 不是很好吗？

41
00:02:04,530 --> 00:02:06,810
但现在重复我们自己的组件，

42
00:02:06,810 --> 00:02:10,770
然后为每个循环迭代传递不同的数据？

43
00:02:10,770 --> 00:02:12,950
好吧，事实证明你可以做到这一点。

44
00:02:12,950 --> 00:02:16,440
您可以使用 v-for，顺便说一下，也可以使用 v-if，

45
00:02:16,440 --> 00:02:17,960
在您自己的组件上，

46
00:02:17,960 --> 00:02:21,963
就像您可以在默认 HTML 元素上使用它一样。

47
00:02:23,000 --> 00:02:27,080
所以在这里，我可以像这样循环我的朋友，

48
00:02:27,080 --> 00:02:29,600
现在只有一个重要的规则。

49
00:02:29,600 --> 00:02:32,780
您始终需要在此处添加密钥。

50
00:02:32,780 --> 00:02:34,740
我之前讲过钥匙。

51
00:02:34,740 --> 00:02:38,280
当您处理 v-for 时，键很重要。

52
00:02:38,280 --> 00:02:41,000
当您在自定义组件上使用 v-for 时，

53
00:02:41,000 --> 00:02:43,000
添加密钥是强制性的。

54
00:02:43,000 --> 00:02:45,720
因此，请确保在此处添加 key 道具。

55
00:02:45,720 --> 00:02:48,410
您无需在组件中指定它。

56
00:02:48,410 --> 00:02:50,970
Vue 自动知道如何处理它。

57
00:02:50,970 --> 00:02:54,560
确保在使用 v-for 时使用它，

58
00:02:54,560 --> 00:02:56,250
在自定义组件上。

59
00:02:56,250 --> 00:02:59,090
然后在这里我们可以动态绑定key，

60
00:02:59,090 --> 00:03:02,070
以friend.id 为例。

61
00:03:02,070 --> 00:03:04,510
现在我们不能只是动态地找到密钥，

62
00:03:04,510 --> 00:03:07,360
还有所有其他字段，例如名称。

63
00:03:07,360 --> 00:03:11,090
在这里，我们可以将其设置为等于friend.name。

64
00:03:11,090 --> 00:03:15,320
电话号码，我们可以设置这个等于friend.phone，

65
00:03:15,320 --> 00:03:17,740
因为那是我们这里的领域，

66
00:03:17,740 --> 00:03:20,520
我们存储虚拟电话号码的地方。

67
00:03:20,520 --> 00:03:23,840
当然，同样的，虽然对于电子邮件地址，

68
00:03:23,840 --> 00:03:28,840
将其动态绑定到friend.email.

69
00:03:29,890 --> 00:03:32,880
就目前而言，我将离开是最喜欢的，

70
00:03:32,880 --> 00:03:34,993
我们稍后会再次处理。

71
00:03:37,040 --> 00:03:39,020
现在我们可以删除第二种用法

72
00:03:39,020 --> 00:03:42,240
朋友联系，因为现在 v-for，

73
00:03:42,240 --> 00:03:46,470
将在此页面上创建多个朋友联系元素。

74
00:03:46,470 --> 00:03:48,803
一份送给法国的每一位朋友。

75
00:03:50,180 --> 00:03:53,300
我们正在动态绑定所有道具值，

76
00:03:53,300 --> 00:03:57,540
传递我们为每个朋友提供的不同数据。

77
00:03:57,540 --> 00:04:01,110
这当然也意味着，我们现在可以摆脱，

78
00:04:01,110 --> 00:04:02,740
那个假朋友，

79
00:04:02,740 --> 00:04:05,290
我们在朋友contact.view 中定义。

80
00:04:05,290 --> 00:04:08,530
我们不再需要它了，因为我们已经收到了

81
00:04:08,530 --> 00:04:11,880
我们需要的所有来自外部的道具数据。

82
00:04:11,880 --> 00:04:14,880
我们还可以更改切换收藏夹。

83
00:04:14,880 --> 00:04:18,720
因为 is favorite 现在默认是一个布尔值，

84
00:04:18,720 --> 00:04:22,790
我们不再应该检查它是一还是零，

85
00:04:22,790 --> 00:04:26,060
我们可以简化这个并设置这个朋友是最喜欢的，

86
00:04:26,060 --> 00:04:29,200
等于它目前不等于，像这样切换它，

87
00:04:29,200 --> 00:04:31,360
如果它是假的，则将其设置为真，

88
00:04:31,360 --> 00:04:33,530
如果为真，则为假。

89
00:04:33,530 --> 00:04:36,660
有了这一切，如果我们现在回去，

90
00:04:36,660 --> 00:04:39,500
你现在仍然可以看到不同的数据，

91
00:04:39,500 --> 00:04:43,423
但现在有两个组件，它们是用 v-for 创建的。

92
00:04:44,370 --> 00:04:47,260
现在，切换收藏夹在这里不起作用，

93
00:04:47,260 --> 00:04:50,010
让我们看看为什么会这样。

94
00:04:50,010 --> 00:04:52,470
是的，因为这个检查当然是错误的。

95
00:04:52,470 --> 00:04:54,210
由于它是一个布尔值，我们应该检查

96
00:04:54,210 --> 00:04:56,993
如果它是真的还是假的像这样。

97
00:04:57,930 --> 00:04:59,930
所以，现在调整一下。

98
00:04:59,930 --> 00:05:01,990
现在看起来好多了。

99
00:05:01,990 --> 00:05:04,200
现在，两者都是最爱，

100
00:05:04,200 --> 00:05:07,440
因为我设置是最喜欢的为真，

101
00:05:07,440 --> 00:05:10,210
这里一般是朋友联系组件。

102
00:05:10,210 --> 00:05:13,270
因此，对于每次迭代，我们都会创建一个新的朋友联系人，

103
00:05:13,270 --> 00:05:15,960
但它总是将最喜欢的设置为 true。

104
00:05:15,960 --> 00:05:18,483
但这是我们稍后会关注的事情。

105
00:05:19,950 --> 00:05:22,880
这里的关键点是我们可以使用 v-for，

106
00:05:22,880 --> 00:05:25,910
我们可以将这些道具绑定到动态值，

107
00:05:25,910 --> 00:05:30,250
现在，我们得到了一个更加可重用的组件。

108
00:05:30,250 --> 00:05:33,170
希望越来越清晰，

109
00:05:33,170 --> 00:05:35,703
为什么组件如此神奇。