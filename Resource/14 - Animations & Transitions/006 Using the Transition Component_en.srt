1
00:00:01,461 --> 00:00:03,150
So back in code,

2
00:00:03,150 --> 00:00:05,060
we've got this wrapped paragraph

3
00:00:05,060 --> 00:00:08,770
and I mentioned that Vue would add certain utility classes.

4
00:00:08,770 --> 00:00:09,860
Well, it does.

5
00:00:09,860 --> 00:00:13,840
So let's define styles for them in the CSS code.

6
00:00:13,840 --> 00:00:16,059
You could do this anywhere, I'll do it here.

7
00:00:16,059 --> 00:00:20,830
And the default class names Vue will add are v-enter-from,

8
00:00:22,550 --> 00:00:27,550
v-enter-active and v-enter-to.

9
00:00:32,420 --> 00:00:36,230
Vue, by default, will add these three CSS classes

10
00:00:36,230 --> 00:00:38,380
at different times as explained

11
00:00:38,380 --> 00:00:41,500
when the element is first added to the DOM.

12
00:00:41,500 --> 00:00:43,310
So in this case, when the paragraph

13
00:00:43,310 --> 00:00:45,853
is appearing on the DOM for the first time.

14
00:00:46,790 --> 00:00:49,540
Now we can define different class styles here.

15
00:00:49,540 --> 00:00:51,600
We can define different properties.

16
00:00:51,600 --> 00:00:54,250
And we should include at least one transition

17
00:00:54,250 --> 00:00:58,930
or animation so that Vue is able to read the duration time

18
00:00:58,930 --> 00:01:01,260
from these classes because I mentioned

19
00:01:01,260 --> 00:01:03,730
that this would be another key thing it does

20
00:01:03,730 --> 00:01:04,913
behind the scenes.

21
00:01:06,170 --> 00:01:09,430
Now, in v-enter-from, you define your starting state.

22
00:01:09,430 --> 00:01:10,900
And for this paragraph,

23
00:01:10,900 --> 00:01:13,530
that could be that it initially is invisible

24
00:01:13,530 --> 00:01:15,660
by setting opacity to zero.

25
00:01:15,660 --> 00:01:18,420
And maybe that it's moved up a little bit

26
00:01:18,420 --> 00:01:23,420
by setting transform to translateY -30 pixels.

27
00:01:25,040 --> 00:01:29,433
This moves it up a little bit above its real position.

28
00:01:30,970 --> 00:01:33,880
In v-enter-to, we have the end state,

29
00:01:33,880 --> 00:01:36,390
so the final state we wanna have at the end.

30
00:01:36,390 --> 00:01:39,070
And there, we can have an opacity of one

31
00:01:39,070 --> 00:01:42,510
and set transform: translateY to zero

32
00:01:42,510 --> 00:01:43,990
to take the real position

33
00:01:43,990 --> 00:01:46,603
of the element it should have on the page.

34
00:01:48,030 --> 00:01:51,200
And v-enter-active is now the place

35
00:01:51,200 --> 00:01:52,600
where you, for example,

36
00:01:52,600 --> 00:01:55,320
add the transition CSS property

37
00:01:55,320 --> 00:01:59,670
to tell Vue to watch for all CSS properties

38
00:01:59,670 --> 00:02:01,200
that might be animated.

39
00:02:01,200 --> 00:02:03,530
So in this case, opacity and transform,

40
00:02:03,530 --> 00:02:06,390
which are the two properties changing here,

41
00:02:06,390 --> 00:02:08,360
then you define a duration.

42
00:02:08,360 --> 00:02:10,423
That is what Vue will read.

43
00:02:11,300 --> 00:02:13,190
So what Vue will take to find out

44
00:02:13,190 --> 00:02:16,670
how long these classes should be added to the element.

45
00:02:16,670 --> 00:02:18,823
And then your easing function.

46
00:02:20,210 --> 00:02:23,210
And if you do that, and you reload,

47
00:02:23,210 --> 00:02:25,060
you can click Toggle Paragraph

48
00:02:25,060 --> 00:02:29,969
and you have this animation for adding the paragraph.

49
00:02:29,969 --> 00:02:31,873
For removing, we don't have any yet

50
00:02:31,873 --> 00:02:33,706
but for adding, we do.

51
00:02:34,870 --> 00:02:37,070
Well, and I already showed it on the slide.

52
00:02:37,070 --> 00:02:39,903
You have similar classes for removing.

53
00:02:40,750 --> 00:02:45,570
There we have the v-leave-from class.

54
00:02:45,570 --> 00:02:49,330
We have the v-leave-active class

55
00:02:49,330 --> 00:02:53,513
and we have the v-leave-to class.

56
00:02:54,870 --> 00:02:57,028
And it's the same concept as for entering.

57
00:02:57,028 --> 00:02:59,460
We define our starting state,

58
00:02:59,460 --> 00:03:01,360
which for me here is the same state

59
00:03:01,360 --> 00:03:03,410
as the end state for entering

60
00:03:03,410 --> 00:03:05,030
but it doesn't have to be the same.

61
00:03:05,030 --> 00:03:07,410
You can define a totally different state here,

62
00:03:07,410 --> 00:03:10,330
totally different CSS properties as well.

63
00:03:10,330 --> 00:03:11,210
That is fine.

64
00:03:11,210 --> 00:03:14,740
You don't have to use the same CSS properties

65
00:03:14,740 --> 00:03:15,653
as for adding.

66
00:03:16,760 --> 00:03:17,860
But here I'm doing it.

67
00:03:18,910 --> 00:03:21,680
In v-leave-to, I use the same state

68
00:03:21,680 --> 00:03:25,160
as I had for entering in my from state.

69
00:03:25,160 --> 00:03:27,510
Now it's the to state for leaving,

70
00:03:27,510 --> 00:03:30,193
making this invisible and moving it up a bit.

71
00:03:32,200 --> 00:03:34,140
Or actually, let's move it down a bit

72
00:03:34,140 --> 00:03:36,510
by setting this to +30 pixels,

73
00:03:36,510 --> 00:03:38,850
also to emphasize that you don't have

74
00:03:38,850 --> 00:03:41,127
to use the same styles as before.

75
00:03:41,127 --> 00:03:43,510
And for v-leave-active,

76
00:03:43,510 --> 00:03:45,900
I have the same transition set in here

77
00:03:45,900 --> 00:03:48,450
but instead of ease-out, I'll use ease-in

78
00:03:48,450 --> 00:03:50,383
for a different easing function,

79
00:03:51,530 --> 00:03:54,190
which just controls how that duration

80
00:03:54,190 --> 00:03:56,823
is split across the different steps.

81
00:03:58,170 --> 00:04:00,670
And now if you save that and reload,

82
00:04:00,670 --> 00:04:03,550
we have animation for entering

83
00:04:03,550 --> 00:04:06,253
and also for removing like this.

84
00:04:07,420 --> 00:04:10,710
Now, that is how you can use the transition component

85
00:04:10,710 --> 00:04:13,860
to animate the appearance and removal

86
00:04:13,860 --> 00:04:15,890
of HTML elements.

87
00:04:15,890 --> 00:04:19,010
And especially the removal is something

88
00:04:19,010 --> 00:04:21,470
which was harder without transition.

89
00:04:21,470 --> 00:04:22,950
But also for entering,

90
00:04:22,950 --> 00:04:27,540
you gain more flexibility with that transition component,

91
00:04:27,540 --> 00:04:29,730
which you wrap around the element,

92
00:04:29,730 --> 00:04:31,890
which does use v-if or v-show

93
00:04:31,890 --> 00:04:34,180
and which then should be animated.

94
00:04:34,180 --> 00:04:37,220
You don't need it if you're not having this v-if

95
00:04:37,220 --> 00:04:38,730
or v-show case

96
00:04:38,730 --> 00:04:41,010
because if you just have something like the block

97
00:04:41,010 --> 00:04:42,350
in the first example,

98
00:04:42,350 --> 00:04:43,660
in the last lectures,

99
00:04:43,660 --> 00:04:46,880
you can just conditionally add and remove CSS classes

100
00:04:46,880 --> 00:04:48,010
as you learned it.

101
00:04:48,010 --> 00:04:50,590
It's just this added to the DOM

102
00:04:50,590 --> 00:04:52,850
or removed to the DOM case

103
00:04:52,850 --> 00:04:55,000
where you can't do that

104
00:04:55,000 --> 00:04:57,210
because the element is just not there

105
00:04:57,210 --> 00:04:59,933
and that's where transition then helps you.

