1
00:00:02,310 --> 00:00:03,880
我会向你展示这个

2
00:00:03,880 --> 00:00:07,590
通过转到 App.vue，我将在那里添加一个新的 div。

3
00:00:07,590 --> 00:00:08,980
稍后我会回到模态，

4
00:00:08,980 --> 00:00:10,810
但我想从那开始。

5
00:00:10,810 --> 00:00:12,970
给它一个容器类，

6
00:00:12,970 --> 00:00:17,237
在那里，让我们添加一个常规按钮。

7
00:00:17,237 --> 00:00:21,830
“切换段落”可能是我们在按钮上的文本。

8
00:00:21,830 --> 00:00:26,377
然后我将在该按钮上方添加一小段。

9
00:00:26,377 --> 00:00:29,400
“这只是偶尔可见……”

10
00:00:29,400 --> 00:00:31,640
这一段应该切换

11
00:00:31,640 --> 00:00:33,253
每当单击此按钮时。

12
00:00:34,320 --> 00:00:36,200
现在，你知道它是如何工作的了。

13
00:00:36,200 --> 00:00:39,163
我们可以添加一个新的数据属性 paraIsVisible，

14
00:00:40,620 --> 00:00:43,090
例如，最初是错误的。

15
00:00:43,090 --> 00:00:46,480
我们可以在方法键的任何位置添加一个新方法。

16
00:00:46,480 --> 00:00:50,130
toggleParagraph，可以是名称，

17
00:00:50,130 --> 00:00:52,460
在那个方法中，我们现在控制它

18
00:00:52,460 --> 00:00:54,680
新添加的数据属性。

19
00:00:54,680 --> 00:00:58,320
因此，我们将 paraIsVisible 设置为当前未设置的值

20
00:00:58,320 --> 00:01:00,123
反转它的值。

21
00:01:01,470 --> 00:01:05,260
然后我们可以使用 paraIsVisible with, v if,

22
00:01:05,260 --> 00:01:08,193
有时只显示该段。

23
00:01:09,350 --> 00:01:13,100
现在唯一剩下的步骤就是连接这个按钮

24
00:01:13,100 --> 00:01:16,393
点击监听器指向，toggleParagraph。

25
00:01:18,080 --> 00:01:21,870
如果我们这样做，那么，我们有那一段，

26
00:01:21,870 --> 00:01:25,090
它立即出现并立即消失。

27
00:01:25,090 --> 00:01:27,070
现在让我们为两者制作动画，让我们看看

28
00:01:27,070 --> 00:01:28,473
Vue 如何帮助我们。

29
00:01:29,370 --> 00:01:31,100
有一个内置组件，

30
00:01:31,100 --> 00:01:33,630
你可以环绕元素

31
00:01:33,630 --> 00:01:35,850
你想控制外观的地方

32
00:01:35,850 --> 00:01:38,410
和 Vue 的移除动画。

33
00:01:38,410 --> 00:01:40,653
这就是过渡部分。

34
00:01:41,590 --> 00:01:44,300
您可以包装应该动画的元素，

35
00:01:44,300 --> 00:01:46,420
随着过渡，当然，

36
00:01:46,420 --> 00:01:48,410
你可以包装多个元素

37
00:01:48,410 --> 00:01:51,480
每个 Vue 应用程序和每个 Vue 组件，

38
00:01:51,480 --> 00:01:54,470
和过渡，这个内置组件，

39
00:01:54,470 --> 00:01:58,010
然后将操纵这个包裹的元素。

40
00:01:58,010 --> 00:02:01,840
重要的是，转换必须只包含一个元素，

41
00:02:01,840 --> 00:02:03,550
一个直系子女。

42
00:02:03,550 --> 00:02:06,540
有一个例外，我稍后会谈到，

43
00:02:06,540 --> 00:02:08,169
但目前，请记住

44
00:02:08,169 --> 00:02:11,693
您必须只有一个直系子女处于过渡期。

45
00:02:12,890 --> 00:02:17,050
现在，transition 对这个被包裹的元素做了什么？

46
00:02:17,050 --> 00:02:18,980
嗯，就是这个被包裹的元素，

47
00:02:18,980 --> 00:02:21,840
在某个时间点安装，

48
00:02:21,840 --> 00:02:23,890
但当然在这种情况下也是

49
00:02:23,890 --> 00:02:26,030
最初没有安装。

50
00:02:26,030 --> 00:02:28,173
它并不总是在屏幕上可见。

51
00:02:29,370 --> 00:02:32,380
过渡现在增加了几个

52
00:02:32,380 --> 00:02:36,090
该元素的 CSS 实用程序类。

53
00:02:36,090 --> 00:02:39,120
它增加了一个enter-from类，

54
00:02:39,120 --> 00:02:42,810
一个enter-active类和一个enter-to类。

55
00:02:42,810 --> 00:02:47,360
并且它先加入了enter-from，同时加入了enter-active，

56
00:02:47,360 --> 00:02:50,850
然后它从元素中移除，但 enter-active 停留在元素上

57
00:02:50,850 --> 00:02:55,180
并在动画结束时添加了 enter-to。

58
00:02:55,180 --> 00:02:58,850
Vue 会发现这个过程需要多长时间

59
00:02:58,850 --> 00:03:02,020
通过分析这些特殊的 CSS 类

60
00:03:02,020 --> 00:03:05,650
并在其中寻找过渡和动画

61
00:03:05,650 --> 00:03:08,930
然后从他们那里读取持续时间。

62
00:03:08,930 --> 00:03:11,500
所以Vue会分析你的CSS代码

63
00:03:11,500 --> 00:03:14,590
对于这些特殊的 CSS 类名。

64
00:03:14,590 --> 00:03:16,380
找出持续时间，

65
00:03:16,380 --> 00:03:21,380
然后在持续时间内实际添加这些 CSS 类。

66
00:03:21,610 --> 00:03:23,750
而这反过来又会让你

67
00:03:23,750 --> 00:03:27,560
在出现期间设置不同的样式，68
00:03:27,560 --> 00:03:30,363
在元素的进入阶段。

69
00:03:31,520 --> 00:03:32,540
当然你有

70
00:03:32,540 --> 00:03:35,100
删除元素的类似概念。

71
00:03:35,100 --> 00:03:36,880
所以当一个元素被安装时

72
00:03:36,880 --> 00:03:38,910
现在不再安装，

73
00:03:38,910 --> 00:03:42,370
因为使用 v if，条件变为假，

74
00:03:42,370 --> 00:03:45,370
然后 Vue 添加了一个离开类，

75
00:03:45,370 --> 00:03:48,580
同时，一个离开活跃的班级，

76
00:03:48,580 --> 00:03:50,670
然后它删除了离开类

77
00:03:50,670 --> 00:03:52,360
并增加了一个请假班，

78
00:03:52,360 --> 00:03:56,890
这允许您对元素的移除进行动画处理。

79
00:03:56,890 --> 00:03:58,780
重要的是，

80
00:03:58,780 --> 00:04:02,880
Vue 会分析你为这些类编写的 CSS 代码，

81
00:04:02,880 --> 00:04:05,790
它将读取转换的持续时间

82
00:04:05,790 --> 00:04:08,360
以及您在这些类中定义的动画，

83
00:04:08,360 --> 00:04:10,120
然后，这是关键，

84
00:04:10,120 --> 00:04:14,360
它只会真正从dom中删除元素

85
00:04:14,360 --> 00:04:16,730
一旦该持续时间结束。

86
00:04:16,730 --> 00:04:20,200
这就是非 Vue 行为的关键区别，

87
00:04:20,200 --> 00:04:23,011
他们的元素会立即添加和删除

88
00:04:23,011 --> 00:04:25,470
与过渡组件，

89
00:04:25,470 --> 00:04:29,760
这些特殊的 CSS 类 Vue 会添加和寻找，

90
00:04:29,760 --> 00:04:33,440
Vue 能够判断动画已经发生

91
00:04:33,440 --> 00:04:36,090
动画需要多长时间，

92
00:04:36,090 --> 00:04:38,620
然后它只删除元素

93
00:04:38,620 --> 00:04:41,350
一旦该动画完成。

94
00:04:41,350 --> 00:04:42,530
这就是理论。

95
00:04:42,530 --> 00:04:43,983
让我们在实践中看到它。