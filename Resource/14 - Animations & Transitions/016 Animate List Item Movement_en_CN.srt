1
00:00:02,270 --> 00:00:03,960
现在，vue 如何帮助我们

2
00:00:03,960 --> 00:00:07,120
通过这种捕捉行为，我们来到了这里，

3
00:00:07,120 --> 00:00:09,740
哪个不太好看？

4
00:00:09,740 --> 00:00:12,230
它添加了一个从不特殊的子句

5
00:00:12,230 --> 00:00:14,890
当您使用过渡组时。

6
00:00:14,890 --> 00:00:17,720
所以当它实际控制多个元素时，

7
00:00:17,720 --> 00:00:19,300
而不仅仅是一个。

8
00:00:19,300 --> 00:00:21,570
因为你可能实际上并没有注意到它，

9
00:00:21,570 --> 00:00:24,150
而我们只添加和删除一个元素

10
00:00:24,150 --> 00:00:25,610
一次在这里，

11
00:00:25,610 --> 00:00:30,150
我们同时为多个元素制作动画

12
00:00:30,150 --> 00:00:32,310
因为其他元素也需要

13
00:00:32,310 --> 00:00:35,950
添加新项目时切换其位置。

14
00:00:35,950 --> 00:00:37,750
这就是我们使用过渡组的原因。

15
00:00:37,750 --> 00:00:40,903
它能够为多个元素设置动画。

16
00:00:42,250 --> 00:00:44,960
因此它给了我们一个特殊的条款

17
00:00:44,960 --> 00:00:47,160
这允许我们控制动画

18
00:00:47,160 --> 00:00:48,750
其他元素中，

19
00:00:48,750 --> 00:00:51,080
没有被添加或删除，

20
00:00:51,080 --> 00:00:53,820
但也可能需要四处走动

21
00:00:53,820 --> 00:00:55,960
为新元素腾出位置

22
00:00:55,960 --> 00:00:59,340
或填充离开元素的空间。

23
00:00:59,340 --> 00:01:03,160
我们在这里添加的特殊条款是我们的前缀。

24
00:01:03,160 --> 00:01:05,363
所以在这种情况下用户列表，

25
00:01:06,300 --> 00:01:08,620
因为这是我们在这里定义的前缀

26
00:01:08,620 --> 00:01:10,820
使用 name 属性，

27
00:01:10,820 --> 00:01:11,680
接着

28
00:01:13,700 --> 00:01:15,790
冲刺移动。

29
00:01:15,790 --> 00:01:18,230
那是另一个特殊的 CSS 子句，

30
00:01:18,230 --> 00:01:22,060
哪个 vue 将添加到所有其他元素中，

31
00:01:22,060 --> 00:01:24,173
没有进入或离开。

32
00:01:25,910 --> 00:01:27,710
甚至比这更好，

33
00:01:27,710 --> 00:01:30,250
vue 会自动移动它们

34
00:01:30,250 --> 00:01:33,230
到引擎盖下的新位置，

35
00:01:33,230 --> 00:01:36,220
通过使用 transform CSS 属性。

36
00:01:36,220 --> 00:01:37,820
这只是你必须知道的事情。

37
00:01:37,820 --> 00:01:40,690
Vue 将在后台使用转换

38
00:01:40,690 --> 00:01:42,050
用于移动元素，

39
00:01:42,050 --> 00:01:45,743
它们不会被添加或移除到它们的新位置。

40
00:01:47,020 --> 00:01:49,360
因此，在移动课上，

41
00:01:49,360 --> 00:01:52,560
我们实际上可以转换变换属性

42
00:01:52,560 --> 00:01:53,950
在那些元素上。

43
00:01:53,950 --> 00:01:58,440
让我们用一个简单的功能说超过八秒。

44
00:01:58,440 --> 00:02:02,100
因此，只需轻松地平均分配时间。

45
00:02:02,100 --> 00:02:04,300
现在，如果我们保存它并返回，

46
00:02:04,300 --> 00:02:08,433
如果我们重新加载并添加一个新用户，我们将能够看到这一点。

47
00:02:10,210 --> 00:02:11,580
以普拉文为例。

48
00:02:11,580 --> 00:02:14,390
您会看到上部元素平稳移动

49
00:02:14,390 --> 00:02:15,593
到他们的新位置。

50
00:02:16,770 --> 00:02:20,550
现在，如果您重新加载并尝试将其删除，

51
00:02:20,550 --> 00:02:23,820
我们仍然有这种捕捉行为。

52
00:02:23,820 --> 00:02:27,310
我们必须解决一件事才能让它发挥作用

53
00:02:27,310 --> 00:02:30,880
关于休假活动条款。

54
00:02:30,880 --> 00:02:33,380
因此，它被添加到离开元素中。

55
00:02:33,380 --> 00:02:37,233
我们需要添加一个绝对位置。

56
00:02:38,920 --> 00:02:43,920
一旦我们将它添加到离开元素，然后我重新加载，

57
00:02:44,110 --> 00:02:47,450
现在你会看到其他元素也在移动。

58
00:02:47,450 --> 00:02:50,120
他们搬到了新的位置。

59
00:02:50,120 --> 00:02:51,880
现在，页面的其余部分跳转

60
00:02:51,880 --> 00:02:54,140
但这是我们无法避免的。

61
00:02:54,140 --> 00:02:55,630
但是在那个列表里面，

62
00:02:55,630 --> 00:03:00,373
我们有一个流畅的动画来输入项目。

63
00:03:01,989 --> 00:03:04,630
但也用于留下物品

64
00:03:04,630 --> 00:03:08,090
对于所有项目的列表的其余部分

65
00:03:08,090 --> 00:03:10,880
需要移动到一个新的位置。

66
00:03:10,880 --> 00:03:14,160
这就是过渡小组可以在这里为我们提供帮助的方式。

67
00:03:14,160 --> 00:03:17,550
它允许我们为列表中的项目设置动画，

68
00:03:17,550 --> 00:03:19,960
多个项目同时，

69
00:03:19,960 --> 00:03:22,840
它使我们能够顺利移动物品，

70
00:03:22,840 --> 00:03:25,126
即使他们不是直接受影响。

71
00:03:25,126 --> 00:03:28,660
因此，即使它们不是添加或删除的项目。

72
00:03:28,660 --> 00:03:32,450
因此，它是您应该使用的组件

73
00:03:32,450 --> 00:03:35,030
如果要添加多个项目。

74
00:03:35,030 --> 00:03:39,290
如果您想要一件或两件交替的物品

75
00:03:39,290 --> 00:03:41,210
动画，过渡

76
00:03:41,210 --> 00:03:42,973
是您应该使用的组件。

77
00:03:43,950 --> 00:03:46,410
因为该组件已优化

78
00:03:46,410 --> 00:03:48,330
用于动画单个项目

79
00:03:48,330 --> 00:03:51,513
或交替的项目，如这两个按钮。