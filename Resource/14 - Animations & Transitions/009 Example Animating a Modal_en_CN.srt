1
00:00:02,200 --> 00:00:05,570
所以现在让我们应用我们学到的关于过渡的知识，

2
00:00:05,570 --> 00:00:08,700
关于这个过渡组件，到我们的模态。

3
00:00:08,700 --> 00:00:12,105
因为那是我解释的事情

4
00:00:12,105 --> 00:00:15,440
我们可能需要 vue 方面的更多帮助。

5
00:00:15,440 --> 00:00:18,770
特别是对于过渡和动画，

6
00:00:18,770 --> 00:00:20,420
当我们关闭它时。

7
00:00:20,420 --> 00:00:25,020
现在我们可以围绕我们自己的自定义组件包裹过渡，

8
00:00:25,020 --> 00:00:28,410
就像我们可以将它包裹在内置元素上一样。

9
00:00:28,410 --> 00:00:30,940
所以我们可以在这里使用过渡，

10
00:00:30,940 --> 00:00:33,683
围绕我们的基本模型，就像那样。

11
00:00:34,580 --> 00:00:37,210
现在我们可以了，当然也可以设置 name prop

12
00:00:37,210 --> 00:00:40,090
为所有人定义我们自己的前缀

13
00:00:40,090 --> 00:00:42,530
您将添加的那些特殊课程。

14
00:00:42,530 --> 00:00:44,730
我将在这里添加模态。

15
00:00:44,730 --> 00:00:47,193
但同样，您可以选择任何您想要的名称。

16
00:00:48,260 --> 00:00:51,360
然后我们可以深入研究我们的 CSS 代码

17
00:00:51,360 --> 00:00:54,840
并开始寻找那些 CSS 类。

18
00:00:54,840 --> 00:00:59,380
在这里我将添加一个 modal-enter-from 类，

19
00:00:59,380 --> 00:01:04,379
modal-enter-active 类和 modal-enter-to 类。

20
00:01:07,870 --> 00:01:10,990
我实际上会去 BaseModal.vue

21
00:01:10,990 --> 00:01:13,120
并确保我删除了动画

22
00:01:13,120 --> 00:01:14,250
从那里的模态。

23
00:01:14,250 --> 00:01:16,720
这样我们就再也看不到这个动画了。

24
00:01:16,720 --> 00:01:20,093
因此，请确保您注释为 out 或删除此行。

25
00:01:21,220 --> 00:01:23,090
然后让我们回到 App.vue，

26
00:01:23,090 --> 00:01:25,300
这是我们使用基本模型的地方

27
00:01:25,300 --> 00:01:27,890
以及我们用过渡包装它的地方。

28
00:01:27,890 --> 00:01:31,180
现在我们可以在这里定义我们不同的风格。

29
00:01:31,180 --> 00:01:33,070
当然，现在完全取决于你，

30
00:01:33,070 --> 00:01:35,800
你想如何动画这个模态。

31
00:01:35,800 --> 00:01:39,363
我实际上会在这里带来我的模态关键帧。

32
00:01:42,120 --> 00:01:45,023
所以 BaseModal.vue 文件中的关键帧，

33
00:01:45,950 --> 00:01:49,430
将它们添加到 App.vue 中。

34
00:01:49,430 --> 00:01:51,670
您可以拥有多组关键帧

35
00:01:51,670 --> 00:01:54,080
同款税，

36
00:01:54,080 --> 00:01:56,670
只要您使用不同的名称。

37
00:01:56,670 --> 00:01:58,660
而且我实际上什至不需要输入

38
00:01:58,660 --> 00:02:00,210
从进入到现在。

39
00:02:00,210 --> 00:02:03,820
我们只需要 enter-active 来播放动画

40
00:02:03,820 --> 00:02:06,000
这将是模态动画，

41
00:02:06,000 --> 00:02:07,603
我刚刚复制过来的，

42
00:02:08,560 --> 00:02:11,723
给它一个持续时间和缓入功能。

43
00:02:12,800 --> 00:02:15,500
如果我们这样做，我们会注意到一个问题。

44
00:02:15,500 --> 00:02:19,223
如果我们重新加载，这个模式没有动画。

45
00:02:22,490 --> 00:02:25,320
现在，这个过渡组件

46
00:02:25,320 --> 00:02:27,980
确实适用于自定义组件。

47
00:02:27,980 --> 00:02:29,810
但是我们这里有个问题。

48
00:02:29,810 --> 00:02:33,570
vue想要添加的类被添加

49
00:02:33,570 --> 00:02:36,710
到自定义组件的根元素。

50
00:02:36,710 --> 00:02:39,550
这是，这个属性通过行为而下降

51
00:02:39,550 --> 00:02:41,023
我前面讲过。

52
00:02:42,700 --> 00:02:45,280
所以这些类过渡想要添加

53
00:02:45,280 --> 00:02:47,980
落入根元素

54
00:02:47,980 --> 00:02:50,150
在基本模型的模板中。

55
00:02:50,150 --> 00:02:54,013
但是 base-model 恰好有两个根元素。

56
00:02:54,013 --> 00:02:57,230
有 div 有对话。

57
00:02:57,230 --> 00:03:00,040
如果我们将 div 注释掉一秒钟，

58
00:03:00,040 --> 00:03:03,240
如果我们删除那个 div，背景一秒钟，

59
00:03:03,240 --> 00:03:06,230
然后重新加载，你看，它的工作原理。

60
00:03:06,230 --> 00:03:10,790
现在我们有了这个动画来显示模态。

61
00:03:10,790 --> 00:03:13,710
但是如果我们在这里有两个根元素，

62
00:03:13,710 --> 00:03:16,820
你当然想要，那么这是行不通的。

63
00:03:16,820 --> 00:03:19,886
它不起作用，因为正如我之前提到的，

64
00:03:19,886 --> 00:03:24,886
此过渡组件需要一个直接子元素。

65
00:03:26,580 --> 00:03:29,400
是的，这里只有一个子元素，

66
00:03:29,400 --> 00:03:31,410
只有一个基本模型。

67
00:03:31,410 --> 00:03:33,400
但是当然这里的基本模型，

68
00:03:33,400 --> 00:03:36,520
是重新ally 只是其模板的包装，

69
00:03:36,520 --> 00:03:39,060
我们有两个根元素。

70
00:03:39,060 --> 00:03:43,790
所以这两个根元素，这个 div 和这个对话，

71
00:03:43,790 --> 00:03:47,110
这些是实际的直接子元素

72
00:03:47,110 --> 00:03:49,620
在这个过渡组件内部。

73
00:03:49,620 --> 00:03:52,300
好吧，两个元素不止一个。

74
00:03:52,300 --> 00:03:56,343
这就是为什么这里的设置不起作用的原因。

75
00:03:57,620 --> 00:03:59,100
我们能做些什么呢？

76
00:03:59,100 --> 00:04:01,260
我们如何解决这个问题？

77
00:04:01,260 --> 00:04:03,910
好吧，有多种方法可以解决这个问题。

78
00:04:03,910 --> 00:04:07,330
例如，我们可以将其拆分为两个组件

79
00:04:07,330 --> 00:04:10,060
并单独管理背景。

80
00:04:10,060 --> 00:04:12,870
但我们也可以带来这个过渡组件

81
00:04:12,870 --> 00:04:16,350
转到基本模型并尝试在那里使用它

82
00:04:16,350 --> 00:04:18,610
过渡到样式日志。

83
00:04:18,610 --> 00:04:20,630
这就是我将在这里采取的路线。

84
00:04:20,630 --> 00:04:22,356
我将删除过渡包装

85
00:04:22,356 --> 00:04:24,423
围绕我的自定义组件。

86
00:04:25,500 --> 00:04:27,660
虽然理论上可行，

87
00:04:27,660 --> 00:04:30,890
如果我们的自定义组件只有一个根元素，

88
00:04:30,890 --> 00:04:33,240
但在这里它没有，所以它不起作用。

89
00:04:33,240 --> 00:04:36,060
我会把它带到基本模型

90
00:04:36,060 --> 00:04:40,950
并用过渡包装这个对话，就像这样。

91
00:04:42,570 --> 00:04:44,972
现在我可以给它取一个名字，模态的

92
00:04:44,972 --> 00:04:46,800
并返回 App.vue，

93
00:04:46,800 --> 00:04:50,220
并获取我的模态特定 CSS 类，

94
00:04:50,220 --> 00:04:53,670
准确地说是这里的modal-enter-active类，

95
00:04:53,670 --> 00:04:56,170
我们可以从 App.vue 中删除它们，

96
00:04:56,170 --> 00:04:59,330
从 App.vue 中删除模态关键帧

97
00:04:59,330 --> 00:05:02,260
并将所有这些都带到 BaseModal.vue。

98
00:05:02,260 --> 00:05:04,650
在那里，我们已经得到了模态关键帧，

99
00:05:04,650 --> 00:05:07,630
现在我还添加了 modal-enter-active 类，

100
00:05:07,630 --> 00:05:09,670
指向模态关键帧

101
00:05:09,670 --> 00:05:11,423
将其作为动画播放。

102
00:05:13,180 --> 00:05:15,450
然而，现在我们需要改变逻辑，

103
00:05:15,450 --> 00:05:18,020
这个基本模型是如何打开的。

104
00:05:18,020 --> 00:05:20,910
目前，我正在添加基本模型组件

105
00:05:20,910 --> 00:05:24,090
在 App.vue 中使用 v-if。

106
00:05:24,090 --> 00:05:27,540
如果我想使用过渡，这将不起作用

107
00:05:27,540 --> 00:05:29,590
基本模型模板内部

108
00:05:29,590 --> 00:05:32,950
动画添加和删除对话。

109
00:05:32,950 --> 00:05:35,750
如果过渡是该模板的一部分，

110
00:05:35,750 --> 00:05:37,880
用 v-if 添加和删除，

111
00:05:37,880 --> 00:05:39,563
它不会有任何影响。

112
00:05:40,410 --> 00:05:43,920
因此，我现在将以不同的方式打开和关闭模式。

113
00:05:43,920 --> 00:05:48,920
我将在我的基本模型组件中添加一个新的开放道具

114
00:05:49,110 --> 00:05:51,850
并且在那里可以看到对话点。

115
00:05:51,850 --> 00:05:55,550
所以向前，对话是可见的属性

116
00:05:55,550 --> 00:05:59,453
通过 open prop 到 base-model 组件。

117
00:06:01,140 --> 00:06:03,760
现在在基本模型组件中，

118
00:06:03,760 --> 00:06:07,090
我们可以在这里接受这个道具。

119
00:06:07,090 --> 00:06:09,753
所以期待这里的开放道具。

120
00:06:09,753 --> 00:06:12,370
现在我们得到了它，

121
00:06:12,370 --> 00:06:16,510
我们可以简单地用 v-if 在这里添加它。

122
00:06:16,510 --> 00:06:19,150
我们可以检查 open，open 道具也是如此，

123
00:06:19,150 --> 00:06:22,030
是真还是假，控制是否

124
00:06:22,030 --> 00:06:23,783
对话是否可见。

125
00:06:24,860 --> 00:06:28,700
所以现在总是添加基本模型组件

126
00:06:28,700 --> 00:06:30,600
到 App.vue 模板，

127
00:06:30,600 --> 00:06:33,110
但是在那个基本模型模板里面，

128
00:06:33,110 --> 00:06:36,240
对话仍由 v-if 控制。

129
00:06:36,240 --> 00:06:38,230
但现在它被包裹在一个过渡中，

130
00:06:38,230 --> 00:06:41,763
现在这个过渡只有一个直系孩子。

131
00:06:43,030 --> 00:06:46,300
当然，我们还想在 div 中添加 v-if，

132
00:06:46,300 --> 00:06:49,680
并将 open 道具也传递给 v-if，

133
00:06:49,680 --> 00:06:52,113
控制背景的可见性。

134
00:06:53,760 --> 00:06:57,750
现在终于，如果我们重新加载，我们得到了这个动画

135
00:06:57,750 --> 00:06:59,623
一切正常。

136
00:07:01,380 --> 00:07:05,650
当然，我们现在也可以制作结束动画。

137
00:07:05,650 --> 00:07:09,170
我们可以在这里添加modal-leave-active，

138
00:07:09,170 --> 00:07:11,640
并播放相同的动画。

139
00:07:11,640 --> 00:07:14,740
假设有一个缓入函数，

140
00:07:14,740 --> 00:07:16,640
只是为了让事情变得简单。

141
00:07:16,640 --> 00:07:18,090
当然我们也可以玩

142
00:07:18,090 --> 00:07:19,970
这里完全不同的动画，

143
00:07:19,970 --> 00:07:21,560
或设置过渡

144
00:07:21,560 --> 00:07:25,010
通过使用 from 和 to 类。

145
00:07:25,010 --> 00:07:28,210
但如果我这样做，如果我现在重新加载，

146
00:07:28,210 --> 00:07:32,780
我们有一个打开动画，也有关闭动画。

147
00:07:32,780 --> 00:07:34,950
现在结束动画，肯定是有点过

148
00:07:34,950 --> 00:07:37,763
因为我只是重新使用开场动画，

149
00:07:38,630 --> 00:07:42,550
但我们可以在此动画中添加反向值

150
00:07:42,550 --> 00:07:45,490
在 modal-leave-active 上，告诉 CSS，

151
00:07:45,490 --> 00:07:48,250
实际反向播放此动画，

152
00:07:48,250 --> 00:07:52,230
对于这里的这种情况，对于这个 CSS 类选择器。

153
00:07:52,230 --> 00:07:55,620
这样它就会开始，去，去，从，

154
00:07:55,620 --> 00:07:57,113
如果你添加反向。

155
00:07:58,510 --> 00:08:01,500
有了这个，如果我保存并重新加载，

156
00:08:01,500 --> 00:08:05,540
我们有一个很好的打开和关闭动画。

157
00:08:05,540 --> 00:08:08,430
现在，这在过渡的帮助下得以实现。

158
00:08:08,430 --> 00:08:10,400
请记住，这种过渡

159
00:08:10,400 --> 00:08:13,300
必须只有一个直接子元素。

160
00:08:13,300 --> 00:08:15,950
因此，我们不得不稍微调整一下，

161
00:08:15,950 --> 00:08:18,510
我希望很清楚为什么我们必须这样做。

162
00:08:18,510 --> 00:08:20,840
但是有了这个，我们现在有了一个很好的过渡

163
00:08:20,840 --> 00:08:23,360
用于打开和关闭。

164
00:08:23,360 --> 00:08:25,610
因此，对于添加和删除，

165
00:08:25,610 --> 00:08:27,163
这个元素就完成了。

166
00:08:29,220 --> 00:08:31,192
现在我将深入研究一些案例，

167
00:08:31,192 --> 00:08:33,760
我们实际上被允许拥有的地方

168
00:08:33,760 --> 00:08:36,523
转换内的多个元素。