1
00:00:02,100 --> 00:00:04,450
除了过渡属性，

2
00:00:04,450 --> 00:00:06,310
我们可以用它来告诉 CSS

3
00:00:06,310 --> 00:00:09,720
很好地提供两个变化之间的过渡，

4
00:00:09,720 --> 00:00:13,340
我们还可以设置更详细的动画。

5
00:00:13,340 --> 00:00:18,340
为此，我们首先必须在 CSS 中定义动画。

6
00:00:18,710 --> 00:00:20,940
我们通过写@keyframes来做到这一点，

7
00:00:22,070 --> 00:00:24,070
然后是我们选择的任何名称，

8
00:00:24,070 --> 00:00:26,920
例如，幻灯片淡入淡出

9
00:00:26,920 --> 00:00:29,550
但同样，这个名字取决于你。

10
00:00:29,550 --> 00:00:32,940
现在，在这里您可以详细定义

11
00:00:32,940 --> 00:00:35,080
动画应该如何表现，

12
00:00:35,080 --> 00:00:37,410
以及它应该具有哪些不同的状态

13
00:00:37,410 --> 00:00:40,610
你用百分比来表达这一点。

14
00:00:40,610 --> 00:00:45,610
例如，您说在动画完成的 0% 时

15
00:00:46,040 --> 00:00:48,800
例如，一开始你

16
00:00:48,800 --> 00:00:53,410
想要沿 X 轴零变换

17
00:00:53,410 --> 00:00:55,300
所以它没有被移动。

18
00:00:55,300 --> 00:00:59,390
此外，您将比例设置为 1。

19
00:00:59,390 --> 00:01:04,000
Scale 是一个数字变换函数，您可以添加

20
00:01:04,000 --> 00:01:05,843
更改块的大小。

21
00:01:07,200 --> 00:01:10,510
那么说完之后

22
00:01:10,510 --> 00:01:13,900
70%的动画时间，

23
00:01:13,900 --> 00:01:16,110
你想改变这个，

24
00:01:16,110 --> 00:01:19,810
将其向左移动 120 像素

25
00:01:19,810 --> 00:01:22,190
并将其放大一点，

26
00:01:22,190 --> 00:01:26,040
通过将比例设置为一个点来使其大 10%

27
00:01:26,040 --> 00:01:27,780
一个是原始比例，

28
00:01:27,780 --> 00:01:29,813
一个点 1 大 10%。

29
00:01:32,350 --> 00:01:34,650
然后这里是 100%，

30
00:01:34,650 --> 00:01:37,850
我们想把 X 翻译成

31
00:01:37,850 --> 00:01:40,560
完整的负 150 像素。

32
00:01:40,560 --> 00:01:43,470
所以把它一直向左移动

33
00:01:43,470 --> 00:01:45,430
并将比例设置回一。

34
00:01:45,430 --> 00:01:47,530
这样我们就可以增加尺寸

35
00:01:47,530 --> 00:01:50,260
在中间或中间一点点之后

36
00:01:50,260 --> 00:01:53,530
动画和移动它几乎

37
00:01:53,530 --> 00:01:55,810
到这里结束，完全

38
00:01:55,810 --> 00:01:59,170
到这里结束并将其恢复到正常大小。

39
00:01:59,170 --> 00:02:02,150
这些是我们现在动画中的不同状态

40
00:02:02,150 --> 00:02:04,470
这就是我们定义的动画

41
00:02:04,470 --> 00:02:07,820
以及所谓的关键帧的不同状态

42
00:02:07,820 --> 00:02:10,280
想在那个动画期间到达。

43
00:02:10,280 --> 00:02:12,410
我们现在通过去应用它

44
00:02:12,410 --> 00:02:14,830
首先到我们的街区，

45
00:02:14,830 --> 00:02:16,440
并删除那里的过渡。

46
00:02:16,440 --> 00:02:20,260
如果我们愿意，我们可以一起移动过渡和动画，

47
00:02:20,260 --> 00:02:22,833
但通常你只会使用两者之一。

48
00:02:23,710 --> 00:02:25,050
所以在这里我想使用动画

49
00:02:25,050 --> 00:02:27,130
因此我注释掉过渡。

50
00:02:27,130 --> 00:02:29,900
在我们最终添加的类中，

51
00:02:29,900 --> 00:02:31,810
我将注释掉变换，

52
00:02:31,810 --> 00:02:35,820
而是添加动画 CSS 属性。

53
00:02:35,820 --> 00:02:39,650
该属性现在允许我们添加动画

54
00:02:39,650 --> 00:02:42,363
该 CSS 类被添加到元素中。

55
00:02:43,540 --> 00:02:46,880
在这里，我们现在引用我们的一个关键帧集，

56
00:02:46,880 --> 00:02:49,960
在这种情况下，我们在幻灯片淡入淡出时定义了它。

57
00:02:49,960 --> 00:02:52,480
所以在这里使用这个名字，

58
00:02:52,480 --> 00:02:54,830
然后我们仍然指定一个持续时间

59
00:02:54,830 --> 00:02:58,270
将在这些关键帧中拆分。

60
00:02:58,270 --> 00:03:01,240
所以在这里，让我们说点三秒。

61
00:03:01,240 --> 00:03:03,120
还有缓动功能，

62
00:03:03,120 --> 00:03:05,520
它控制这些不同状态的速度

63
00:03:05,520 --> 00:03:08,710
如果我们开始快而结束慢，就达到了，

64
00:03:08,710 --> 00:03:10,913
或者，如果我们开始缓慢并快速结束。

65
00:03:13,020 --> 00:03:15,770
如果我们保存所有这些并重新加载，

66
00:03:15,770 --> 00:03:17,530
如果我点击动画，

67
00:03:17,530 --> 00:03:19,130
你看它动画，

68
00:03:19,130​​ --> 00:03:22,210
但随后它又恢复到原始状态。

69
00:03:22,210 --> 00:03:23,220
这不是错误

70
00:03:23,220 --> 00:03:26,410
这就是 CSS 动画默认的行为方式，

71
00:03:26,410 --> 00:03:29,970
我们这里需要加四个字告诉CSS

72
00:03:29,970 --> 00:03:33,930
我们希望将最终关键帧保持在最终状态

73
00:03:33,930 --> 00:03:38,740
作为新外观的动画元素的新状态。

74
00:03:38,740 --> 00:03:42,330
因此，在这里添加四个单词，如果我们保存并重新加载，

75
00:03:42,330 --> 00:03:43,600
如果我点击动画，

76
00:03:43,600 --> 00:03:47,070
它现在随着我们的自定义动画移动到那里

77
00:03:47,070 --> 00:03:49,310
并保持最终状态。

78
00:03:49,310 --> 00:03:51,880
这就是我们实现动画的方式

79
00:03:51,880 --> 00:03:55,890
使用 CSS 过渡或 CSS 动画。

80
00:03:55,890 --> 00:03:58,520
我们所做的一切都是在这里查看

81
00:03:58,520 --> 00:04:02,370
我们是否正在动态添加这个动画类

82
00:04:02,370 --> 00:04:05,090
二到二是动画元素，

83
00:04:05,090 --> 00:04:07,330
当然也不必是 div

84
00:04:07,330 --> 00:04:08,760
但可以是任何东西。

85
00:04:08,760 --> 00:04:12,310
通常这就是你所需要的。

86
00:04:12,310 --> 00:04:16,130
但也有一种情况，这还不够。

87
00:04:16,130 --> 00:04:18,132
那么接下来让我们来探讨一下。