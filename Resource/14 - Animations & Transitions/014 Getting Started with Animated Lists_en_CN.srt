1
00:00:02,240 --> 00:00:04,540
到目前为止，我们总是添加

2
00:00:04,540 --> 00:00:08,020
仅添加或删除一个元素。

3
00:00:08,020 --> 00:00:10,560
我的意思是，即使这里有两个按钮，

4
00:00:10,560 --> 00:00:13,580
这是关于只有一个按钮处于活动状态

5
00:00:13,580 --> 00:00:15,990
同时在页面上。

6
00:00:15,990 --> 00:00:18,540
但有时你也有数据列表，

7
00:00:18,540 --> 00:00:19,620
你想要动画。

8
00:00:19,620 --> 00:00:21,840
所以你有多个列表项

9
00:00:21,840 --> 00:00:23,820
你可能想要动画这个

10
00:00:23,820 --> 00:00:27,663
值得庆幸的是，Vue 也为您提供了保障。

11
00:00:28,670 --> 00:00:32,200
我将添加一个新组件 ListData.vue

12
00:00:32,200 --> 00:00:34,050
名字当然取决于你

13
00:00:34,050 --> 00:00:36,060
我只是在使用新组件

14
00:00:36,060 --> 00:00:39,330
保持代码拆分并保持可管理性，

15
00:00:39,330 --> 00:00:42,030
因为 App.vue 已经是一个很大的组件了

16
00:00:42,030 --> 00:00:44,320
里面有很多代码。

17
00:00:44,320 --> 00:00:47,230
所以 ListData.vue 是一个简单的组件。

18
00:00:47,230 --> 00:00:49,410
我们将在那里有一个无序列表

19
00:00:49,410 --> 00:00:52,570
我们会有一些虚拟列表数据

20
00:00:52,570 --> 00:00:55,770
在我们这里的组件对象中。

21
00:00:55,770 --> 00:00:58,310
现在由您决定，您需要在此处获取哪些数据。

22
00:00:58,310 --> 00:01:00,290
我将有一个用户密钥

23
00:01:00,290 --> 00:01:03,213
并拥有“Max”、“Manu”、“Julie”

24
00:01:07,071 --> 00:01:10,700
“安吉拉”和“迈克尔”在这里作为名字，

25
00:01:10,700 --> 00:01:13,343
但是您当然可以根据需要添加任意数量的名称。

26
00:01:15,440 --> 00:01:16,880
现在，我的目标当然是，

27
00:01:16,880 --> 00:01:20,280
在列表中输出这些项目

28
00:01:20,280 --> 00:01:23,640
所以我们可以使用 v-for 循环访问用户

29
00:01:23,640 --> 00:01:25,760
所以“用户中的用户”

30
00:01:25,760 --> 00:01:28,250
还添加一个键和指向用户，

31
00:01:28,250 --> 00:01:30,480
因为我们在那里有独特的价值

32
00:01:30,480 --> 00:01:33,480
然后在此处输出用户名。

33
00:01:33,480 --> 00:01:35,060
所以这是一个非常简单的列表。

34
00:01:35,060 --> 00:01:38,043
它目前也没有任何花哨的样式。

35
00:01:39,580 --> 00:01:42,150
现在我们可以去 App.vue

36
00:01:42,150 --> 00:01:46,760
并将其作为本地组件导入此处，例如，

37
00:01:46,760 --> 00:01:48,683
所以让我们快速导入。

38
00:01:51,158 --> 00:01:55,603
ListData 或者实际上让我们将其命名为 UsersList

39
00:01:56,640 --> 00:01:58,470
有点意思，我猜。

40
00:01:58,470 --> 00:02:01,160
所以让我们导入用户列表

41
00:02:01,160 --> 00:02:05,853
来自'./components/UsersList.vue'

42
00:02:06,960 --> 00:02:08,100
然后正如你所学

43
00:02:08,100 --> 00:02:10,280
并在课程中多次这样做，

44
00:02:10,280 --> 00:02:14,290
我们可以在这里将其注册为本地组件，UsersList。

45
00:02:16,040 --> 00:02:19,490
现在已经导入并注册了，

46
00:02:19,490 --> 00:02:21,410
也许在最顶端，

47
00:02:21,410 --> 00:02:25,180
我们可以添加一个带有类容器的新 div

48
00:02:25,180 --> 00:02:28,530
然后在这里渲染我们的 UsersList 组件，

49
00:02:28,530 --> 00:02:30,373
新添加的组件。

50
00:02:32,710 --> 00:02:35,300
有了这个，我们在这里得到了我们的用户列表。

51
00:02:35,300 --> 00:02:37,260
现在让我们添加一点样式

52
00:02:37,260 --> 00:02:39,690
让它看起来更好一点

53
00:02:39,690 --> 00:02:42,710
在 UsersList.vue 文件中。

54
00:02:42,710 --> 00:02:47,550
我们可以在这里添加一个作用域样式标签

55
00:02:47,550 --> 00:02:51,060
在无序列表上，我将 list-style 设置为 none

56
00:02:51,060 --> 00:02:53,400
删除项目符号点，

57
00:02:53,400 --> 00:02:56,490
设置边距：0 和填充：0

58
00:02:58,260 --> 00:03:01,250
每个单独的列表项

59
00:03:01,250 --> 00:03:05,290
然后通过给它一个 1px 实心边框来设置样式

60
00:03:05,290 --> 00:03:07,300
和浅灰色

61
00:03:07,300 --> 00:03:09,460
和 1rem 的填充

62
00:03:11,590 --> 00:03:13,600
我将在这里设置文本对齐

63
00:03:13,600 --> 00:03:15,763
中心到中心，到文本。

64
00:03:18,400 --> 00:03:20,633
现在这就是我们这里的清单。

65
00:03:21,530 --> 00:03:23,600
现在，这是一个非常简单的列表，目前

66
00:03:23,600 --> 00:03:25,460
它根本没有动画。

67
00:03:25,460 --> 00:03:29,110
让我们确保我们现在可以向其中添加和删除项目，

68
00:03:29,110 --> 00:03:31,970
然后让我们确保我们可以制作动画

69
00:03:31,970 --> 00:03:33,860
因为那是缺少的东西

70
00:03:33,860 --> 00:03:36,803
在我们在整个课程中解决的所有示例中e.

71
00:03:37,930 --> 00:03:40,360
所以要确保可以添加新项目

72
00:03:40,360 --> 00:03:42,880
在模板中的 UsersList.vue

73
00:03:42,880 --> 00:03:45,230
在我的无序列表下方。

74
00:03:45,230 --> 00:03:49,300
我将在这里添加另一个 div 只是作为说唱歌手

75
00:03:49,300 --> 00:03:53,313
然后在这里有一个文本类型的输入元素。

76
00:03:55,200 --> 00:03:58,640
还有一个按钮，上面写着添加用户。

77
00:03:58,640 --> 00:04:00,620
理想的当然是我们采取

78
00:04:00,620 --> 00:04:04,840
在此处输入并作为用户添加到用户的任何内容。

79
00:04:04,840 --> 00:04:06,870
在列表项的另一端是单击

80
00:04:06,870 --> 00:04:08,660
应该删除用户。

81
00:04:08,660 --> 00:04:11,280
所以添加一个点击监听器到一个列表项

82
00:04:11,280 --> 00:04:14,900
说，在这里 removeUser 并传递用户

83
00:04:14,900 --> 00:04:17,459
作为 removeUser 的参数。

84
00:04:18,870 --> 00:04:20,829
在另一端的这个按钮上，

85
00:04:20,829 --> 00:04:23,470
我将添加一个单击侦听器并说 addUser。

86
00:04:23,470 --> 00:04:26,290
如果我们愿意，我们也可以在这里使用表格，

87
00:04:26,290 --> 00:04:29,240
但我只会在这个按钮上添加一个好的旧点击监听器。

88
00:04:31,100 --> 00:04:34,660
所以现在我们可以添加方法

89
00:04:34,660 --> 00:04:39,660
以及 addUser 方法和 removeUser 方法

90
00:04:40,560 --> 00:04:44,300
在 removeUser 上，我们将获得用户名，

91
00:04:44,300 --> 00:04:46,710
我们在这里将它作为参数传递。

92
00:04:46,710 --> 00:04:49,490
所以我们在这里把它作为一个参数

93
00:04:49,490 --> 00:04:54,490
然后我们可以设置 this.users = this.users.filter,

94
00:04:56,170 --> 00:04:58,870
搜索相等的用户

95
00:04:58,870 --> 00:05:01,270
给我们到达这里的用户。

96
00:05:01,270 --> 00:05:03,500
所以如果我们得到一个等于用户的用户，

97
00:05:03,500 --> 00:05:04,890
我们目前正在研究，

98
00:05:04,890 --> 00:05:07,400
我们想过滤掉它，

99
00:05:07,400 --> 00:05:11,540
实际上通过反转这个，以便我们保留所有用户

100
00:05:11,540 --> 00:05:14,180
名字不相等的地方

101
00:05:14,180 --> 00:05:15,490
给我们到达这里的用户。

102
00:05:15,490 --> 00:05:18,360
如果名称相同，则返回 false。

103
00:05:18,360 --> 00:05:19,640
因此我们将其过滤掉

104
00:05:19,640 --> 00:05:23,340
因此我们的新用户是旧数组减去

105
00:05:23,340 --> 00:05:25,873
我们在这里得到的用户名的用户。

106
00:05:27,658 --> 00:05:30,990
在 addUser 中，我们想要获取用户在此处输入的内容

107
00:05:30,990 --> 00:05:33,927
我将使用该引用作为该 userNameInput

108
00:05:35,200 --> 00:05:37,443
是我的参考，我将在这里使用。

109
00:05:39,770 --> 00:05:41,620
然后添加用户。

110
00:05:41,620 --> 00:05:44,860
我们通过联系获得了输入的用户名

111
00:05:44,860 --> 00:05:49,350
到 this.$refs.userNameInput.value;

112
00:05:49,350 --> 00:05:52,260
我们可以添加验证，但我想保持简单。

113
00:05:52,260 --> 00:05:57,140
因此只需将我输入的用户名推送给用户。

114
00:05:57,140 --> 00:05:58,680
实际上我不会推动它。

115
00:05:58,680 --> 00:06:01,223
我将取消移动它以将其添加到顶部。

116
00:06:03,410 --> 00:06:05,840
现在有了这个，如果我们重新加载，

117
00:06:05,840 --> 00:06:08,000
如果我点击 Julie，她就会被删除。

118
00:06:08,000 --> 00:06:11,483
如果我再次添加朱莉，她又回到了开头。

119
00:06:13,330 --> 00:06:15,430
我们总是可以在这里添加一些间距

120
00:06:15,430 --> 00:06:17,060
通过返回无序列表

121
00:06:17,060 --> 00:06:19,450
并且实际上添加了 1rem top 的边距

122
00:06:19,450 --> 00:06:23,713
通过在此处添加此规则，左下角和右下角为零。

123
00:06:25,440 --> 00:06:27,880
所以现在我们把它做好了。

124
00:06:27,880 --> 00:06:30,150
你当然可以优化造型，

125
00:06:30,150 --> 00:06:33,420
但我现在更想专注于动画。

126
00:06:33,420 --> 00:06:36,180
我想确保我们制作动画

127
00:06:36,180 --> 00:06:39,610
删除或添加项目时。

128
00:06:39,610 --> 00:06:42,423
这就是我们可以用 Vue 做的事情。