1
00:00:01,461 --> 00:00:03,150
所以回到代码中，

2
00:00:03,150 --> 00:00:05,060
我们有这个包裹的段落

3
00:00:05,060 --> 00:00:08,770
我提到 Vue 会添加某些实用程序类。

4
00:00:08,770 --> 00:00:09,860
嗯，确实如此。

5
00:00:09,860 --> 00:00:13,840
因此，让我们在 CSS 代码中为它们定义样式。

6
00:00:13,840 --> 00:00:16,059
你可以在任何地方做，我会在这里做。

7
00:00:16,059 --> 00:00:20,830
Vue 将添加的默认类名是 v-enter-from，

8
00:00:22,550 --> 00:00:27,550
v-enter-active 和 v-enter-to。

9
00:00:32,420 --> 00:00:36,230
Vue 默认会添加这三个 CSS 类

10
00:00:36,230 --> 00:00:38,380
在不同的时间解释

11
00:00:38,380 --> 00:00:41,500
当元素第一次添加到 DOM 时。

12
00:00:41,500 --> 00:00:43,310
所以在这种情况下，当段落

13
00:00:43,310 --> 00:00:45,853
第一次出现在 DOM 上。

14
00:00:46,790 --> 00:00:49,540
现在我们可以在这里定义不同的类样式。

15
00:00:49,540 --> 00:00:51,600
我们可以定义不同的属性。

16
00:00:51,600 --> 00:00:54,250
我们应该至少包含一个过渡

17
00:00:54,250 --> 00:00:58,930
或动画，以便 Vue 能够读取持续时间

18
00:00:58,930 --> 00:01:01,260
从这些课程中，因为我提到

19
00:01:01,260 --> 00:01:03,730
这将是它所做的另一件关键事情

20
00:01:03,730 --> 00:01:04,913
在幕后。

21
00:01:06,170 --> 00:01:09,430
现在，在 v-enter-from 中，您定义了您的起始状态。

22
00:01:09,430 --> 00:01:10,900
对于这一段，

23
00:01:10,900 --> 00:01:13,530
那可能是它最初是不可见的

24
00:01:13,530 --> 00:01:15,660
通过将不透明度设置为零。

25
00:01:15,660 --> 00:01:18,420
也许它向上移动了一点

26
00:01:18,420 --> 00:01:23,420
通过将变换设置为 translateY -30 像素。

27
00:01:25,040 --> 00:01:29,433
这会将其移动到比实际位置高一点的位置。

28
00:01:30,970 --> 00:01:33,880
在 v-enter-to 中，我们有结束状态，

29
00:01:33,880 --> 00:01:36,390
所以我们最终想要的最终状态。

30
00:01:36,390 --> 00:01:39,070
在那里，我们可以有一个不透明度

31
00:01:39,070 --> 00:01:42,510
并将 transform: translateY 设置为零

32
00:01:42,510 --> 00:01:43,990
采取真正的立场

33
00:01:43,990 --> 00:01:46,603
它应该在页面上的元素。

34
00:01:48,030 --> 00:01:51,200
v-enter-active 现在是这个地方

35
00:01:51,200 --> 00:01:52,600
例如，您在哪里

36
00:01:52,600 --> 00:01:55,320
添加过渡 CSS 属性

37
00:01:55,320 --> 00:01:59,670
告诉 Vue 监视所有 CSS 属性

38
00:01:59,670 --> 00:02:01,200
那可能是动画的。

39
00:02:01,200 --> 00:02:03,530
所以在这种情况下，不透明度和变换，

40
00:02:03,530 --> 00:02:06,390
这是这里改变的两个属性，

41
00:02:06,390 --> 00:02:08,360
然后你定义一个持续时间。

42
00:02:08,360 --> 00:02:10,423
这就是 Vue 将读取的内容。

43
00:02:11,300 --> 00:02:13,190
那么 Vue 将采取什么措施来找出答案

44
00:02:13,190 --> 00:02:16,670
这些类应该添加到元素中的时间。

45
00:02:16,670 --> 00:02:18,823
然后是你的缓动函数。

46
00:02:20,210 --> 00:02:23,210
如果你这样做，然后重新加载，

47
00:02:23,210 --> 00:02:25,060
你可以点击切换段落

48
00:02:25,060 --> 00:02:29,969
你有这个动画来添加段落。

49
00:02:29,969 --> 00:02:31,873
对于删除，我们还没有

50
00:02:31,873 --> 00:02:33,706
但是要添加，我们会这样做。

51
00:02:34,870 --> 00:02:37,070
好吧，我已经在幻灯片上展示了它。

52
00:02:37,070 --> 00:02:39,903
您有类似的删除类。

53
00:02:40,750 --> 00:02:45,570
我们有 v-leave-from 类。

54
00:02:45,570 --> 00:02:49,330
我们有 v-leave-active 类

55
00:02:49,330 --> 00:02:53,513
我们有 v-leave-to 类。

56
00:02:54,870 --> 00:02:57,028
这与进入的概念相同。

57
00:02:57,028 --> 00:02:59,460
我们定义我们的起始状态，

58
00:02:59,460 --> 00:03:01,360
对我来说，这是相同的状态

59
00:03:01,360 --> 00:03:03,410
作为进入的最终状态

60
00:03:03,410 --> 00:03:05,030
但不必相同。

61
00:03:05,030 --> 00:03:07,410
你可以在这里定义一个完全不同的状态，

62
00:03:07,410 --> 00:03:10,330
完全不同的 CSS 属性。

63
00:03:10,330 --> 00:03:11,210
那也行。

64
00:03:11,210 --> 00:03:14,740
您不必使用相同的 CSS 属性

65
00:03:14,740 --> 00:03:15,653
至于添加。

66
00:03:16,760 --> 00:03:17,860
但在这里我正在做。

67
00:03:18,910 --> 00:03:21,680
在 v-leave-to 中，我使用相同的状态

68
00:03:21,680 --> 00:03:25,160
就像我进入我的州一样。

69
00:03:25,160 --> 00:03:27,510
现在是离开的状态，

70
00:03:27,510 --> 00:03:30,193
让它隐形并移动它