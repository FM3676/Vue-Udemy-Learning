1
00:00:02,190 --> 00:00:04,650
这就是这个模块的内容。

2
00:00:04,650 --> 00:00:07,500
您将学习如何发送 HTTP 请求，

3
00:00:07,500 --> 00:00:11,143
既可以发送数据，也可以获取数据。

4
00:00:12,090 --> 00:00:15,330
您将学习如何使用他们的响应数据，

5
00:00:15,330 --> 00:00:17,860
如何提取它，以及如何显示它。

6
00:00:17,860 --> 00:00:20,320
您将学习如何显示加载文本

7
00:00:20,320 --> 00:00:21,683
或加载微调器。

8
00:00:24,320 --> 00:00:26,700
您将学习如何处理错误

9
00:00:26,700 --> 00:00:29,300
以防万一出现问题。

10
00:00:29,300 --> 00:00:31,460
总的来说，你希望现在有

11
00:00:31,460 --> 00:00:35,270
理解为什么我们可能需要这样的后端，

12
00:00:35,270 --> 00:00:38,350
至少对于我们正在构建的一些应用程序，

13
00:00:38,350 --> 00:00:40,940
以及如何与后端通信

14
00:00:40,940 --> 00:00:44,053
Vue 应用程序内部的幕后花絮。

15
00:00:45,070 --> 00:00:46,590
使用获取功能，

16
00:00:46,590 --> 00:00:50,720
它内置在浏览器中，只是其中一种方法。

17
00:00:50,720 --> 00:00:53,880
我之前也提到过 axios 包，

18
00:00:53,880 --> 00:00:55,630
这是一个第三方包

19
00:00:55,630 --> 00:00:57,780
你可以添加到你的项目中，

20
00:00:57,780 --> 00:01:00,240
这也允许您发送此类请求。

21
00:01:00,240 --> 00:01:02,170
它只是工作方式有点不同。

22
00:01:02,170 --> 00:01:06,200
比如那里，catch也会自动触发

23
00:01:06,200 --> 00:01:09,370
如果您收到错误响应，

24
00:01:09,370 --> 00:01:13,210
这样我们就需要使用 fetch 函数进行额外处理

25
00:01:13,210 --> 00:01:17,380
axios 不需要，但就是这样。

26
00:01:17,380 --> 00:01:19,970
我们将在课程项目中看到这一点

27
00:01:19,970 --> 00:01:22,720
也可以，但希望这能让你开始

28
00:01:22,720 --> 00:01:24,800
现在为您提供所需的一切

29
00:01:24,800 --> 00:01:29,733
让您开始在应用程序中发送 HTTP 请求。