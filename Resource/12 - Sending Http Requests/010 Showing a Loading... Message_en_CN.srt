1
00:00:02,110 --> 00:00:04,180
好吧，另一件事会很高兴

2
00:00:04,180 --> 00:00:06,170
当我们重新加载或加载数据时

3
00:00:06,170 --> 00:00:08,670
通常它在这里加载非常快

4
00:00:08,670 --> 00:00:11,823
因为 Firebase 很快，而且我的网速​​很快。

5
00:00:11,823 --> 00:00:15,210
但当然你可能在说

6
00:00:15,210 --> 00:00:17,310
到一个有点慢的服务器

7
00:00:17,310 --> 00:00:20,520
或者可能是您的视图应用程序的用户

8
00:00:20,520 --> 00:00:22,780
互联网连接速度较慢。

9
00:00:22,780 --> 00:00:25,113
所以加载数据可能需要一段时间。

10
00:00:26,360 --> 00:00:28,900
因此你可能想展示一个加载微调器

11
00:00:28,900 --> 00:00:30,860
或加载消息。

12
00:00:30,860 --> 00:00:33,780
这也是我们可以在这里做的事情。

13
00:00:33,780 --> 00:00:35,810
在我们的用户体验组件中，

14
00:00:35,810 --> 00:00:38,660
我们在哪里加载和显示数据，

15
00:00:38,660 --> 00:00:41,460
我们可能只想显示这个数据列表

16
00:00:41,460 --> 00:00:43,860
如果我们真的加载了数据

17
00:00:43,860 --> 00:00:46,990
我们想显示加载消息和统计信息

18
00:00:46,990 --> 00:00:49,740
如果我们仍在加载数据，

19
00:00:49,740 --> 00:00:51,800
这是我们可以轻松实现的

20
00:00:51,800 --> 00:00:56,530
例如，通过添加一个新的数据属性正在加载，

21
00:00:56,530 --> 00:00:58,483
让我们最初将其设置为 false。

22
00:00:59,870 --> 00:01:02,220
现在，每当触发加载体验时

23
00:01:02,220 --> 00:01:05,235
就在我们开始获取之前，

24
00:01:05,235 --> 00:01:08,420
我想设置这个正在加载为真

25
00:01:08,420 --> 00:01:11,030
因为我们现在正在发送一个 HTTP 请求

26
00:01:11,030 --> 00:01:12,763
因此我们正在加载新数据。

27
00:01:15,070 --> 00:01:16,960
然后我想把它设置回 false

28
00:01:16,960 --> 00:01:20,080
一旦我们完成加载，最终意味着

29
00:01:20,080 --> 00:01:24,100
一旦我们得到我们的数据，

30
00:01:24,100 --> 00:01:27,920
我想将此设置为加载回false

31
00:01:27,920 --> 00:01:30,573
因为我们不再加载，所以我们得到了数据。

32
00:01:32,210 --> 00:01:33,760
我们必须在这里做

33
00:01:33,760 --> 00:01:38,050
而不是在获取后方法的末尾，

34
00:01:38,050 --> 00:01:40,050
因为记住，

35
00:01:40,050 --> 00:01:43,180
JavaScript 不等待 fetch 完成

36
00:01:43,180 --> 00:01:47,420
所以 fetch 之后的下一行将立即执行，

37
00:01:47,420 --> 00:01:49,960
JavaScript 不会等待它完成

38
00:01:49,960 --> 00:01:53,560
只是这些 then 函数中的代码

39
00:01:53,560 --> 00:01:55,970
这将在稍后的时间点执行。

40
00:01:55,970 --> 00:01:58,393
这就是为什么我们需要在这里重置加载。

41
00:02:00,260 --> 00:02:03,600
现在我们有了可以使用的正在加载的属性。

42
00:02:03,600 --> 00:02:07,186
我们可以检查我们是否没有加载

43
00:02:07,186 --> 00:02:09,122
那是我想显示我的数据的时候。

44
00:02:10,320 --> 00:02:11,910
如果我正在加载，

45
00:02:11,910 --> 00:02:15,240
我想展示我的加载微调器，或者在这种情况下

46
00:02:15,240 --> 00:02:17,080
如果他的加载是真的

47
00:02:17,080 --> 00:02:20,330
我至少会显示一个加载文本

48
00:02:20,330 --> 00:02:21,203
像这样。

49
00:02:24,520 --> 00:02:27,053
当然，因此在这里我们也可以使用 V-else。

50
00:02:28,000 --> 00:02:31,390
如果我们这样做，你真的必须密切关注

51
00:02:31,390 --> 00:02:33,625
因为这里会超级快，

52
00:02:33,625 --> 00:02:36,840
但是您在这里短暂地看到了加载，对吗？

53
00:02:36,840 --> 00:02:39,610
您可以在几分之一秒内看到它。

54
00:02:39,610 --> 00:02:42,140
所以这是有效的，我们正在展示一个加载微调器

55
00:02:42,140 --> 00:02:44,820
或在我们等待时的加载消息

56
00:02:44,820 --> 00:02:46,253
以便数据到达。

57
00:02:47,950 --> 00:02:51,770
现在，没有任何数据或出现错误怎么办？

58
00:02:51,770 --> 00:02:53,133
我们该如何处理呢？