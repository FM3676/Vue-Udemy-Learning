1
00:00:02,080 --> 00:00:05,760
我们将 v-for 与这样的数组一起使用。

2
00:00:05,760 --> 00:00:08,910
老实说，这也可能

3
00:00:08,910 --> 00:00:11,130
最常见的使用方式。

4
00:00:11,130 --> 00:00:14,710
但是 v-for 有几个有趣的变化。

5
00:00:14,710 --> 00:00:16,970
例如，您可以：

6
00:00:16,970 --> 00:00:19,810
拉出的不仅仅是数组项。

7
00:00:19,810 --> 00:00:23,400
您还可以从数组中的项目中获取索引。

8
00:00:23,400 --> 00:00:27,510
这样做很简单，你只需包装你的物品，

9
00:00:27,510 --> 00:00:29,400
你从阵列中取出的，

10
00:00:29,400 --> 00:00:32,512
括号之间的每次迭代，

11
00:00:33,960 --> 00:00:35,720
然后加一个逗号。

12
00:00:35,720 --> 00:00:38,370
现在你可以在这里添加第二个项目，

13
00:00:38,370 --> 00:00:39,480
给它任何你想要的名字，

14
00:00:39,480 --> 00:00:43,690
像 index 或 idx 并继续前进。

15
00:00:43,690 --> 00:00:47,140
索引在这里，这将是这个项目的索引。

16
00:00:47,140 --> 00:00:49,940
这是 Vue 支持的另一个语法，

17
00:00:49,940 --> 00:00:51,800
得到的不仅仅是物品本身，

18
00:00:51,800 --> 00:00:54,583
而且它的索引也带有这种表示法。

19
00:00:56,360 --> 00:00:59,270
现在我们可以在这里添加一个破折号

20
00:00:59,270 --> 00:01:02,830
这不是特殊的 Vue 语法，这只是一个破折号。

21
00:01:02,830 --> 00:01:07,480
然后再次对所有输出索引添加插值，

22
00:01:07,480 --> 00:01:08,483
如果我们愿意。

23
00:01:09,520 --> 00:01:11,370
我会尽快重新格式化。

24
00:01:11,370 --> 00:01:13,840
如果我保存并重新加载，

25
00:01:13,840 --> 00:01:17,350
如果我开始添加目标，你会看到这里，

26
00:01:17,350 --> 00:01:19,510
它的索引为零，因为它是

27
00:01:19,510 --> 00:01:24,510
我添加的第一个目标，Vue 大师有 index one，依此类推。

28
00:01:24,530 --> 00:01:26,660
所以这在某些情况下也很有用

29
00:01:26,660 --> 00:01:28,223
你需要索引的地方。

30
00:01:29,310 --> 00:01:34,260
现在，您不仅可以循环遍历数组。

31
00:01:34,260 --> 00:01:37,450
您还可以遍历对象。

32
00:01:37,450 --> 00:01:42,170
现在在这里，goals 是一个数组，你可能会最

33
00:01:42,170 --> 00:01:45,080
经常循环遍历数组，

34
00:01:45,080 --> 00:01:47,450
但如果你有不同的情况，

35
00:01:47,450 --> 00:01:50,460
您还可以遍历对象。

36
00:01:50,460 --> 00:01:53,100
我将在此处快速添加第二个后续列表

37
00:01:53,100 --> 00:01:57,630
带有第二个列表项和第二个 v-for。

38
00:01:57,630 --> 00:02:00,560
在这里我想循环一个对象，

39
00:02:00,560 --> 00:02:03,570
我有我的名字和年龄。

40
00:02:03,570 --> 00:02:05,420
你当然可以创建

41
00:02:05,420 --> 00:02:07,970
在 Vue 应用程序的数据属性中，

42
00:02:07,970 --> 00:02:11,200
我在这里用 HTML 做，又快又脏。

43
00:02:11,200 --> 00:02:13,340
但当然，如果这将是一个真正的应用程序

44
00:02:13,340 --> 00:02:15,760
和一个真实的例子，你可能想移动它

45
00:02:15,760 --> 00:02:17,363
进入你的 JavaScript 代码。

46
00:02:18,950 --> 00:02:20,920
但是现在我们在这里有了这个对象，

47
00:02:20,920 --> 00:02:24,218
我想遍历它和它的属性。

48
00:02:24,218 --> 00:02:26,550
v-for 也支持这一点。

49
00:02:26,550 --> 00:02:30,000
同样，使用 in 关键字，在这里

50
00:02:30,000 --> 00:02:32,970
顺便说一句，我不得不重新加载，这就是为什么它是空的

51
00:02:32,970 --> 00:02:33,803
又在右边，

52
00:02:33,803 --> 00:02:37,450
但是在这里您现在可以存储不同的值

53
00:02:37,450 --> 00:02:41,080
在不同的属性和输出之间

54
00:02:41,980 --> 00:02:44,690
再次使用插值的列表文本。

55
00:02:44,690 --> 00:02:47,980
如果你保存并重新加载，你会看到 Max 和 31，

56
00:02:47,980 --> 00:02:51,043
因为这些是这些属性的值。

57
00:02:53,250 --> 00:02:54,820
现在，您如何获得

58
00:02:54,820 --> 00:02:57,440
遍历数组的索引，

59
00:02:57,440 --> 00:02:59,340
您还可以获得密钥名称

60
00:02:59,340 --> 00:03:01,370
遍历对象时，

61
00:03:01,370 --> 00:03:03,480
通过将其包裹在括号中，

62
00:03:03,480 --> 00:03:05,810
然后是你可以拉出的第二个元素

63
00:03:05,810 --> 00:03:07,960
这个循环是关键。

64
00:03:07,960 --> 00:03:11,130
所以在这里，你也可以输出

65
00:03:11,130 --> 00:03:14,930
插值的关键，然后可能是冒号，

66
00:03:14,930 --> 00:03:17,830
它只有纯文本，然后是值。

67
00:03:17,830 --> 00:03:21,813
现在你会看到姓名、冒号、Max、年龄、冒号、31。

68
00:03:24,530 --> 00:03:25,880
如果你需要它，

69
00:03:25,880 --> 00:03:28,130
你也可以在这里获取索引，

70
00:03:28,130 --> 00:03:31,770
当然，这种情况可能很少发生，

71
00:03:31,770 --> 00:03:33,830
但这也在这里得到支持。

72
00:03:33,830 --> 00:03:37,490
所以你也可以通过添加它来获取索引

73
00:03:37,490 --> 00:03:41,810
作为这里的第三个元素，如果你正在循环对象。

74
00:03:41,810 --> 00:03:44,970
对于这个演示应用程序，我们真的不需要它，

75
00:03:44,970 --> 00:03:47,050
但当然这对你很重要

76
00:03:47,050 --> 00:03:49,850
要知道 v-for 可以做什么。

77
00:03:49,850 --> 00:03:52,030
好吧，循环遍历对象

78
00:03:52,030 --> 00:03:54,370
是它可以做的事情之一。

79
00:03:54,370 --> 00:03:56,420
尽管如此，我还是要对此发表评论

80
00:03:56,420 --> 00:03:57,770
因为我们这里不需要它，

81
00:03:57,770 --> 00:03:59,290
但你应该意识到这一点。

82
00:03:59,290 --> 00:04:00,800
你应该意识到一个事实

83
00:04:00,800 --> 00:04:04,260
v-for 也可以与对象一起使用，

84
00:04:04,260 --> 00:04:07,330
并且您可以检索该值或该值

85
00:04:07,330 --> 00:04:11,453
以及键或值、键和索引（如果需要）。

86
00:04:13,640 --> 00:04:17,000
你可以用 v-for 做的另一件事，

87
00:04:17,000 --> 00:04:20,019
是您可以遍历一系列数字。

88
00:04:20,019 --> 00:04:22,163
你也可以这样使用，

89
00:04:23,540 --> 00:04:27,560
然后输出数字 1 到 10，例如。

90
00:04:27,560 --> 00:04:29,620
所以每当你需要这样的东西时，

91
00:04:29,620 --> 00:04:31,610
循环遍历一系列数字

92
00:04:31,610 --> 00:04:34,270
只需将 v-for 与 in 一起使用，

93
00:04:34,270 --> 00:04:37,700
然后是一些数字，这也有效。

94
00:04:37,700 --> 00:04:39,470
再说一次，这里不是我们需要的东西，

95
00:04:39,470 --> 00:04:42,000
但是你应该知道的事情，因为好吧，

96
00:04:42,000 --> 00:04:44,430
这也是你可以用 v-for 做的事情，

97
00:04:44,430 --> 00:04:46,680
谁知道呢，也许你确实需要

98
00:04:46,680 --> 00:04:49,930
这种行为在您的下一个应用程序中。

99
00:04:49,930 --> 00:04:52,430
但是，我将对此发表评论

100
00:04:52,430 --> 00:04:55,480
我要回到我们的演示应用程序

101
00:04:55,480 --> 00:04:59,970
有了这里的课程目标，我们现在可以添加目标

102
00:04:59,970 --> 00:05:03,860
并将它们输出到我们的列表中，这很棒。

103
00:05:03,860 --> 00:05:07,240
现在让我们也确保我们可以删除项目

104
00:05:07,240 --> 00:05:10,313
从列表中，使这真正动态。