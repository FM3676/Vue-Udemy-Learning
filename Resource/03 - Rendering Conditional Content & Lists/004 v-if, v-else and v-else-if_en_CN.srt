1
00:00:02,070 --> 00:00:04,050
有几件事值得了解

2
00:00:04,050 --> 00:00:08,130
关于 v-if。一方面，你可以在这里有任何表达

3
00:00:08,130 --> 00:00:10,780
处理真值或假值，

4
00:00:10,780 --> 00:00:13,260
就像在常规 if 语句中一样。

5
00:00:13,260 --> 00:00:16,010
在这里，你也可以检查任何你想要的，

6
00:00:16,010 --> 00:00:18,890
它会被解释为真或假

7
00:00:18,890 --> 00:00:21,180
通过 JavaScript。你当然可以，

8
00:00:21,180 --> 00:00:26,180
还将此处的条件与有效的 end 或 or 结合起来。

9
00:00:27,510 --> 00:00:30,020
您还可以指向计算属性，

10
00:00:30,020 --> 00:00:32,540
您可以指向数据属性，

11
00:00:32,540 --> 00:00:34,130
你可以在这里执行一个方法

12
00:00:34,130 --> 00:00:38,270
只要该方法返回一个真值或假值。

13
00:00:38,270 --> 00:00:39,733
那都是可能的。

14
00:00:40,640 --> 00:00:44,230
但除此之外，这应该是相当明显的，

15
00:00:44,230 --> 00:00:48,090
因为它真的就像在你的 HTML 代码中一样，

16
00:00:48,090 --> 00:00:52,460
所以它就像在 JavaScript 中只是在 HTML 中一样工作。

17
00:00:52,460 --> 00:00:56,010
但除此之外，还有另一个指令

18
00:00:56,010 --> 00:00:59,560
您可以与 v-if 结合使用。因为，当然，

19
00:00:59,560 --> 00:01:03,310
我们不只是想有条件地展示这一段，

20
00:01:03,310 --> 00:01:06,090
我们还想有条件地显示列表。

21
00:01:06,090 --> 00:01:10,600
而且，如果我们确实有目标，我们只想显示此列表。

22
00:01:10,600 --> 00:01:12,590
这意味着我们也可以添加 v-if if ，

23
00:01:12,590 --> 00:01:16,040
我们可以检查目标长度是否大于零。

24
00:01:16,040 --> 00:01:18,490
因为只有当它大于零时，

25
00:01:18,490 --> 00:01:21,130
只有这样我们才能显示这个列表。

26
00:01:21,130 --> 00:01:22,390
如果我们保存并重新加载，

27
00:01:22,390 --> 00:01:24,993
因此，我们最初只看到该段落。

28
00:01:25,980 --> 00:01:27,830
但如果我再添加一个目标，

29
00:01:27,830 --> 00:01:29,850
该段消失。相反，

30
00:01:29,850 --> 00:01:32,863
我们最初会看到带有该虚拟目标的列表。

31
00:01:34,670 --> 00:01:37,570
这行得通，没有任何问题。

32
00:01:37,570 --> 00:01:41,640
但是，本质上，这有点像 else 的情况

33
00:01:41,640 --> 00:01:43,700
在 JavaScript if 语句中，对吗？

34
00:01:43,700 --> 00:01:47,060
而且，您还可以拥有 else 甚至 else if。

35
00:01:47,060 --> 00:01:49,123
JavaScript 都支持这些。

36
00:01:50,030 --> 00:01:54,520
而且，Vue 还通过其指令在 HTML 中支持这一点。

37
00:01:54,520 --> 00:01:57,790
而不是在这里重复 v-if，你可以这样做。

38
00:01:57,790 --> 00:02:01,830
但您也可以指定 v-else，而不是这样做。

39
00:02:01,830 --> 00:02:05,880
唯一重要的是必须使用 v-else

40
00:02:05,880 --> 00:02:09,360
在紧随其后的元素上

41
00:02:09,360 --> 00:02:11,870
一个带有 v-if 的元素。

42
00:02:11,870 --> 00:02:14,320
你不能在两者之间有另一个元素。

43
00:02:14,320 --> 00:02:16,380
如果我们中间有一段，

44
00:02:16,380 --> 00:02:17,773
那是行不通的。

45
00:02:18,660 --> 00:02:23,660
V-else 需要用于直接相邻元素

46
00:02:23,750 --> 00:02:25,720
具有 v-if 的元素。

47
00:02:25,720 --> 00:02:28,960
这行得通，中间的一个元素打破了它。

48
00:02:28,960 --> 00:02:30,450
但是有了这个我可以重新加载

49
00:02:31,330 --> 00:02:33,653
并获得与以前相同的行为。

50
00:02:34,530 --> 00:02:36,460
现在，有时你也有场景

51
00:02:36,460 --> 00:02:39,740
您有多种可能的条件。

52
00:02:39,740 --> 00:02:43,670
而且，这就是为什么你也会有一个 v-else-if 条件，

53
00:02:43,670 --> 00:02:46,280
你可以在哪里检查目标长度是否是，比方说，

54
00:02:46,280 --> 00:02:50,270
大于零。然后你可以有另一个元素

55
00:02:50,270 --> 00:02:52,810
用 v-else 以防万一，

56
00:02:52,810 --> 00:02:57,050
你的后备内容没有满足这一点。

57
00:02:57,050 --> 00:03:00,370
在这种情况下，这将产生一个负长度，

58
00:03:00,370 --> 00:03:02,060
当然，这不可能发生，

59
00:03:02,060 --> 00:03:04,880
但我只是举个例子。

60
00:03:04,880 --> 00:03:09,880
因此，可以使用 v-if、v-else-if 和 v-else 来控制

61
00:03:10,520 --> 00:03:14,140
您的 HTML 代码的哪些部分

62
00:03:14,140 --> 00:03:17,690
真的出现在最后一页。

63
00:03:17,690 --> 00:03:19,320
而且，我想强调

64
00:03:19,320 --> 00:03:22,000
这不仅仅是展示和隐藏东西。

65
00:03:22,000 --> 00:03:25,470
这是r尤其是关于在 DOM 中包含这些元素

66
00:03:25,470 --> 00:03:26,830
或不包括他们。

67
00:03:26,830 --> 00:03:30,170
这实际上是关于连接和分离。

68
00:03:30,170 --> 00:03:32,690
如果您检查本段，

69
00:03:32,690 --> 00:03:37,170
你，当然，看到这一段就在那里，

70
00:03:37,170 --> 00:03:38,863
但它下面没有列表。

71
00:03:39,800 --> 00:03:43,820
现在，如果我添加一个目标，比如完成课程，

72
00:03:43,820 --> 00:03:45,910
观察当我按下按钮时会发生什么。

73
00:03:45,910 --> 00:03:48,070
在右侧观看。

74
00:03:48,070 --> 00:03:51,310
你看，现在添加了未读列表，

75
00:03:51,310 --> 00:03:54,063
该段完全消失了。

76
00:03:54,980 --> 00:03:57,350
现在，由于结合了 v-if 和 v-else，

77
00:03:57,350 --> 00:04:00,800
顺便说一句，Vue 也不再需要占位符了。

78
00:04:00,800 --> 00:04:02,720
但这只是一个旁注。

79
00:04:02,720 --> 00:04:03,710
所以，这就是 v-if，

80
00:04:03,710 --> 00:04:06,100
它非常非常有用

81
00:04:06,100 --> 00:04:08,210
用于有条件地显示内容，

82
00:04:08,210 --> 00:04:11,130
原来是你需要的东西

83
00:04:11,130 --> 00:04:13,770
在您要构建的许多应用程序中。

84
00:04:13,770 --> 00:04:16,683
而且，这就是用 Vue 实现它是多么容易。