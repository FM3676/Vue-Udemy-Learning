1
00:00:02,110 --> 00:00:03,420
现在这里有一个讲座

2
00:00:03,420 --> 00:00:06,680
我建议您不要跳过此模块

3
00:00:06,680 --> 00:00:08,950
因为我要向你展示另一种方式

4
00:00:08,950 --> 00:00:12,493
从这样的输入元素中获取值。

5
00:00:13,340 --> 00:00:16,000
到目前为止，我们正在监听输入事件，

6
00:00:16,000 --> 00:00:19,938
因此，每次击键都会触发 saveInput，

7
00:00:19,938 --> 00:00:22,229
在 saveInput 方法中，

8
00:00:22,229 --> 00:00:26,260
INDN 只是保存了输入的当前值

9
00:00:26,260 --> 00:00:29,090
到当前用户输入数据属性，

10
00:00:29,090 --> 00:00:32,670
这样我们最终可以在以后使用该属性

11
00:00:32,670 --> 00:00:36,750
将输入的值分配给我们的消息。

12
00:00:36,750 --> 00:00:39,070
或者，正如您之前所学，

13
00:00:39,070 --> 00:00:44,070
我们也可以使用 v-model 并绑定它

14
00:00:44,150 --> 00:00:48,880
像这样到我们当前的用户输入属性。

15
00:00:48,880 --> 00:00:50,650
这也是你学到的东西

16
00:00:50,650 --> 00:00:51,820
在之前的课程中，

17
00:00:51,820 --> 00:00:55,163
那么我们可以在这里省略这个输入绑定。

18
00:00:56,730 --> 00:00:58,620
但无论我们使用什么方法，

19
00:00:58,620 --> 00:01:03,600
我们基本上记录用户每次击键输入的内容。

20
00:01:03,600 --> 00:01:06,160
有时这正是您所需要的，例如，

21
00:01:06,160 --> 00:01:08,860
因为你想验证用户输入

22
00:01:08,860 --> 00:01:10,550
每次击键，

23
00:01:10,550 --> 00:01:13,260
但有时这只是矫枉过正，

24
00:01:13,260 --> 00:01:16,140
在这种情况下，Vue 有一个特性

25
00:01:16,140 --> 00:01:20,010
允许您从 DOM 元素中检索值

26
00:01:20,010 --> 00:01:23,420
当你需要它们时，而不是一直。

27
00:01:23,420 --> 00:01:25,920
该功能称为 refs。

28
00:01:25,920 --> 00:01:27,610
这是您添加它的方法。

29
00:01:27,610 --> 00:01:30,020
而不是添加此事件侦听器，

30
00:01:30,020 --> 00:01:32,120
您仍然可以添加，

31
00:01:32,120 --> 00:01:34,980
但我们现在根本不再需要它，

32
00:01:34,980 --> 00:01:36,230
而不是那个，

33
00:01:36,230 --> 00:01:39,680
你给这个元素添加一个特殊的属性，

34
00:01:39,680 --> 00:01:40,993
ref 属性。

35
00:01:42,510 --> 00:01:44,550
就像 key 属性一样，

36
00:01:44,550 --> 00:01:47,310
我们之前在 V4 中使用过的，

37
00:01:47,310 --> 00:01:51,900
ref 属性是一个非默认的 HTML 属性。

38
00:01:51,900 --> 00:01:53,760
所以浏览器不知道，

39
00:01:53,760 --> 00:01:56,070
但是 Vue 理解它。

40
00:01:56,070 --> 00:01:57,840
你在这里分配一个值，

41
00:01:57,840 --> 00:02:00,790
这是您选择的任何字符串标识符，

42
00:02:00,790 --> 00:02:03,063
例如，用户文本。

43
00:02:04,340 --> 00:02:06,430
但是，这完全取决于您。

44
00:02:06,430 --> 00:02:09,979
而且您还可以不只是将 refs 添加到输入元素，

45
00:02:09,979 --> 00:02:13,130
您可以将它们添加到任何 HTML 元素中，

46
00:02:13,130 --> 00:02:15,670
到段落，标题，部分，

47
00:02:15,670 --> 00:02:19,060
输入，文本区域，无论你需要什么。

48
00:02:19,060 --> 00:02:21,020
现在，我为什么要这样做？

49
00:02:21,020 --> 00:02:26,020
因为 Vue 会检测到这样的 refs 并将它们存储在内部。

50
00:02:26,390 --> 00:02:28,810
它基本上记住了

51
00:02:28,810 --> 00:02:32,210
您想要访问输入元素。

52
00:02:32,210 --> 00:02:35,580
然后在 JavaScript 代码中，您可以获得此访问权限。

53
00:02:35,580 --> 00:02:37,150
在这里，在这种情况下，

54
00:02:37,150 --> 00:02:39,330
在 set text 方法中，

55
00:02:39,330 --> 00:02:42,710
因为那是我需要输入值的地方。

56
00:02:42,710 --> 00:02:45,800
而不是使用这种方法，

57
00:02:45,800 --> 00:02:50,450
我现在可以将此消息设置为等于此，

58
00:02:50,450 --> 00:02:54,460
现在是 Vue 提供的一个特殊属性，

59
00:02:54,460 --> 00:02:57,313
美元符号参考财产。

60
00:02:58,180 --> 00:03:01,850
美元符号 refs 是 Vue 提供的属性。

61
00:03:01,850 --> 00:03:06,380
Vue 提供的所有属性都以美元符号开头

62
00:03:06,380 --> 00:03:09,850
明确表示这是一个内置属性。

63
00:03:09,850 --> 00:03:14,200
这是一个充满键值对的对象

64
00:03:14,200 --> 00:03:17,370
其中键是参考标识符

65
00:03:17,370 --> 00:03:19,330
您在模板中设置，

66
00:03:19,330 --> 00:03:20,613
例如，用户文本。

67
00:03:21,630 --> 00:03:25,663
所以在这里我们可以访问点userText。

68
00:03:27,150 --> 00:03:31,600
这现在只是指向 DOM 对象

69
00:03:31,600 --> 00:03:33,830
对于这个输入t 元素。

70
00:03:33,830 --> 00:03:35,410
所以 JavaScript 对象，

71
00:03:35,410 --> 00:03:38,430
我们也可以在原生 JavaScript 中使用，

72
00:03:38,430 --> 00:03:41,083
当我们可以访问 DOM 元素时。

73
00:03:42,970 --> 00:03:46,680
所以现在在这里，我们可以访问完整的输入元素，

74
00:03:46,680 --> 00:03:48,740
并向你展示这意味着什么，

75
00:03:48,740 --> 00:03:52,263
我现在将其注释掉并将其记录到控制台。

76
00:03:53,300 --> 00:03:58,300
如果我们现在打开这个控制台并重新加载，

77
00:03:58,740 --> 00:04:01,250
然后单击，设置文本，

78
00:04:01,250 --> 00:04:04,530
您会看到整个输入元素都被锁定在这里。

79
00:04:04,530 --> 00:04:08,790
如果我们使用console.dir，而不是console.log，

80
00:04:08,790 --> 00:04:11,710
并单击，再次设置文本，重新加载后，

81
00:04:11,710 --> 00:04:14,520
这是可检查的对象，

82
00:04:14,520 --> 00:04:18,100
这实际上是 JavaScript 对象表示

83
00:04:18,100 --> 00:04:21,990
这个输入元素的所有属性。

84
00:04:21,990 --> 00:04:23,900
所以这不是 Vue 特定的，

85
00:04:23,900 --> 00:04:26,130
那是普通的 JavaScript 对象

86
00:04:26,130 --> 00:04:29,263
我们可以在任何 JavaScript 代码中使用和使用。

87
00:04:30,660 --> 00:04:34,290
例如，在这里，我们有这个 value 属性。

88
00:04:34,290 --> 00:04:37,060
本质上，我们在这里记录的对象

89
00:04:37,060 --> 00:04:40,800
与我们通过事件目标访问的相同，

90
00:04:40,800 --> 00:04:43,760
这就是为什么我们也可以在那里获得价值。

91
00:04:43,760 --> 00:04:46,570
但现在我们不是每次击键都这样做，

92
00:04:46,570 --> 00:04:49,860
但只有在发出 setText 时，

93
00:04:49,860 --> 00:04:51,470
当这个按钮发生时，

94
00:04:51,470 --> 00:04:53,830
单击设置文本按钮。

95
00:04:53,830 --> 00:04:56,410
所以现在我们可以在这里访问值。

96
00:04:56,410 --> 00:04:58,343
有了这个，如果我们重新加载，

97
00:04:59,810 --> 00:05:02,010
我将检测设置为，Vue 很棒，

98
00:05:02,010 --> 00:05:05,300
并单击，设置文本，这和以前一样，

99
00:05:05,300 --> 00:05:08,580
但现在我们不会在每次击键时记录输入，

100
00:05:08,580 --> 00:05:12,700
但我们只在该 refs 功能的帮助下提取它

101
00:05:12,700 --> 00:05:14,240
当我们需要它时。

102
00:05:14,240 --> 00:05:17,370
这就是为什么 refs 是一个值得了解的功能，

103
00:05:17,370 --> 00:05:19,743
以及为什么你不应该跳过这个讲座。