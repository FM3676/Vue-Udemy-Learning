1
00:00:02,250 --> 00:00:04,470
所以我们可以有多个应用程序，

2
00:00:04,470 --> 00:00:07,600
我已经提到我们控制不同的部分

3
00:00:07,600 --> 00:00:09,560
的 HTML 代码。

4
00:00:09,560 --> 00:00:11,630
现在当然不用说

5
00:00:11,630 --> 00:00:15,140
你不应该控制同一个 HTML 部分

6
00:00:15,140 --> 00:00:17,180
与不同的应用程序。

7
00:00:17,180 --> 00:00:19,120
而且你也不能使用一个应用程序

8
00:00:19,120 --> 00:00:21,760
控制多个 HTML 部分。

9
00:00:21,760 --> 00:00:24,880
这是每个应用程序一个 HTML 部分。

10
00:00:24,880 --> 00:00:27,770
而且，术语 HTML 部分

11
00:00:27,770 --> 00:00:32,770
或受控的 HTML 并不完全正确，尽管我使用了它，

12
00:00:33,710 --> 00:00:36,618
因为我认为这很容易理解。

13
00:00:36,618 --> 00:00:41,618
官方术语是通过安装您的应用程序的模板，

14
00:00:42,440 --> 00:00:47,440
你的 Vue 应用到 HTML 代码中 DOM 中的某个位置，

15
00:00:47,440 --> 00:00:50,700
您制作 HTML 代码的那一部分

16
00:00:50,700 --> 00:00:53,550
该 Vue 应用程序的模板。

17
00:00:53,550 --> 00:00:58,550
所以这部分是我们第一个 Vue 应用程序的模板

18
00:00:58,560 --> 00:01:03,420
与此选择器一起安装到本节，

19
00:01:03,420 --> 00:01:05,980
另一部分是模板

20
00:01:05,980 --> 00:01:08,600
我们的第二个 Vue 应用程序。

21
00:01:08,600 --> 00:01:11,690
我要强调这一点，因为我们也会听到

22
00:01:11,690 --> 00:01:14,870
稍后再讨论术语模板。

23
00:01:14,870 --> 00:01:18,630
也有不同的方式来定义你的模板

24
00:01:18,630 --> 00:01:19,680
的一个应用程序。

25
00:01:19,680 --> 00:01:22,550
这里绝对是最常见的，

26
00:01:22,550 --> 00:01:26,030
最方便的一种，编写 HTML 代码，

27
00:01:26,030 --> 00:01:28,770
然后将您的应用程序安装到它，

28
00:01:28,770 --> 00:01:30,360
这很有意义，

29
00:01:30,360 --> 00:01:34,130
但实际上，这不是添加模板的唯一方法，

30
00:01:34,130 --> 00:01:38,500
我想在这里展示这个作为应用程序二的例子。

31
00:01:38,500 --> 00:01:41,640
您还可以将模板添加到 Vue 应用程序

32
00:01:41,640 --> 00:01:44,830
通过添加模板选项

33
00:01:44,830 --> 00:01:48,623
到您的应用配置对象。

34
00:01:49,520 --> 00:01:52,890
这个模板选项需要一个字符串，

35
00:01:52,890 --> 00:01:55,070
并编写多行字符串

36
00:01:55,070 --> 00:01:57,980
有了这些，我将在这里使用反引号。

37
00:01:57,980 --> 00:02:00,600
真的只是为了让我可以编写多行代码。

38
00:02:00,600 --> 00:02:02,510
所以这些不是单引号，

39
00:02:02,510 --> 00:02:05,250
这是一个反引号，它是一个不同的字符

40
00:02:05,250 --> 00:02:07,080
在你的键盘上。

41
00:02:07,080 --> 00:02:11,240
现在我们可以，例如，在这里抓住这一段，

42
00:02:11,240 --> 00:02:13,770
并从 HTML 文件中剪切它，

43
00:02:13,770 --> 00:02:16,853
而是将其添加到此字符串中。

44
00:02:18,610 --> 00:02:21,820
现在这是第二个应用程序的模板，

45
00:02:21,820 --> 00:02:25,350
实际上，这也是之前的模板。

46
00:02:25,350 --> 00:02:28,970
我们控制了这个部分，所以里面的任何东西

47
00:02:28,970 --> 00:02:31,370
该部分是我们的模板。

48
00:02:31,370 --> 00:02:34,030
现在我只是用不同的方式定义这个。

49
00:02:34,030 --> 00:02:36,430
现在我们仍然需要挂载这个应用程序

50
00:02:36,430 --> 00:02:39,050
因为 Vue 仍然需要知道

51
00:02:39,050 --> 00:02:43,410
在哪里显示这个模板的实际值

52
00:02:43,410 --> 00:02:46,830
在屏幕上呈现最喜欢的一餐。

53
00:02:46,830 --> 00:02:50,560
所以我们仍然需要挂载它，否则 Vue 不会知道

54
00:02:50,560 --> 00:02:54,100
在页面上的何处添加此段落。

55
00:02:54,100 --> 00:02:56,280
但是如果我保存它并重新加载，

56
00:02:56,280 --> 00:02:58,430
你会看到和以前一样的输出。

57
00:02:58,430 --> 00:03:01,410
模板只是定义不同。

58
00:03:01,410 --> 00:03:03,930
现在实际上你会最

59
00:03:03,930 --> 00:03:07,230
经常使用我们到目前为止使用的方法。

60
00:03:07,230 --> 00:03:09,540
我们在那里得到更好的语法高亮，

61
00:03:09,540 --> 00:03:11,200
更容易理解，

62
00:03:11,200 --> 00:03:12,990
而且没有什么大理由

63
00:03:12,990 --> 00:03:15,453
使用这个基于字符串的模板。

64
00:03:16,300 --> 00:03:18,760
然而，我们将学习另一种方式

65
00:03:18,760 --> 00:03:23,680
定义模板和编写一般的 Vue 代码，

66
00:03:23,680 --> 00:03:25,540
在几个模块中，

67
00:03:25,540 --> 00:03:27,100
不是剧烈的变化，

68
00:03:27,100 --> 00:03:29,000
但这样做的更好方法。

69
00:03:29,000 --> 00:03:31,310
所以这也是我强调的原因

70
00:03:31,310 --> 00:03:33,653
这个模板部分现在已经。

71
00:03:34,970 --> 00:03:38,800
目前，只要注意这个模板概念，

72
00:03:38,800 --> 00:03:41,110
当然，这并没有错

73
00:03:41,110 --> 00:03:43,200
使用我们之前使用的方法，

74
00:03:43,200 --> 00:03:45,370
但是通过这种方法，我们

75
00:03:45,370 --> 00:03:48,040
最终做出了所有的内容

76
00:03:48,040 --> 00:03:52,620
Vue 控制的 HTML 部分的那个应用程序的模板

77
00:03:52,620 --> 00:03:53,963
控制那部分。