1
00:00:02,090 --> 00:00:03,770
There is another cool feature

2
00:00:03,770 --> 00:00:05,790
when it comes to Vue Components

3
00:00:05,790 --> 00:00:07,340
which once you know it,

4
00:00:07,340 --> 00:00:09,420
will give you way more options

5
00:00:09,420 --> 00:00:11,090
of structuring your code

6
00:00:11,090 --> 00:00:13,830
and splitting your code into multiple components

7
00:00:13,830 --> 00:00:16,740
and that would be the feature of slots.

8
00:00:16,740 --> 00:00:18,283
Now what are slots about?

9
00:00:19,320 --> 00:00:21,010
Let me show you an example.

10
00:00:21,010 --> 00:00:22,530
In Userinfo,

11
00:00:22,530 --> 00:00:26,593
we have this section with a header and a paragraph.

12
00:00:28,440 --> 00:00:32,143
In BadgeList we also have a section with some content.

13
00:00:33,440 --> 00:00:34,820
Now the content is different

14
00:00:34,820 --> 00:00:36,490
but there is one important thing

15
00:00:36,490 --> 00:00:38,360
which both components,

16
00:00:38,360 --> 00:00:41,250
BadgeList and UserInfo have in common

17
00:00:41,250 --> 00:00:42,910
and that's the section

18
00:00:42,910 --> 00:00:44,920
but actually not just a section

19
00:00:44,920 --> 00:00:48,740
but the section and the styling that's being applied

20
00:00:48,740 --> 00:00:49,863
to that section.

21
00:00:50,870 --> 00:00:53,300
You might remember in the last lecture,

22
00:00:53,300 --> 00:00:55,140
I copied the styling

23
00:00:55,140 --> 00:00:57,710
to ensure that the section has the same style

24
00:00:57,710 --> 00:00:59,293
in both components.

25
00:01:00,700 --> 00:01:01,650
Now of course,

26
00:01:01,650 --> 00:01:03,430
an alternative would have been

27
00:01:03,430 --> 00:01:05,820
to simply make section a global style

28
00:01:05,820 --> 00:01:07,280
here in App.vue

29
00:01:07,280 --> 00:01:08,970
where the style is not scoped

30
00:01:10,280 --> 00:01:12,230
but another alternative would be

31
00:01:12,230 --> 00:01:14,500
to create a standalone component

32
00:01:14,500 --> 00:01:16,700
which simply contains the section

33
00:01:16,700 --> 00:01:18,550
with the attached styling

34
00:01:18,550 --> 00:01:20,380
and which then is flexible

35
00:01:20,380 --> 00:01:22,543
regarding the content it receives.

36
00:01:23,830 --> 00:01:26,883
That could be something like a BaseCard component.

37
00:01:27,780 --> 00:01:29,070
Now the name is up to you

38
00:01:29,070 --> 00:01:30,480
but I'm naming it like this

39
00:01:30,480 --> 00:01:32,870
because I want to create a certain look

40
00:01:32,870 --> 00:01:37,590
which is sometimes referred to as a Card Look in the web.

41
00:01:37,590 --> 00:01:39,950
Basically this look of having a drop shadow

42
00:01:39,950 --> 00:01:41,250
and rounded corners,

43
00:01:41,250 --> 00:01:43,990
this is often referred to as a Card Look

44
00:01:45,330 --> 00:01:47,360
and I'm going to create a component here

45
00:01:47,360 --> 00:01:49,720
which encapsulates that look

46
00:01:49,720 --> 00:01:53,520
so that we can easily reuse it wherever we want

47
00:01:53,520 --> 00:01:56,330
and for that here in this template,

48
00:01:56,330 --> 00:02:01,000
I will add a section like this,

49
00:02:01,000 --> 00:02:02,860
or maybe also just use a div

50
00:02:02,860 --> 00:02:05,910
to make it a bit more reusable semantically

51
00:02:05,910 --> 00:02:07,810
but that's just a minor thing.

52
00:02:07,810 --> 00:02:09,800
It doesn't really matter here

53
00:02:09,800 --> 00:02:12,020
and then I add my styling

54
00:02:12,020 --> 00:02:13,630
and important,

55
00:02:13,630 --> 00:02:15,580
I'm going to scope this styling

56
00:02:15,580 --> 00:02:17,713
by adding the scoped attribute.

57
00:02:18,850 --> 00:02:23,350
Now I'm going to copy over this section styling here

58
00:02:25,330 --> 00:02:26,740
to my BaseCard

59
00:02:28,000 --> 00:02:30,610
and change it from section to div of course

60
00:02:30,610 --> 00:02:32,660
because I'm now having a div here

61
00:02:34,930 --> 00:02:37,060
and now I want to make sure

62
00:02:37,060 --> 00:02:39,180
that the content in here

63
00:02:39,180 --> 00:02:41,250
can be anything we want.

64
00:02:41,250 --> 00:02:42,500
I basically just want

65
00:02:42,500 --> 00:02:44,610
to use this component as a wrapper

66
00:02:44,610 --> 00:02:46,720
with a certain style attached.

67
00:02:46,720 --> 00:02:48,650
Now how could we receive content

68
00:02:48,650 --> 00:02:50,663
from outside now though?

69
00:02:51,570 --> 00:02:53,490
Well we learned about props,

70
00:02:53,490 --> 00:02:55,513
we can add a script here,

71
00:02:59,960 --> 00:03:01,120
like this

72
00:03:01,120 --> 00:03:06,120
and then simply export our default JavaScript object

73
00:03:07,870 --> 00:03:10,010
and now accept some props here.

74
00:03:10,010 --> 00:03:12,110
But what would be our props?

75
00:03:12,110 --> 00:03:13,600
Would it be content

76
00:03:13,600 --> 00:03:17,080
and we then try to output content like this?

77
00:03:17,080 --> 00:03:18,670
That actually will not work

78
00:03:18,670 --> 00:03:22,130
because if we now wanna use our Card here,

79
00:03:22,130 --> 00:03:24,500
we can't pass in our HTML content

80
00:03:24,500 --> 00:03:26,950
with all those Vue features we're using.

81
00:03:26,950 --> 00:03:28,900
Let me show you what the problem is.

82
00:03:28,900 --> 00:03:31,510
Let's say we register this globally

83
00:03:31,510 --> 00:03:33,790
because we're going to use this Card

84
00:03:33,790 --> 00:03:35,450
in multiple places.

85
00:03:35,450 --> 00:03:36,750
So here in main.js

86
00:03:36,750 --> 00:03:38,640
we're going to register it like this

87
00:03:39,710 --> 00:03:40,950
and then here,

88
00:03:40,950 --> 00:03:42,070
with the app.component,

89
00:03:42,070 --> 00:03:45,240
we have our BaseCard like that

90
00:03:46,900 --> 00:03:48,540
and now in UserInfo

91
00:03:48,540 --> 00:03:49,760
I wanna use it.

92
00:03:49,760 --> 00:03:51,400
So I wanna in the end,

93
00:03:51,400 --> 00:03:54,467
wrap my content here with BaseCard like this,

94
00:03:57,640 --> 00:04:00,200
I'm not replacing the section with it

95
00:04:00,200 --> 00:04:02,570
but I put my BaseCard into it

96
00:04:02,570 --> 00:04:05,580
and then wrapping this content with BaseCard.

97
00:04:05,580 --> 00:04:08,300
This is however not how props work do they?

98
00:04:08,300 --> 00:04:10,700
If I save that,

99
00:04:10,700 --> 00:04:12,780
I now lost all the content

100
00:04:12,780 --> 00:04:15,620
because Vue doesn't know where to render this,

101
00:04:15,620 --> 00:04:18,950
I added it between the text of a custom component

102
00:04:18,950 --> 00:04:22,670
and well, how would you know what to do with that?

103
00:04:22,670 --> 00:04:23,983
Where to output it?

104
00:04:25,210 --> 00:04:28,530
After all our custom component has its own template.

105
00:04:28,530 --> 00:04:30,240
Yes it has a content prop

106
00:04:30,240 --> 00:04:33,093
but well Vue doesn't know what's in there.

107
00:04:35,330 --> 00:04:36,250
Now we could of course

108
00:04:36,250 --> 00:04:38,670
set content here equal to a string

109
00:04:38,670 --> 00:04:42,120
and pass this content here as a string to content

110
00:04:42,120 --> 00:04:45,533
but then this would no longer be able to use Vue features.

111
00:04:46,570 --> 00:04:48,830
So that's all not the solution,

112
00:04:48,830 --> 00:04:52,010
instead it's this slots feature which I mentioned.

113
00:04:52,010 --> 00:04:55,930
Vue has a special syntax for this exact scenario

114
00:04:55,930 --> 00:04:58,560
where you want to use your own component

115
00:04:58,560 --> 00:05:01,720
as a wrapper around dynamic content.

116
00:05:01,720 --> 00:05:04,680
So around different kinds of HTML content

117
00:05:05,910 --> 00:05:06,860
and for that,

118
00:05:06,860 --> 00:05:08,910
you simply go to your component

119
00:05:08,910 --> 00:05:10,500
that should be the wrapper.

120
00:05:10,500 --> 00:05:12,600
You don't use props in there

121
00:05:12,600 --> 00:05:15,740
but instead you use a special element,

122
00:05:15,740 --> 00:05:18,840
the slot element like this

123
00:05:20,900 --> 00:05:22,840
and if you now save that,

124
00:05:22,840 --> 00:05:24,410
you will see this works

125
00:05:24,410 --> 00:05:26,010
and we got the look we want

126
00:05:27,820 --> 00:05:29,420
and if I go to UserInfo,

127
00:05:29,420 --> 00:05:30,400
please keep in mind

128
00:05:30,400 --> 00:05:33,020
that I deleted the section styling here.

129
00:05:33,020 --> 00:05:36,210
So this look is really coming from our Card component

130
00:05:37,280 --> 00:05:39,160
and that's how slots work.

131
00:05:39,160 --> 00:05:43,250
They allow us to receive HTML content

132
00:05:43,250 --> 00:05:45,990
which also may be using Vue features

133
00:05:45,990 --> 00:05:48,143
from outside of the component.

134
00:05:49,300 --> 00:05:51,540
Basically just like props

135
00:05:51,540 --> 00:05:54,760
but where props are meant to be used for data,

136
00:05:54,760 --> 00:05:56,120
which a component needs,

137
00:05:56,120 --> 00:05:59,540
slots are meant to be used for HTML code

138
00:05:59,540 --> 00:06:02,293
for the template code a component needs.

139
00:06:03,260 --> 00:06:06,810
So here we now just provide a shell with some styling.

140
00:06:06,810 --> 00:06:08,510
We could also add some logic

141
00:06:08,510 --> 00:06:10,360
if this component needed to

142
00:06:10,360 --> 00:06:13,270
but we then allow the parent component

143
00:06:13,270 --> 00:06:15,700
to provide the HTML code

144
00:06:15,700 --> 00:06:17,680
that should be inside of that div

145
00:06:19,030 --> 00:06:21,903
and that's the core idea behind slots.

