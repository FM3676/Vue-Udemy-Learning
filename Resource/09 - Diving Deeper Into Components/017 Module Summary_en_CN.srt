1
00:00:02,440 --> 00:00:05,070
那是另一个长模块

2
00:00:05,070 --> 00:00:06,540
关于组件。

3
00:00:06,540 --> 00:00:08,800
但我们从未完成过组件。

4
00:00:08,800 --> 00:00:12,170
我们现在知道您需要了解的所有核心功能

5
00:00:12,170 --> 00:00:15,360
在下一个模块中，我们将练习

6
00:00:15,360 --> 00:00:17,700
我们在本文中学到的所有功能

7
00:00:17,700 --> 00:00:21,720
和前面的模块一起构建一个完整的项目。

8
00:00:21,720 --> 00:00:23,450
一个完整的应用程序。

9
00:00:23,450 --> 00:00:25,500
现在在这个模块中，我们看了一下

10
00:00:25,500 --> 00:00:28,320
组件注册和样式。

11
00:00:28,320 --> 00:00:30,060
你了解到组件

12
00:00:30,060 --> 00:00:34,120
可以在全球注册，也可以在本地注册。

13
00:00:34,120 --> 00:00:37,010
全局使用 app 组件方法，

14
00:00:37,010 --> 00:00:39,560
通过在本地导入并添加它们

15
00:00:39,560 --> 00:00:42,880
到冲突对象中的 components 选项

16
00:00:42,880 --> 00:00:45,040
组件或应用程序。

17
00:00:45,040 --> 00:00:49,160
对于大多数组件，您应该更喜欢本地注册。

18
00:00:49,160 --> 00:00:51,480
但是，如果您有正在使用的组件

19
00:00:51,480 --> 00:00:54,020
在您的应用程序之外的许多不同的地方，

20
00:00:54,020 --> 00:00:57,883
那么当然全局注册很有意义。

21
00:00:59,000 --> 00:01:00,680
我们还看了一下造型

22
00:01:00,680 --> 00:01:04,580
样式也可以是全局的或范围的。

23
00:01:04,580 --> 00:01:08,280
全局样式影响所有 HTML 元素，

24
00:01:08,280 --> 00:01:10,810
无论它们在哪个组件中。

25
00:01:10,810 --> 00:01:15,200
作用域样式只影响 HTML 元素

26
00:01:15,200 --> 00:01:19,770
在您使用它们的组件之外的模板中。

27
00:01:19,770 --> 00:01:23,560
您应该更喜欢大多数组件的范围样式。

28
00:01:23,560 --> 00:01:27,250
但绝对设置全球应用范围的样式，

29
00:01:27,250 --> 00:01:31,370
就像一个无范围样式标签中的字体系列

30
00:01:31,370 --> 00:01:33,323
在你的 app.Vue 文件中。

31
00:01:34,900 --> 00:01:39,050
我们还查看了插槽，这是另一个关键功能。

32
00:01:39,050 --> 00:01:42,270
插槽最终可以用作占位符

33
00:01:42,270 --> 00:01:44,280
用于动态 HTML 代码

34
00:01:44,280 --> 00:01:49,030
然后可以从外部将其插入组件中。

35
00:01:49,030 --> 00:01:50,930
您可以有单个插槽。

36
00:01:50,930 --> 00:01:52,760
你可以有多个插槽

37
00:01:52,760 --> 00:01:55,210
然后你还需要名字。

38
00:01:55,210 --> 00:01:58,680
只有一个插槽可以保持未命名。

39
00:01:58,680 --> 00:02:02,390
您可以为插槽提供默认内容，

40
00:02:02,390 --> 00:02:04,470
这将用作后备

41
00:02:04,470 --> 00:02:08,449
如果没有从外部为该插槽提供内容。

42
00:02:08,449 --> 00:02:10,960
我们了解了作用域插槽

43
00:02:10,960 --> 00:02:13,323
对于一些高级用例。

44
00:02:14,680 --> 00:02:17,280
插槽是另一个关键功能

45
00:02:17,280 --> 00:02:21,920
解锁说唱歌手组件，如卡片或对话框，

46
00:02:21,920 --> 00:02:25,503
您将在下一个模块中再次看到它们的作用。

47
00:02:26,590 --> 00:02:29,140
我们也有动态组件。

48
00:02:29,140 --> 00:02:31,820
动态组件是内置的功能

49
00:02:31,820 --> 00:02:34,933
使用内置组件查看解锁。

50
00:02:36,110 --> 00:02:38,700
这可以用来动态交换它

51
00:02:38,700 --> 00:02:41,320
对于您定义的不同组件。

52
00:02:41,320 --> 00:02:44,910
您还可以控制该组件的缓存

53
00:02:44,910 --> 00:02:47,570
使用内置的保持活动组件

54
00:02:47,570 --> 00:02:49,730
正如您在本模块中所学的那样。

55
00:02:49,730 --> 00:02:53,470
我们还将在下一个课程模块中使用此功能。

56
00:02:53,470 --> 00:02:55,903
因此，在我们将在那里构建的项目中。

57
00:02:57,290 --> 00:03:00,120
现在最后但并非最不重要的是，我们来看看瞬移

58
00:03:00,120 --> 00:03:02,300
和官方风格指南。

59
00:03:02,300 --> 00:03:06,780
Teleport 是另一个内置组件，可用于

60
00:03:06,780 --> 00:03:09,900
操作 DOM 结构和控制

61
00:03:09,900 --> 00:03:12,820
将某些东西添加到真实 DOM 的地方，

62
00:03:12,820 --> 00:03:15,100
同时保持您的组件层次结构。

63
00:03:15,100 --> 00:03:17,603
所以这不会被传送改变。

64
00:03:19,039 --> 00:03:19,872
最后但并非最不重要，

65
00:03:19,872 --> 00:03:22,360
我向您介绍了官方风格指南。

66
00:03:22,360 --> 00:03:25,030
您可能要考虑遵循

67
00:03:25,030 --> 00:03:26,810
或者至少看看它

68
00:03:26,810 --> 00:03:29,720
保持你的代码干净易懂。

69
00:03:29,720 --> 00:03:31,460
这就是这个模块的内容。

70
00:03:31,460 --> 00:03:33,670
在下一个模块中，我们将练习

71
00:03:33,670 --> 00:03:36,793
我们在这里和之前的模块中学到了什么。