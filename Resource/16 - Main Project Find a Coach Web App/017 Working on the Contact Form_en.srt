1
00:00:02,070 --> 00:00:04,520
So for the moment we got the coach part

2
00:00:04,520 --> 00:00:05,990
implemented pretty well,

3
00:00:05,990 --> 00:00:08,720
let's now move on to Requests.

4
00:00:08,720 --> 00:00:11,320
And with that, I mean that we can, for example,

5
00:00:11,320 --> 00:00:15,600
contact a coach and send the request from this page.

6
00:00:15,600 --> 00:00:18,150
Now, at the moment on this page, we always get a warning,

7
00:00:18,150 --> 00:00:20,670
but that warning will go away soon.

8
00:00:20,670 --> 00:00:22,840
So for the moment we can ignore that

9
00:00:22,840 --> 00:00:24,890
because that warnings should go away

10
00:00:24,890 --> 00:00:28,200
as soon as we replaced this text here

11
00:00:28,200 --> 00:00:33,200
in the Contact coach component with some actual HTML markup.

12
00:00:34,920 --> 00:00:36,180
So let's do that.

13
00:00:36,180 --> 00:00:38,810
In here, I want to render a contact form.

14
00:00:38,810 --> 00:00:39,643
So of course,

15
00:00:39,643 --> 00:00:42,770
a form element sounds about right to be rendered here.

16
00:00:42,770 --> 00:00:46,820
And in that form, I want to provide two inputs,

17
00:00:46,820 --> 00:00:48,970
one for an email address,

18
00:00:48,970 --> 00:00:51,710
which a user can enter to let the coach

19
00:00:51,710 --> 00:00:56,190
who is being contacted to know how to contact the user.

20
00:00:56,190 --> 00:00:58,850
So therefore we want to leave our email address,

21
00:00:58,850 --> 00:01:01,300
and we also want to send a message

22
00:01:01,300 --> 00:01:05,420
along with the email address to coach we're contacting.

23
00:01:05,420 --> 00:01:07,130
So therefore here I'll add a div

24
00:01:07,130 --> 00:01:09,653
and in that div add a label,

25
00:01:10,940 --> 00:01:15,940
which says your email and which is for an element

26
00:01:16,580 --> 00:01:18,490
with an ID of email.

27
00:01:18,490 --> 00:01:20,820
And that's the next element I add there after

28
00:01:20,820 --> 00:01:24,690
our input field of type email with an ID of email,

29
00:01:24,690 --> 00:01:27,763
which is added below this label.

30
00:01:29,120 --> 00:01:33,660
And then we can have another div here like that.

31
00:01:33,660 --> 00:01:38,540
And in that div I want to have another label for

32
00:01:38,540 --> 00:01:40,620
let's say the message.

33
00:01:40,620 --> 00:01:43,950
So for an element with ID message

34
00:01:43,950 --> 00:01:46,850
and I say message in that label,

35
00:01:46,850 --> 00:01:49,910
and then we want to render a text area here,

36
00:01:49,910 --> 00:01:52,920
let's say so that the message is,

37
00:01:52,920 --> 00:01:55,090
can be multi line and it's a bit easier

38
00:01:55,090 --> 00:01:57,490
to enter a longer texts.

39
00:01:57,490 --> 00:02:00,050
So therefore here I'll have five rows,

40
00:02:00,050 --> 00:02:03,403
let's say, and give this an ideal message.

41
00:02:04,500 --> 00:02:07,910
And then below that, I'll add another div

42
00:02:09,940 --> 00:02:12,210
with a class of actions,

43
00:02:12,210 --> 00:02:15,560
which will be important for styling later.

44
00:02:15,560 --> 00:02:17,763
I will provide some styles to you though.

45
00:02:18,950 --> 00:02:21,800
And in there I want to render a button.

46
00:02:21,800 --> 00:02:22,633
And of course,

47
00:02:22,633 --> 00:02:24,870
here we can use our base button component,

48
00:02:24,870 --> 00:02:26,980
which we created a while ago,

49
00:02:26,980 --> 00:02:30,230
and in there, say, send message.

50
00:02:30,230 --> 00:02:32,020
Now to these other divs,

51
00:02:32,020 --> 00:02:36,050
I actually want to enter, add a class of form control.

52
00:02:36,050 --> 00:02:39,820
So add that to the first and the second div

53
00:02:39,820 --> 00:02:43,270
that holds an input, and now we can add some styling.

54
00:02:43,270 --> 00:02:45,850
So for that let's add scoped styling.

55
00:02:45,850 --> 00:02:47,150
And as always,

56
00:02:47,150 --> 00:02:50,950
you find styles attached to this lecture here,

57
00:02:50,950 --> 00:02:54,780
you find the contact coach CSS file,

58
00:02:54,780 --> 00:02:55,980
which contains the styles

59
00:02:55,980 --> 00:03:00,150
you can copy and paste into these scoped style text

60
00:03:00,150 --> 00:03:02,053
in the contact coach component.

61
00:03:04,370 --> 00:03:07,363
And that will give this form some general styling.

62
00:03:08,820 --> 00:03:12,460
Now, of course, this is not just about markup and styling,

63
00:03:12,460 --> 00:03:14,980
but we also need a script for some logic.

64
00:03:14,980 --> 00:03:19,510
We want to fetch the inputs for email and message.

65
00:03:19,510 --> 00:03:23,450
We probably want to do some kind of validation.

66
00:03:23,450 --> 00:03:26,400
It's up to you if it should be as detailed

67
00:03:26,400 --> 00:03:29,180
as on the coach registration page or not,

68
00:03:29,180 --> 00:03:31,040
but some validation won't hurt.

69
00:03:31,040 --> 00:03:34,080
And ultimately once we got a valid input,

70
00:03:34,080 --> 00:03:36,660
we want to do something with that input,

71
00:03:36,660 --> 00:03:39,060
and we want to, in the end, create a new message,

72
00:03:39,060 --> 00:03:43,040
which is attached to the coach to whom the message is sent.

73
00:03:43,040 --> 00:03:44,970
That's the idea here.

74
00:03:44,970 --> 00:03:46,370
So therefore in this script,

75
00:03:46,370 --> 00:03:48,620
I'll start by adding some data

76
00:03:48,620 --> 00:03:51,960
because we definitely want to manage some data here.

77
00:03:51,960 --> 00:03:54,180
And the data we definitely want to manage

78
00:03:54,180 --> 00:03:57,550
is the email address and the message.

79
00:03:57,550 --> 00:03:58,830
I guess that makes sense

80
00:03:58,830 --> 00:04:01,403
because these are the two inputs we got here.

81
00:04:02,440 --> 00:04:03,910
But in addition to that,

82
00:04:03,910 --> 00:04:08,910
here I will also add a form is valid, data property,

83
00:04:10,460 --> 00:04:12,430
and set it to true initially.

84
00:04:12,430 --> 00:04:14,620
And this should be set to false

85
00:04:14,620 --> 00:04:19,012
if either the email address or text area is invalid.

86
00:04:20,490 --> 00:04:22,420
So as a next step,

87
00:04:22,420 --> 00:04:26,840
we can add methods here to this object here,

88
00:04:26,840 --> 00:04:29,140
to this component, conflict object,

89
00:04:29,140 --> 00:04:33,130
and a submit form method sounds about right,

90
00:04:33,130 --> 00:04:35,560
because that's the method that should be triggered

91
00:04:35,560 --> 00:04:37,380
when the form is submitted.

92
00:04:37,380 --> 00:04:41,260
And of course we can therefore add a submit event handler

93
00:04:41,260 --> 00:04:45,120
to this form and prevent the browser default

94
00:04:45,120 --> 00:04:47,420
as we did as many times before in the course,

95
00:04:47,420 --> 00:04:52,313
and then point at submit form when this form is submitted.

96
00:04:54,340 --> 00:04:57,800
So inside of submit form, I now want to validate,

97
00:04:57,800 --> 00:05:00,070
and if the data is valid,

98
00:05:00,070 --> 00:05:02,890
create a new message or ensured

99
00:05:02,890 --> 00:05:05,730
that a new message is created somehow.

100
00:05:05,730 --> 00:05:08,010
So let's start with validation.

101
00:05:08,010 --> 00:05:10,850
First of all, I'll set form is valid to true

102
00:05:10,850 --> 00:05:13,600
so that if it was false in between,

103
00:05:13,600 --> 00:05:16,600
we now clear any error message we might be showing.

104
00:05:16,600 --> 00:05:19,423
We're not showing one yet, but we will soon do that.

105
00:05:20,690 --> 00:05:24,400
So as a next step, we can then check if this email

106
00:05:24,400 --> 00:05:25,993
is empty, let's say,

107
00:05:27,060 --> 00:05:29,120
or if this email

108
00:05:30,260 --> 00:05:33,900
includes no at symbol.

109
00:05:33,900 --> 00:05:35,930
So here I checked for the opposite.

110
00:05:35,930 --> 00:05:39,260
If it does not include an at symbol,

111
00:05:39,260 --> 00:05:43,150
or if this message is empty.

112
00:05:43,150 --> 00:05:44,940
If either of that's the case,

113
00:05:44,940 --> 00:05:49,090
then I want to set this form is valid to false

114
00:05:49,090 --> 00:05:53,193
and return so that the rest of this method doesn't execute.

115
00:05:55,240 --> 00:05:57,940
So now that we manage this validity,

116
00:05:57,940 --> 00:06:00,330
I want to do two things in the markup,

117
00:06:00,330 --> 00:06:04,100
For one, I want to bind my input and my text area

118
00:06:04,100 --> 00:06:07,080
to email and message with two way binding

119
00:06:07,080 --> 00:06:10,430
so that this is updated with every keystroke,

120
00:06:10,430 --> 00:06:14,490
and I want to show an error message if the form is invalid.

121
00:06:14,490 --> 00:06:17,590
Now we'll start with the two way binding with V model.

122
00:06:17,590 --> 00:06:19,970
I'll automatically trim the input

123
00:06:19,970 --> 00:06:22,550
and then point at email here

124
00:06:22,550 --> 00:06:25,910
and on the text area, all to trimming it,

125
00:06:25,910 --> 00:06:27,143
point at message.

126
00:06:29,180 --> 00:06:32,130
And then we can show an error as well

127
00:06:32,130 --> 00:06:35,860
by adding a paragraph here, for example, above the button,

128
00:06:35,860 --> 00:06:38,750
which has a class of errors,

129
00:06:38,750 --> 00:06:41,640
which should be shown with V-if

130
00:06:41,640 --> 00:06:45,600
if forum is valid is false,

131
00:06:45,600 --> 00:06:47,263
so if it's not true,

132
00:06:48,340 --> 00:06:50,880
and then here you can output any message you want.

133
00:06:50,880 --> 00:06:55,880
I'll say, please enter a valid email and non empty message.

134
00:06:58,720 --> 00:07:02,430
So this is a less complex validation approach

135
00:07:02,430 --> 00:07:05,000
than we took it in coach registration,

136
00:07:05,000 --> 00:07:07,300
but that of course is always a perfectly fine way

137
00:07:07,300 --> 00:07:08,133
of doing it.

138
00:07:08,133 --> 00:07:10,980
And ultimately it comes down to your requirements

139
00:07:10,980 --> 00:07:15,003
and your preferences, how you want to validate a form.

140
00:07:15,960 --> 00:07:17,760
With that, however, we are validating,

141
00:07:17,760 --> 00:07:20,270
we are fetching the input values,

142
00:07:20,270 --> 00:07:23,460
and if we make it past this validation here,

143
00:07:23,460 --> 00:07:26,490
then we want to create this message.

144
00:07:26,490 --> 00:07:28,400
And now of course the question is,

145
00:07:28,400 --> 00:07:32,473
what exactly does create a message mean in this app?

146
00:07:33,360 --> 00:07:36,620
Well, keep in mind that we have this Requests page

147
00:07:36,620 --> 00:07:39,180
where we want to show all the requests

148
00:07:39,180 --> 00:07:41,513
we as a coach received.

149
00:07:42,530 --> 00:07:45,640
So that of course requires us to be registered as a coach.

150
00:07:45,640 --> 00:07:49,960
But once we are, if we as a coach receive a message,

151
00:07:49,960 --> 00:07:51,710
it should show up here.

152
00:07:51,710 --> 00:07:54,443
And that of course means that in the end a message,

153
00:07:54,443 --> 00:07:58,290
a request is just another piece of data

154
00:07:58,290 --> 00:08:00,800
we want to manage in this Vue application

155
00:08:00,800 --> 00:08:04,010
and therefore probably with VueX.

156
00:08:04,010 --> 00:08:06,893
So let's do this in the next lecture.

