1
00:00:02,100 --> 00:00:03,410
所以现在我们有了一个计划

2
00:00:03,410 --> 00:00:05,560
当然是实施它的时候了

3
00:00:05,560 --> 00:00:07,230
并编写我们需要的代码。

4
00:00:07,230 --> 00:00:10,497
在这里我想开始设置

5
00:00:10,497 --> 00:00:14,400
发送到此应用程序所需页面的路由。

6
00:00:14,400 --> 00:00:17,880
然后我想继续构建所有核心组件

7
00:00:17,880 --> 00:00:22,240
我们现在需要，然后我想慢慢地一步一步，

8
00:00:22,240 --> 00:00:26,180
添加数据和我们需要的功能。

9
00:00:26,180 --> 00:00:27,720
因此，首先，

10
00:00:27,720 --> 00:00:31,230
我将在一个新项目中安装两个额外的包，

11
00:00:31,230 --> 00:00:33,410
顺便说一下，你又发现了它，

12
00:00:33,410 --> 00:00:35,600
你发现这个基本项目设置好了，

13
00:00:35,600 --> 00:00:39,210
它只有 Vue，没有其他附加内容

14
00:00:39,210 --> 00:00:40,370
到这个讲座

15
00:00:40,370 --> 00:00:44,220
但是在这个项目中现在全部设置 npm install

16
00:00:44,220 --> 00:00:45,870
用破折号保存，

17
00:00:45,870 --> 00:00:49,170
我将 npm 安装，查看仪表板路由器，

18
00:00:49,170 --> 00:00:51,240
并查看 X，这两个包，

19
00:00:51,240 --> 00:00:54,313
因为我们将在这个模块中同时使用两者。

20
00:00:55,470 --> 00:00:58,630
请注意，我们将下载并安装这两个包

21
00:00:58,630 --> 00:01:01,790
进入这个项目，一旦完成，

22
00:01:01,790 --> 00:01:02,720
我们可以同时使用

23
00:01:02,720 --> 00:01:05,660
但正如我所说，我将从路由开始。

24
00:01:05,660 --> 00:01:08,500
现在在这里，在主js旁边，

25
00:01:08,500 --> 00:01:11,483
我将添加一个路由器 js 文件，因为我想存储

26
00:01:11,483 --> 00:01:14,110
我所有的路线和我的路线逻辑在那里

27
00:01:14,110 --> 00:01:16,180
保持主要 JS 精益，

28
00:01:16,180 --> 00:01:19,030
因此，通常，或者首先，

29
00:01:19,030 --> 00:01:23,460
在此处从 Vue-router 导入创建路由器

30
00:01:23,460 --> 00:01:25,200
在路由器 js 文件中，

31
00:01:25,200 --> 00:01:29,110
然后通过调用 createRouter 创建一个路由器。

32
00:01:29,110 --> 00:01:31,480
然后我们将导出这个路由器

33
00:01:31,480 --> 00:01:33,790
这样我们就可以在我们的文件中使用它，

34
00:01:33,790 --> 00:01:37,060
即在主js文件中也是如此。

35
00:01:37,060 --> 00:01:39,350
现在您将学习如何配置路由器，

36
00:01:39,350 --> 00:01:42,100
你只需传递一个对象来创建路由器

37
00:01:42,100 --> 00:01:45,250
然后在这里我们添加我们的路线。

38
00:01:45,250 --> 00:01:47,960
现在你可能还记得除了路线，

39
00:01:47,960 --> 00:01:51,930
我们还需要在这里设置他的历史属性

40
00:01:51,930 --> 00:01:55,330
然后我们从视图路由器导入另一个功能

41
00:01:55,330 --> 00:01:58,220
那就是创建网络历史功能

42
00:01:58,220 --> 00:02:01,050
我们在这里调用这个函数

43
00:02:01,050 --> 00:02:04,630
然后设置调用该函数提供的值

44
00:02:04,630 --> 00:02:08,083
作为这里历史属性的值。

45
00:02:08,960 --> 00:02:12,410
有了它，我们可以在这里添加我们的路线数组

46
00:02:12,410 --> 00:02:13,840
对于路线属性

47
00:02:13,840 --> 00:02:16,720
在他们的设置中我们想要的所有路线。

48
00:02:16,720 --> 00:02:18,820
在这里我们制定了一个计划，对吧？

49
00:02:18,820 --> 00:02:21,050
我们考虑了几条路线

50
00:02:21,050 --> 00:02:22,470
我们需要的。

51
00:02:22,470 --> 00:02:24,600
所以我要在这里添加这些路线。

52
00:02:24,600 --> 00:02:27,340
这是一条斜线教练路线

53
00:02:27,340 --> 00:02:30,740
它应该稍后加载我们的教练组件。

54
00:02:30,740 --> 00:02:32,340
我们还没有那个组件

55
00:02:32,340 --> 00:02:34,610
所以目前我将其设置为空，

56
00:02:34,610 --> 00:02:38,123
但稍后我们会指出教练在这里有组件，

57
00:02:39,160 --> 00:02:44,160
除此之外，我们还希望教练削减ID路线

58
00:02:44,830 --> 00:02:48,770
其中路径的动态教练 ID 部分，

59
00:02:48,770 --> 00:02:52,363
然后我们加载不同教练的详细信息页面。

60
00:02:53,600 --> 00:02:55,853
所以这是我们想要的另一条路线。

61
00:02:57,000 --> 00:03:02,000
我们还希望在这里注册为教练的另一条途径。

62
00:03:05,880 --> 00:03:07,893
所以要报名当教练，

63
00:03:09,260 --> 00:03:10,710
这是我们需要的。

64
00:03:11,580 --> 00:03:15,870
我们需要一条可以联系教练的路线。

65
00:03:15,870 --> 00:03:18,270
现在这可能是斜线接触。

66
00:03:18,270 --> 00:03:20,370
但是，实际上我想说，

67
00:03:20,370 --> 00:03:24,450
我们想联系由 ID 标识的特定教练。

68
00:03:24,450 --> 00:03:25,850
所以也许那是什么

69
00:03:25,850 --> 00:03:28,200
我们甚至可以使用嵌套路由

70
00:03:28,200 --> 00:03:33,040
所以我们可以在这里添加孩子到教练斜线ID

71
00:03:33,040 --> 00:03:36,340
并在那里注册一个嵌套路由

72
00:03:36,340 --> 00:03:40,580
在教练削减 ID 后我们有联系的地方

73
00:03:40,580 --> 00:03:43,730
所以这将装载斜线教练

74
00:03:43,730 --> 00:03:46,260
然后一些教练ID斜线联系。

75
00:03:46,260 --> 00:03:48,820
这就是这条路线和这个组件的方式

76
00:03:48,820 --> 00:03:50,070
应该稍后加载

77
00:03:50,070 --> 00:03:52,370
这样我们就到达了联系页面

78
00:03:52,370 --> 00:03:55,783
带有一个非常具体的教练的表格。

79
00:03:57,400 --> 00:03:59,940
所以我们不会在那里联系，

80
00:03:59,940 --> 00:04:03,950
但我们在这里肯定需要一个请求路由

81
00:04:03,950 --> 00:04:07,380
我们可以在其中查看我们可能收到的所有请求

82
00:04:07,380 --> 00:04:11,090
所以通过该联系表发送的所有消息。

83
00:04:11,090 --> 00:04:13,920
差不多就这样了，还有一条路线

84
00:04:13,920 --> 00:04:17,160
我将在此处添加，这是一条包罗万象的路线

85
00:04:17,160 --> 00:04:21,200
并且找不到用户添加时的路线

86
00:04:21,200 --> 00:04:24,530
或输入无效的路径，

87
00:04:24,530 --> 00:04:26,720
然后我想显示一个未找到的页面。

88
00:04:26,720 --> 00:04:29,530
你可能还记得路由部分

89
00:04:29,530 --> 00:04:30,720
那是如何工作的。

90
00:04:30,720 --> 00:04:32,930
最后你需要一个动态段

91
00:04:32,930 --> 00:04:34,870
与您选择的任何文本，

92
00:04:34,870 --> 00:04:39,260
但最后这个括号语法很重要，

93
00:04:39,260 --> 00:04:41,590
你到底有一个正则表达式

94
00:04:41,590 --> 00:04:44,850
只是说不管这里输入什么，

95
00:04:44,850 --> 00:04:47,103
你想用这条路线处理它。

96
00:04:48,070 --> 00:04:49,840
实际上现在我想起来了

97
00:04:49,840 --> 00:04:51,930
我们还需要另一条路线

98
00:04:51,930 --> 00:04:54,670
因为我们这里没有斜线路线，

99
00:04:54,670 --> 00:04:57,620
我们只有斜线教练斜线寄存器

100
00:04:57,620 --> 00:04:58,820
我们什么都没做

101
00:04:58,820 --> 00:05:01,540
如果用户只用斜线什么都没有，

102
00:05:01,540 --> 00:05:03,070
情况会是这样，

103
00:05:03,070 --> 00:05:06,150
如果只输入我们的域，因此

104
00:05:06,150 --> 00:05:10,200
如果只是我们的域斜线没有输入

105
00:05:10,200 --> 00:05:13,823
我想在这里重定向到斜线教练。

106
00:05:15,210 --> 00:05:16,490
所以这就是设置的路线

107
00:05:16,490 --> 00:05:20,770
我想为这个项目的这个模块工作，

108
00:05:20,770 --> 00:05:23,613
现在我们需要构建那些页面，那些组件

109
00:05:23,613 --> 00:05:27,100
应该为不同的路线加载。

110
00:05:27,100 --> 00:05:30,480
现在，至于本模块中的其他所有内容，

111
00:05:30,480 --> 00:05:33,610
当然也可以自己尝试这样的事情，

112
00:05:33,610 --> 00:05:36,480
也许不要马上继续下一个视频

113
00:05:36,480 --> 00:05:39,560
而是尝试构建这些页面组件

114
00:05:39,560 --> 00:05:43,060
对于这些不同的页面并将它们连接到路由。

115
00:05:43,060 --> 00:05:45,470
您可以尝试构建整个项目

116
00:05:45,470 --> 00:05:48,010
作为一个挑战，这取决于你，

117
00:05:48,010 --> 00:05:50,670
你有多想和我一起进步

118
00:05:50,670 --> 00:05:52,660
以及您想自己尝试多少。

119
00:05:52,660 --> 00:05:54,310
从下一节课开始，

120
00:05:54,310 --> 00:05:56,763
不过，我将添加这些页面组件。