1
00:00:02,150 --> 00:00:05,070
所以创建消息意味着存储数据

2
00:00:05,070 --> 00:00:06,990
在我们的 Vuex 商店中。

3
00:00:06,990 --> 00:00:10,090
到目前为止，我们只得到了教练模块。

4
00:00:10,090 --> 00:00:13,430
现在，当然，我们还需要一个请求模块

5
00:00:13,430 --> 00:00:16,600
因为我们也想管理请求。

6
00:00:16,600 --> 00:00:20,110
所以在商店的模块文件夹中，在请求下，

7
00:00:20,110 --> 00:00:24,280
我将创建一个 index.JS 错误，就像我在教练中所做的那样。

8
00:00:24,280 --> 00:00:26,520
我还将创建所有其他文件，

9
00:00:26,520 --> 00:00:31,520
突变.JS、getters.JS 和 action.JS。

10
00:00:33,000 --> 00:00:36,500
同样，是否需要这种布局取决于您，

11
00:00:36,500 --> 00:00:37,920
但我会去的，

12
00:00:37,920 --> 00:00:40,753
也符合我的教练设置。

13
00:00:41,860 --> 00:00:45,350
现在在请求文件夹中的 index.JS 中，

14
00:00:45,350 --> 00:00:50,320
然后我们导出一个对象并导入该对象

15
00:00:50,320 --> 00:00:53,930
从请求中的 index.JS 到我们的主存储

16
00:00:53,930 --> 00:00:57,340
在 store 文件夹中的这个 index.JS 文件中。

17
00:00:57,340 --> 00:01:00,490
所以这里就像我们导入了 coaches 模块一样，

18
00:01:00,490 --> 00:01:02,590
我们可以导入请求模块

19
00:01:02,590 --> 00:01:06,853
来自模块、请求、index.JS、

20
00:01:08,650 --> 00:01:12,960
然后只需在此处添加请求键

21
00:01:12,960 --> 00:01:15,450
在我们商店的模块对象中

22
00:01:15,450 --> 00:01:17,663
并指向请求模块。

23
00:01:19,170 --> 00:01:22,210
现在，而不是这个导出的对象，

24
00:01:22,210 --> 00:01:24,640
我现在还将命名空间设置为 true，

25
00:01:24,640 --> 00:01:27,830
所以我们也为这个模块使用命名空间

26
00:01:27,830 --> 00:01:31,220
我们不只是将它合并到全局状态中，

27
00:01:31,220 --> 00:01:33,230
进入全球商店，我们可以这样做，

28
00:01:33,230 --> 00:01:34,940
但我不想在这里做。

29
00:01:34,940 --> 00:01:39,030
然后我们需要亲自动手进行突变。

30
00:01:39,030 --> 00:01:41,510
但首先，我们需要一个状态。

31
00:01:41,510 --> 00:01:44,910
我们在这个模块中需要一个状态，这个状态应该管理

32
00:01:44,910 --> 00:01:49,290
一件简单的事情，我们的要求。

33
00:01:49,290 --> 00:01:53,570
所以我们知道的所有请求，然后是每个请求

34
00:01:53,570 --> 00:01:57,480
会有一个特定的教练ID，

35
00:01:57,480 --> 00:02:01,630
然后，如果那个教练 ID 与我们的 ID 匹配，

36
00:02:01,630 --> 00:02:03,600
这是我们将看到的请求，

37
00:02:03,600 --> 00:02:06,363
所有其他请求对我们来说都是不可见的。

38
00:02:08,310 --> 00:02:12,180
所以现在这就是我们的状态和请求数组。

39
00:02:12,180 --> 00:02:15,380
现在，当然，因为我们已经在获取数据

40
00:02:15,380 --> 00:02:18,400
对于我们在contactCoach 组件中的请求，

41
00:02:18,400 --> 00:02:21,340
我们现在需要一个突变和一个动作

42
00:02:21,340 --> 00:02:23,450
用于创建新请求。

43
00:02:23,450 --> 00:02:26,560
所以让我们从这里的突变开始。

44
00:02:26,560 --> 00:02:30,320
在 mutation.JS 中，我们还导出了一个对象。

45
00:02:30,320 --> 00:02:34,010
在这里我们可以添加 addRequest 突变，

46
00:02:34,010 --> 00:02:35,710
听起来很合适的名字，

47
00:02:35,710 --> 00:02:39,593
我们在哪里得到我们的状态，就像在所有的突变和有效载荷中一样，

48
00:02:40,440 --> 00:02:43,280
最终将保存请求数据。

49
00:02:43,280 --> 00:02:46,460
然后我们可以简单地联系 state.requests

50
00:02:46,460 --> 00:02:49,870
并将有效负载推送到这个数组上

51
00:02:49,870 --> 00:02:53,340
假设有效载荷已经是完成的请求

52
00:02:53,340 --> 00:02:54,543
因为我们想添加它。

53
00:02:55,920 --> 00:02:58,940
对于突变，这已经在这里完成了。

54
00:02:58,940 --> 00:03:00,770
现在，让我们添加一个动作。

55
00:03:00,770 --> 00:03:05,770
所以这里我们也在动作文件中导出一个对象，

56
00:03:05,870 --> 00:03:08,650
我们可以将这个动作命名为contactCoach。

57
00:03:09,900 --> 00:03:14,420
现在我们将在这里获得我们的上下文，也可能是一个有效载荷

58
00:03:14,420 --> 00:03:17,900
因为我们需要从表单中获取的数据

59
00:03:17,900 --> 00:03:19,743
在contactCoach 组件中。

60
00:03:20,960 --> 00:03:25,960
然后我们可以在这里新建一个请求，

61
00:03:26,440 --> 00:03:31,440
这可以是我们可以添加用户电子邮件字段的对象

62
00:03:31,660 --> 00:03:34,610
例如，我们指向有效负载电子邮件的地方，

63
00:03:34,610 --> 00:03:37,330
假设我们得到的payload是一个对象

64
00:03:37,330 --> 00:03:40,810
带有电子邮件字段并添加消息

65
00:03:40,810 --> 00:03:43,233
我们指向payload.message的地方。

6
00:03:44,230 --> 00:03:46,790
但是我们还需要在这里添加一件事。

67
00:03:46,790 --> 00:03:50,090
这就是教练 ID，因为每个请求

68
00:03:50,090 --> 00:03:53,470
需要附加到教练 ID。

69
00:03:53,470 --> 00:03:55,630
所以为此，我想谈谈教练的想法，

70
00:03:55,630 --> 00:03:58,210
此请求发送给谁。

71
00:03:58,210 --> 00:04:01,430
因此，在这里，我假设这就是全部

72
00:04:01,430 --> 00:04:05,160
传入有效负载的教练 ID。

73
00:04:05,160 --> 00:04:08,130
然后我们只想为请求本身添加一个 ID

74
00:04:08,130 --> 00:04:11,300
这样每个请求对象都有一个新的 ID。

75
00:04:11,300 --> 00:04:14,200
我们现在可以简单地创建一个虚拟 ID

76
00:04:14,200 --> 00:04:18,079
通过获取当前日期并获取字符串快照

77
00:04:18,079 --> 00:04:19,183
可以这么说。

78
00:04:20,709 --> 00:04:23,010
有了这个，我们已经得到了我们需要的一切。

79
00:04:23,010 --> 00:04:28,010
现在我们可以调用它 context.commit，提交添加，哎呀，

80
00:04:28,070 --> 00:04:31,220
addRequest 突变。

81
00:04:31,220 --> 00:04:35,090
这是我在 mutation.JS 文件中选择的名称。

82
00:04:35,090 --> 00:04:37,800
然后也传递我们的有效载荷，

83
00:04:37,800 --> 00:04:40,860
对我来说，这只是这个新要求

84
00:04:40,860 --> 00:04:41,963
我们正在这里建造。

85
00:04:43,810 --> 00:04:48,810
现在应该向我们的请求状态添加一个新请求

86
00:04:49,500 --> 00:04:53,513
如果此操作是使用适当的有效负载分派的。

87
00:04:54,910 --> 00:04:57,610
所以现在由我们来发送这个。

88
00:04:57,610 --> 00:05:02,610
所以回到这里的 contactCoach 组件的提交表单中，

89
00:05:03,440 --> 00:05:08,440
我们现在想联系这家商店并致电调度。

90
00:05:10,590 --> 00:05:13,673
然后由于我们的模块是命名空间的，

91
00:05:14,580 --> 00:05:18,390
这是我们必须访问的 requests 命名空间，

92
00:05:18,390 --> 00:05:21,600
因此这里是请求/联系教练。

93
00:05:22,903 --> 00:05:24,830
ContactCoach 是我们的真实姓名，

94
00:05:24,830 --> 00:05:26,893
requests 是我们的命名空间名称。

95
00:05:28,690 --> 00:05:30,730
现在，当然，我们需要在这里添加一些数据

96
00:05:30,730 --> 00:05:33,200
并且数据应该是这个对象，

97
00:05:33,200 --> 00:05:35,440
我们在我们的行动中提取的。

98
00:05:35,440 --> 00:05:39,150
所以我们需要一个教练 ID、一个电子邮件和一个消息字段

99
00:05:39,150 --> 00:05:41,290
在我们的有效载荷对象中。

100
00:05:41,290 --> 00:05:44,970
因此，在这里，我想创建一个新对象，

101
00:05:44,970 --> 00:05:48,280
其中有一个指向此电子邮件的电子邮件字段，

102
00:05:48,280 --> 00:05:51,670
指向此消息的消息字段，

103
00:05:51,670 --> 00:05:53,920
然后还有一件重要的事情，

104
00:05:53,920 --> 00:05:58,590
向其发送此消息的 Coach 的 ID。

105
00:05:58,590 --> 00:06:02,480
我们可以在这里获取 ID，因为您必须牢记

106
00:06:02,480 --> 00:06:04,500
当我们联系教练时，

107
00:06:04,500 --> 00:06:08,283
此 URL 包含教练 ID。

108
00:06:09,260 --> 00:06:12,503
因此，由于这是一条子路线，

109
00:06:13,986 --> 00:06:16,900
contactCoach 组件是 Coach 详细信息的子路由，

110
00:06:16,900 --> 00:06:18,770
具有此 ID 参数，

111
00:06:18,770 --> 00:06:21,640
我们也可以在这里提取它。

112
00:06:21,640 --> 00:06:23,920
我们可以使用 Props to Route 来做到这一点，

113
00:06:23,920 --> 00:06:26,460
但也要看到你学到的其他方法，

114
00:06:26,460 --> 00:06:30,160
在contactCoach 中，我会以不同的方式获取ID。

115
00:06:30,160 --> 00:06:34,770
我将在此处将我的教练 ID 字段设置为此美元和路线

116
00:06:34,770 --> 00:06:39,370
然后是 ID，因为该参数包含教练的 ID

117
00:06:39,370 --> 00:06:40,973
此消息发送给谁。

118
00:06:43,430 --> 00:06:47,130
然后应该成功地发送它。

119
00:06:47,130 --> 00:06:48,420
现在，最后但同样重要的是，

120
00:06:48,420 --> 00:06:51,430
然后我也想离开这个页面。

121
00:06:51,430 --> 00:06:55,410
所以我们可以用这个路由器来做这个然后替换

122
00:06:55,410 --> 00:06:58,320
而不是推送，这样我们就无法返回此页面

123
00:06:58,320 --> 00:07:01,400
之后转到 /coaches。

124
00:07:01,400 --> 00:07:04,563
但这取决于您想在哪里以及如何导航。

125
00:07:05,890 --> 00:07:09,240
有了这个保存，我们现在应该能够

126
00:07:09,240 --> 00:07:11,370
发送请求。

127
00:07:11,370 --> 00:07:16,210
因此，如果我们在这里联系教练并填写此表格，

128
00:07:16,210 --> 00:07:19,410
首先，如果它无效，我们会收到一条错误消息。

129
00:07:19,410 --> 00:07:21,493
但如果我之后在那里填写，

130
00:07:23,550 --> 00:07:25,170
我们至少离开页面，

131
00:07:25,170 --> 00:07:28,473
但我收到一个未知的操作请求/contactCoach。

132
00:07:30,170 --> 00:07:33,820
是的，因为在请求模块中，

133
00:07:33,820 --> 00:07:36,930
记住这是我在这里导出的一个很好的对象，

134
00:07:36,930 --> 00:07:39,350
我最终将其导入我的商店，

135
00:07:39,350 --> 00:07:41,250
但是这里缺少什么？

136
00:07:41,250 --> 00:07:43,420
好吧，我定义的突变和动作

137
00:07:43,420 --> 00:07:45,110
在那些单独的文件中，

138
00:07:45,110 --> 00:07:48,380
我不在这里导入并将它们添加到我的模块中。

139
00:07:48,380 --> 00:07:50,300
这当然是我们必须做的事情。

140
00:07:50,300 --> 00:07:54,630
我们必须从 ./mutations.JS 导入突变

141
00:07:54,630 --> 00:07:58,633
并从 ./actions.JS 导入操作。

142
00:07:59,870 --> 00:08:03,190
一旦完成，我们可以添加突变

143
00:08:03,190 --> 00:08:05,610
在此处使用 JavaScript 速记

144
00:08:05,610 --> 00:08:10,610
以及作为此模块对象的键值对的操作。

145
00:08:12,760 --> 00:08:17,760
完成后，如果我尝试联系教练，

146
00:08:19,270 --> 00:08:23,550
这是一个测试，现在我们不再得到这个。

147
00:08:23,550 --> 00:08:26,250
我们也没有在任何地方看到请求。

148
00:08:26,250 --> 00:08:29,323
因此，下一步，让我们在请求页面上工作。