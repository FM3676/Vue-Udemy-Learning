1
00:00:02,290 --> 00:00:05,020
现在我想结束这部分

2
00:00:05,020 --> 00:00:05,980
的项目。

3
00:00:05,980 --> 00:00:09,500
所以这个主项目没有认证

4
00:00:09,500 --> 00:00:12,830
通过添加一些动画，一些过渡。

5
00:00:12,830 --> 00:00:16,190
您可以在这里制作一些动画。

6
00:00:16,190 --> 00:00:20,390
例如，当我们从一页切换时，路由切换

7
00:00:20,390 --> 00:00:21,443
到另一个页面。

8
00:00:22,660 --> 00:00:26,330
但除此之外，还有我们展示的模态

9
00:00:26,330 --> 00:00:30,240
如果发生错误，我们也可以对其进行动画处理。

10
00:00:30,240 --> 00:00:32,850
实际上，这就是我想要开始的。

11
00:00:32,850 --> 00:00:36,850
在 actions.ji 中，当我们找教练时，我

12
00:00:36,850 --> 00:00:41,840
将再次通过使用重新引入强制错误

13
00:00:41,840 --> 00:00:43,420
不正确的网址。

14
00:00:43,420 --> 00:00:47,190
现在我们得到了这个模态，这个模态刚刚弹出

15
00:00:47,190 --> 00:00:49,010
并且在那里。

16
00:00:49,010 --> 00:00:52,290
当然这有效，但有一点过渡

17
00:00:52,290 --> 00:00:55,690
可以提供更好的用户体验。

18
00:00:55,690 --> 00:00:58,240
自从在对话框中

19
00:00:58,240 --> 00:01:00,890
在基本对话框中，我们使用 v-if 来显示

20
00:01:00,890 --> 00:01:02,290
或隐藏此对话框。

21
00:01:02,290 --> 00:01:04,739
这里我们需要 Vue 的帮助。

22
00:01:04,739 --> 00:01:07,570
因为我们在动画模块中学习过

23
00:01:07,570 --> 00:01:11,430
过渡组件 Vue 为您提供的过渡，

24
00:01:11,430 --> 00:01:15,150
如果您想为添加的元素设置动画，可以为您提供帮助

25
00:01:15,150 --> 00:01:17,533
和或用 v-if 删除。

26
00:01:18,810 --> 00:01:22,940
所以我们可以在这里简单地用转换包装这个对话框。

27
00:01:22,940 --> 00:01:26,470
而且我只是包装对话框而不是背景

28
00:01:26,470 --> 00:01:29,360
因为我不想为背景设置动画。

29
00:01:29,360 --> 00:01:31,040
所以我将包装这个对话框

30
00:01:31,040 --> 00:01:35,550
过渡在此处打开并在此处关闭。

31
00:01:35,550 --> 00:01:39,183
在那个有效的传送组件内部。

32
00:01:40,020 --> 00:01:42,040
所以我必须在这里过渡

33
00:01:42,040 --> 00:01:46,570
然后给这个过渡一个名字，例如对话框。

34
00:01:46,570 --> 00:01:49,330
但是这个名字当然取决于你，正如你所了解的

35
00:01:49,330 --> 00:01:51,480
在动画模块中。

36
00:01:51,480 --> 00:01:54,470
现在我们可以添加一堆 CSS 子句

37
00:01:54,470 --> 00:01:57,780
将由 Vue 应用到对话框

38
00:01:57,780 --> 00:01:59,890
添加或删除它时。

39
00:01:59,890 --> 00:02:03,270
因此，为此，我将深入到 CSS 代码

40
00:02:03,270 --> 00:02:08,270
也许在这里我们可以添加一个 dialog-enter-from 子句

41
00:02:08,550 --> 00:02:12,630
定义我们想要开始动画的状态或样式，

42
00:02:12,630 --> 00:02:15,170
当元素被添加到 DOM 时。

43
00:02:15,170 --> 00:02:19,210
并实际设置 dialog-leave-to 子句，

44
00:02:19,210 --> 00:02:20,920
到相同的风格。

45
00:02:20,920 --> 00:02:25,220
这样我们就可以确保我们留下相同的样式

46
00:02:25,220 --> 00:02:29,360
正如我们来自，当元素被添加或删除时。

47
00:02:29,360 --> 00:02:33,320
在这里我想从不透明度为零开始，或者，去

48
00:02:33,320 --> 00:02:35,430
不透明度为零。

49
00:02:35,430 --> 00:02:39,530
并对其进行一点改造并按比例缩小

50
00:02:39,530 --> 00:02:43,790
所以我们从较小的尺寸开始，或者我们去

51
00:02:43,790 --> 00:02:48,093
添加或删除对话框时尺寸较小。

52
00:02:50,010 --> 00:02:53,940
现在我们想要在添加时达到的状态或

53
00:02:53,940 --> 00:02:57,780
如果它被删除，我们开始的状态，可以定义

54
00:02:57,780 --> 00:03:02,780
使用 dialog-enter-to 或 dialog-leave-from，像这样。

55
00:03:06,430 --> 00:03:09,760
在这里我当然想完全不透明

56
00:03:09,760 --> 00:03:12,120
使元素可见。

57
00:03:12,120 --> 00:03:15,080
并将其转换为比例为

58
00:03:15,080 --> 00:03:17,520
元素的原始比例。

59
00:03:17,520 --> 00:03:20,623
这样它就不会比预期的更小或更大。

60
00:03:21,840 --> 00:03:25,960
现在我们只需要在从句之间，

61
00:03:25,960 --> 00:03:29,530
将是对话输入活动。

62
00:03:29,530 --> 00:03:34,210
还有对话离开活动。

63
00:03:34,210 --> 00:03:39,210
而对于进入，我会设置过渡 CSS 属性

64
00:03:40,560 --> 00:03:43,440
并转换所有 CSS 属性。

65
00:03:43,440 --> 00:03:45,970
所以无论哪个属性发生变化，它都会

66
00:03:45,970 --> 00:03:50,960
生气勃勃版本 0.3 秒，轻松退出。

67
00:03:50,960 --> 00:03:54,550
离开时基本上做同样的事情，但我在那里

68
00:03:54,550 --> 00:03:55,853
将使用缓入。

69
00:03:57,480 --> 00:03:59,870
有了这个，我们应该有一个漂亮的动画，

70
00:03:59,870 --> 00:04:03,250
模态的一个很好的过渡。

71
00:04:03,250 --> 00:04:07,110
如果我们保存并重新加载，现在你会看到

72
00:04:07,110 --> 00:04:08,950
看起来更好一些。

73
00:04:08,950 --> 00:04:12,120
现在我们在这里得到了这个模态的小动画。

74
00:04:12,120 --> 00:04:14,810
当然你绝对可以玩

75
00:04:14,810 --> 00:04:17,790
有具体的风格，有时间，有

76
00:04:17,790 --> 00:04:19,392
无论你想玩什么。

77
00:04:20,290 --> 00:04:22,580
但这就是现在的模态。

78
00:04:22,580 --> 00:04:25,760
我们当然也可以动画路线切换。

79
00:04:25,760 --> 00:04:29,840
我也涵盖了这个确实的过渡模块。

80
00:04:29,840 --> 00:04:33,710
为此，我们去渲染路由器视图的地方，

81
00:04:33,710 --> 00:04:35,780
对于我们想要动画的路线。

82
00:04:35,780 --> 00:04:40,180
在这种情况下，我想为所有主要路线设置动画，所以不是

83
00:04:40,180 --> 00:04:43,450
这个嵌套的子路线，但所有这些主要路线

84
00:04:43,450 --> 00:04:44,660
应该是动画的。

85
00:04:44,660 --> 00:04:48,740
因此，在 App.vue 我们有

86
00:04:48,740 --> 00:04:51,870
使用过渡结合路由器视图。

87
00:04:51,870 --> 00:04:54,950
你会了解到这里的语法是

88
00:04:54,950 --> 00:04:59,850
有点奇怪，也许不是你习惯的那样。

89
00:04:59,850 --> 00:05:03,790
在这里，我们需要在 router-view 标签之间传递一些东西

90
00:05:03,790 --> 00:05:07,823
还有一些东西是在过渡组件中构建的，

91
00:05:08,930 --> 00:05:12,560
例如，带有您选择的路线的名称。

92
00:05:12,560 --> 00:05:16,640
然后在那里动态组件组件

93
00:05:16,640 --> 00:05:19,870
你绑定的，像这样用 is prop

94
00:05:19,870 --> 00:05:23,150
动态绑定到组件

95
00:05:23,150 --> 00:05:25,363
路由器决定加载。

96
00:05:26,260 --> 00:05:30,390
为了让路由器想要渲染该组件，我们

97
00:05:30,390 --> 00:05:34,780
必须使用插槽功能视图提供

98
00:05:34,780 --> 00:05:37,090
使用 v-slot 指令。

99
00:05:37,090 --> 00:05:42,060
并为我们获取路由器视图集的 slotProps。

100
00:05:42,060 --> 00:05:45,990
在这些 slotProps 上，我们可以访问 .component

101
00:05:45,990 --> 00:05:49,887
大写字母 C 然后指向组件

102
00:05:49,887 --> 00:05:52,380
路由器要加载。

103
00:05:52,380 --> 00:05:54,800
现在这将是动画的。

104
00:05:54,800 --> 00:05:57,500
我们还应该在过渡时设置模式

105
00:05:57,500 --> 00:06:01,060
to out-in, 让我们先动画去除

106
00:06:01,060 --> 00:06:04,110
现有页面，然后是外观

107
00:06:04,110 --> 00:06:05,083
的新页面。

108
00:06:07,390 --> 00:06:09,040
至于这取决于你

109
00:06:09,040 --> 00:06:11,080
您想在这里使用哪些样式，与

110
00:06:11,080 --> 00:06:12,900
你想怎么动画这个。

111
00:06:12,900 --> 00:06:15,830
我将在这里定义我的 CSS 子句

112
00:06:15,830 --> 00:06:20,830
这将是一个路由进入，路由离开到。

113
00:06:21,960 --> 00:06:24,470
在这里我不会使用相同的规则，因为我想

114
00:06:24,470 --> 00:06:27,790
有不同的风格，略有不同。

115
00:06:27,790 --> 00:06:31,700
而我们当然也需要 route-enter-to

116
00:06:32,620 --> 00:06:36,690
和路线离开。

117
00:06:36,690 --> 00:06:40,700
然后也是介于两者之间的主动子句

118
00:06:40,700 --> 00:06:45,700
所以，route-enter-active 和 route-leave-active。

119
00:06:50,110 --> 00:06:53,610
所以现在关于输入的样式，我想设置

120
00:06:53,610 --> 00:06:56,600
不透明度为零以使其透明

121
00:06:56,600 --> 00:07:00,050
并再次使用变换，但现在使用 translateY

122
00:07:00,050 --> 00:07:02,320
沿 y 轴移动。

123
00:07:02,320 --> 00:07:05,490
这里基本上开始高一点，

124
00:07:05,490 --> 00:07:09,593
页面上比平时稍微靠上一点。

125
00:07:10,700 --> 00:07:13,090
我将使用几乎相同的风格离开

126
00:07:13,090 --> 00:07:16,900
但在这里我将有一个正数的 translateY，

127
00:07:16,900 --> 00:07:20,293
有效地向下移动离开页面。

128
00:07:22,330 --> 00:07:26,270
对于主动条款，我想再次使用过渡。

129
00:07:26,270 --> 00:07:29,810
在 0.3 秒内为所有 CSS 属性设置动画

130
00:07:29,810 --> 00:07:33,710
轻松退出，离开时做同样的事情，但是，

131
00:07:33,710 --> 00:07:36,000
像以前一样轻松进入。

132
00:07:36,000 --> 00:07:39,970
然后这里是 enter-to 和 enter-from，实际上我们

133
00:07:39,970 --> 00:07:43,020
可以将其合并为一个规则。

134
00:07:43,020 --> 00:07:46,560
所以让我这样做，因为在这里我将使用相同的样式。

135
00:07:46,560 --> 00:07:49,830
在这里，我想要一个不透明度

136
00:07:49,830 --> 00:07:54,830
并将 translateY 转换为零以移动元素

137
00:07:55,630 --> 00:07:58,080
到它最终应该有的实际位置。

138
00:07:59,950 --> 00:08:01,250
好的，让我们试试这个。

139
00:08:01,250 --> 00:08:05,970
让我们保存这个，重新加载，你会注意到一个警告。

140
00:08:05,970 --> 00:08:08,190
现在实际上我们在这里也遇到了这个错误

141
00:08:08,190 --> 00:08:10,720
所以让我们首先摆脱它，然后让我们看看

142
00:08:10,720 --> 00:08:12,050
在警告。

143
00:08:12,050 --> 00:08:15,590
所以在这里我将修复那个 URL，这样我们就不会强迫

144
00:08:15,590 --> 00:08:16,750
这个错误了。

145
00:08:16,750 --> 00:08:19,610
你现在会看到一个警告，你会看到

146
00:08:19,610 --> 00:08:21,123
动画坏了。

147
00:08:22,390 --> 00:08:26,030
原因是，你被允许

148
00:08:26,030 --> 00:08:29,340
有多个根级元素

149
00:08:29,340 --> 00:08:31,400
在您的组件模板中。

150
00:08:31,400 --> 00:08:35,169
但是，如果您打算包装这些组件

151
00:08:35,169 --> 00:08:38,690
过渡，因为我在这里有效地做这件事。

152
00:08:38,690 --> 00:08:41,929
我正在包装所有这些路线，那些页面组件

153
00:08:41,929 --> 00:08:45,700
有了过渡，那么包装组件必须只

154
00:08:45,700 --> 00:08:47,940
有一个根元素。

155
00:08:47,940 --> 00:08:51,240
我想这是有道理的，因为过渡

156
00:08:51,240 --> 00:08:52,810
正如我在

157
00:08:52,810 --> 00:08:57,630
动画模块，只需要一个子元素

158
00:08:57,630 --> 00:09:00,060
除了一些罕见的例外。

159
00:09:00,060 --> 00:09:02,740
因此，子元素路由

160
00:09:02,740 --> 00:09:04,860
具有多个顶级元素

161
00:09:04,860 --> 00:09:07,340
不适用于过渡。

162
00:09:07,340 --> 00:09:10,750
所以要解决这个问题，我们需要访问我们所有的页面

163
00:09:10,750 --> 00:09:12,360
在每一页上确保我们

164
00:09:12,360 --> 00:09:15,290
只有一个根级元素。

165
00:09:15,290 --> 00:09:19,270
所以这里是两个并排的部分，是不允许的。

166
00:09:19,270 --> 00:09:22,540
所以在这里我们需要一个 div 或类似的东西，

167
00:09:22,540 --> 00:09:26,263
最后包装了此页面中的所有其他元素。

168
00:09:27,160 --> 00:09:31,090
如果我们想在这里使用转换，这是我们需要的。

169
00:09:31,090 --> 00:09:33,820
因为否则我们就违反了这条规则

170
00:09:33,820 --> 00:09:37,970
在过渡内只有一个子元素。

171
00:09:37,970 --> 00:09:40,870
所以让我们确保我们只有一个根元素

172
00:09:40,870 --> 00:09:42,913
在所有这些页面组件中。

173
00:09:43,950 --> 00:09:48,750
现在几乎是我也需要的情况

174
00:09:48,750 --> 00:09:52,420
在这里添加一个，是的。

175
00:09:52,420 --> 00:09:56,470
现在有了这个，我们也需要 NotFound

176
00:09:56,470 --> 00:10:00,880
工作我只是看到，但如果我们重新加载。

177
00:10:00,880 --> 00:10:04,080
现在我们在这里得到了很好的过渡

178
00:10:04,080 --> 00:10:07,033
如果我们在页面之间移动。

179
00:10:07,910 --> 00:10:10,150
所以，现在我们还添加了

180
00:10:10,150 --> 00:10:13,690
有了它，我们可以快速添加 NotFound

181
00:10:13,690 --> 00:10:16,020
在下一节课中，然后，我们完成了

182
00:10:16,020 --> 00:10:17,963
现在这个主要项目。