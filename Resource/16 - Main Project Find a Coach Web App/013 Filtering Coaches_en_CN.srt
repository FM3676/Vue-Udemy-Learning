1
00:00:02,070 --> 00:00:05,230
所以让我们继续那个过滤器组件

2
00:00:05,230 --> 00:00:09,220
目前在 CoachesList 上，我只是在这里说过滤器，

3
00:00:09,220 --> 00:00:11,620
当然，我们还需要更多。

4
00:00:11,620 --> 00:00:14,980
现在所有与过滤相关的逻辑标记

5
00:00:14,980 --> 00:00:17,390
或者过滤形式，我会说，

6
00:00:17,390 --> 00:00:19,420
应该进入一个单独的组件，

7
00:00:19,420 --> 00:00:22,903
再次保持 CoachesList 相对较小。

8
00:00:23,910 --> 00:00:26,260
因此在源、组件、教练中，

9
00:00:26,260 --> 00:00:29,400
我将在教练项目旁边添加第二个组件。

10
00:00:29,400 --> 00:00:32,790
这就是 CoachFilter.vue 文件。

11
00:00:32,790 --> 00:00:36,440
在那里，我想设置所有的标记和基本逻辑

12
00:00:36,440 --> 00:00:39,090
我们需要让用户选择

13
00:00:39,090 --> 00:00:41,970
在不同的过滤选项之间。

14
00:00:41,970 --> 00:00:45,710
现在，我也将在这里使用 base-card 组件，

15
00:00:45,710 --> 00:00:49,400
这样我们就有了基本的容器样式。

16
00:00:49,400 --> 00:00:54,400
然后在那里，也许说一个 H2 标签，找到你的教练。

17
00:00:55,070 --> 00:00:59,620
然后在其下方，渲染几个复选框。

18
00:00:59,620 --> 00:01:02,730
现在，我想介绍三个过滤选项。

19
00:01:02,730 --> 00:01:07,500
因为在我们的商店，我们有免费的专业领域。

20
00:01:07,500 --> 00:01:08,530
在整个应用程序中，

21
00:01:08,530 --> 00:01:11,776
我支持这三个专业领域，

22
00:01:11,776 --> 00:01:14,020
前端，后端，职业。

23
00:01:14,020 --> 00:01:16,190
所以这些是免费的过滤选项

24
00:01:16,190 --> 00:01:18,150
应该在这里介绍。

25
00:01:18,150 --> 00:01:21,530
因此，我将实际使用，比方说，

26
00:01:21,530 --> 00:01:23,093
作为包装器的跨度，

27
00:01:24,120 --> 00:01:26,760
向其添加一类过滤器选项，

28
00:01:26,760 --> 00:01:29,430
这对以后的造型很重要。

29
00:01:29,430 --> 00:01:34,430
在那个范围内，有一个复选框类型的输入

30
00:01:34,640 --> 00:01:37,150
假设有一个前端 ID

31
00:01:37,150 --> 00:01:39,820
并且最初被检查，

32
00:01:39,820 --> 00:01:43,580
因为在这里我会确保所有过滤器选项

33
00:01:43,580 --> 00:01:45,680
或最初检查所有输入，

34
00:01:45,680 --> 00:01:49,083
然后用户可以取消选中它们并根据需要检查它们。

35
00:01:50,690 --> 00:01:52,023
这就是这里的输入。

36
00:01:53,160 --> 00:01:55,970
当然，我也会添加一个标签以使其清楚

37
00:01:55,970 --> 00:01:58,170
这个输入指的是什么。

38
00:01:58,170 --> 00:02:02,320
在 for 属性中，确保我们指向

39
00:02:02,320 --> 00:02:06,540
在此输入带有此标签，以便单击标签

40
00:02:06,540 --> 00:02:11,540
还检查此输入，然后添加前端文本。

41
00:02:12,080 --> 00:02:14,760
我们现在可以重复两次，

42
00:02:14,760 --> 00:02:19,610
因为我们在这里还需要我们的后端复选框，

43
00:02:19,610 --> 00:02:21,650
所以让我们添加这个。

44
00:02:21,650 --> 00:02:25,780
我们需要职业复选框，

45
00:02:25,780 --> 00:02:28,273
所以这也是我们应该补充的。

46
00:02:31,390 --> 00:02:32,590
好的，那很好。

47
00:02:32,590 --> 00:02:34,580
现在我们得到了这三个复选框。

48
00:02:34,580 --> 00:02:38,780
现在我们需要一些逻辑来对用户点击做出反应

49
00:02:38,780 --> 00:02:40,603
在这些复选框之一。

50
00:02:42,110 --> 00:02:45,950
因此，我将在那里添加我的脚本块

51
00:02:45,950 --> 00:02:48,070
并添加一个数据属性

52
00:02:48,070 --> 00:02:50,340
因为在这个 CoachFilter 组件中，

53
00:02:50,340 --> 00:02:53,310
我们需要管理一些内部数据。

54
00:02:53,310 --> 00:02:56,680
我想管理用户选择的过滤器

55
00:02:56,680 --> 00:02:59,570
或者用户选择了哪些选项。

56
00:02:59,570 --> 00:03:01,610
所以这是这个返回的数据对象，

57
00:03:01,610 --> 00:03:05,520
我将添加一个包含另一个对象的过滤器键

58
00:03:05,520 --> 00:03:07,490
我想有一个前端过滤器

59
00:03:07,490 --> 00:03:09,220
最初是真的，

60
00:03:09,220 --> 00:03:12,020
一个最初为真的后端过滤器，

61
00:03:12,020 --> 00:03:15,090
和职业过滤器，这是真的。

62
00:03:15,090 --> 00:03:18,480
这基本上意味着只要某事是真的

63
00:03:18,480 --> 00:03:21,963
应该展示具有该专业领域的教练。

64
00:03:23,530 --> 00:03:26,590
然后我将添加一个方法来更改该数据。

65
00:03:26,590 --> 00:03:29,083
比方说 setFilter 方法。

66
00:03:30,450 --> 00:03:33,530
这个方法应该绑定到these 输入，

67
00:03:33,530 --> 00:03:34,950
当他们被点击时

68
00:03:34,950 --> 00:03:39,080
或者更准确地说，setFilter 运行。

69
00:03:39,080 --> 00:03:43,850
为此，我们可以在输入时收听更改事件

70
00:03:43,850 --> 00:03:46,370
每当值更改时触发

71
00:03:46,370 --> 00:03:49,610
从选中到未选中或相反，

72
00:03:49,610 --> 00:03:52,990
那就是应该触发 setFilter 的时候。

73
00:03:52,990 --> 00:03:56,143
因此，这当然会添加到所有这些输入中。

74
00:03:57,570 --> 00:04:01,890
现在 setFilter 因此接收到默认事件对象，

75
00:04:01,890 --> 00:04:04,373
因为我们将它绑定到默认的 dom 事件。

76
00:04:06,450 --> 00:04:08,740
我们现在可以提取两个重要的部分

77
00:04:08,740 --> 00:04:10,483
来自该事件的信息。

78
00:04:11,810 --> 00:04:14,170
第一个是输入的ID

79
00:04:14,170 --> 00:04:16,730
已检查或已更改。

80
00:04:16,730 --> 00:04:20,170
我们通过访问 event.target.id 得到这个。

81
00:04:20,170 --> 00:04:21,970
这样我们就可以访问这些 ID

82
00:04:21,970 --> 00:04:23,813
我们添加到这些输入中。

83
00:04:25,110 --> 00:04:28,227
然后第二条信息是，isActive，

84
00:04:29,198 --> 00:04:30,590
目前检查了吗？

85
00:04:30,590 --> 00:04:33,250
对于数据，我们可以访问.event.target.checked

86
00:04:33,250 --> 00:04:34,920
查明是否有数据输入

87
00:04:34,920 --> 00:04:38,313
触发此事件的，现在是否检查。

88
00:04:39,250 --> 00:04:44,250
然后我可以在这里派生出我的 updatedFilters 对象，

89
00:04:45,200 --> 00:04:47,670
我复制现有过滤器的地方，

90
00:04:47,670 --> 00:04:50,823
那么现有的过滤器是这里的选项吗？

91
00:04:52,090 --> 00:04:55,570
使用扩展运算符，我将其复制到这个新对象中。

92
00:04:55,570 --> 00:04:59,120
所以我将所有这些属性复制到这个新对象中，

93
00:04:59,120 --> 00:05:02,860
但随后我们覆盖了这三个属性之一。

94
00:05:02,860 --> 00:05:05,850
我们通过动态设置属性名称来做到这一点，

95
00:05:05,850 --> 00:05:08,730
我们想要覆盖并将其设置为我们的 inputId，

96
00:05:08,730 --> 00:05:10,003
所以到这个常数。

97
00:05:11,220 --> 00:05:14,760
这整个前端、后端或职业，

98
00:05:14,760 --> 00:05:17,470
这些是我们在这里的输入 ID。

99
00:05:17,470 --> 00:05:21,240
因此，我们访问了这些密钥之一，

100
00:05:21,240 --> 00:05:25,160
并为此动态设置的属性设置一个新值。

101
00:05:25,160 --> 00:05:28,453
值是，isActive，是真还是假。

102
00:05:30,810 --> 00:05:33,240
然后我们可以设置这个过滤器，

103
00:05:33,240 --> 00:05:36,513
所以我们的数据选项更新过滤器。

104
00:05:37,420 --> 00:05:39,090
有了它，我们应该能够管理

105
00:05:39,090 --> 00:05:41,200
内部过滤器在这里。

106
00:05:41,200 --> 00:05:42,590
但当然，这还不是全部。

107
00:05:42,590 --> 00:05:45,160
我也想让使用的组件

108
00:05:45,160 --> 00:05:49,050
CoachFilter 组件，了解我的过滤器。

109
00:05:49,050 --> 00:05:53,200
这就是我想发出的原因，在这里 $emit 一个自定义事件

110
00:05:53,200 --> 00:05:56,160
与父组件通信。

111
00:05:56,160 --> 00:05:57,870
这就是 change-filter 事件，

112
00:05:57,870 --> 00:06:00,910
假设我在哪里传递了我的更新过滤器，

113
00:06:00,910 --> 00:06:04,180
所以我在哪里提供有关 updatedFilters 的信息

114
00:06:04,180 --> 00:06:06,023
到正在收听的组件。

115
00:06:07,530 --> 00:06:08,363
现在当然是，

116
00:06:08,363 --> 00:06:12,320
在此处添加 emits 选项是一个好习惯，

117
00:06:12,320 --> 00:06:15,080
并因此明确表示该组件

118
00:06:15,080 --> 00:06:17,103
发出一个更改过滤器事件。

119
00:06:18,620 --> 00:06:20,290
现在我们可以添加一些样式，

120
00:06:20,290 --> 00:06:22,580
所以这是添加一些范围样式。

121
00:06:22,580 --> 00:06:27,460
和往常一样，您会找到 CoachFilter CSS 文件

122
00:06:27,460 --> 00:06:29,210
这里有所有这些风格，

123
00:06:29,210 --> 00:06:31,713
您可以在样式标签之间复制。

124
00:06:34,240 --> 00:06:36,882
有了它，我们现在可以使用 CoachFilter

125
00:06:36,882 --> 00:06:38,923
在 coachesList 组件中。

126
00:06:40,080 --> 00:06:44,590
所以让我们去 CoachesList，首先，

127
00:06:44,590 --> 00:06:49,590
从上升、上升、组件导入CoachFilter，

128
00:06:50,140 --> 00:06:55,140
教练，CoachFilter.vue，并添加到这里

129
00:06:55,180 --> 00:06:56,773
到组件选项，

130
00:06:58,610 --> 00:07:01,510
然后在这里添加而不是过滤器。

131
00:07:01,510 --> 00:07:05,370
在这里，我想添加教练过滤器132
00:07:05,370 --> 00:07:08,853
像那样，不，不是这样，而是那样。

133
00:07:11,370 --> 00:07:13,400
当然在这里，我现在想听

134
00:07:13,400 --> 00:07:17,700
到最终发出的更改过滤器事件

135
00:07:17,700 --> 00:07:20,710
并调用 setFilters 方法，

136
00:07:20,710 --> 00:07:22,533
我们现在必须在这里添加。

137
00:07:23,550 --> 00:07:28,547
所以在这个组件中，我将添加一个方法键。

138
00:07:29,520 --> 00:07:32,430
并在那里添加一个 setFilters 方法

139
00:07:32,430 --> 00:07:35,653
我将 updatedFilters 作为参数，

140
00:07:36,500 --> 00:07:39,140
因为那是我们发出的那种数据

141
00:07:39,140 --> 00:07:41,620
在 CoachFilter 组件中，对吗？

142
00:07:41,620 --> 00:07:45,020
我们在这里将 updatedFilters 作为参数传递

143
00:07:45,020 --> 00:07:46,570
当我们发出事件时。

144
00:07:46,570 --> 00:07:49,380
因此，在我们聆听事件的地方，

145
00:07:49,380 --> 00:07:51,563
我们收到了这个作为参数。

146
00:07:55,150 --> 00:07:59,170
我现在想在这里管理一条新数据

147
00:07:59,170 --> 00:08:00,840
或任何数据。

148
00:08:00,840 --> 00:08:03,043
因此，让我们在 CoachesList 中添加数据选项。

149
00:08:04,250 --> 00:08:06,300
在那个物体里，

150
00:08:06,300 --> 00:08:11,300
我想要一个 activeFilters 数据属性，

151
00:08:11,440 --> 00:08:16,440
它也有前端真、后端真和职业真。

152
00:08:18,140 --> 00:08:19,970
但这现在应该被覆盖

153
00:08:19,970 --> 00:08:22,520
每当发出新的过滤器时。

154
00:08:22,520 --> 00:08:26,600
所以在 setFilters 中，我将把这个有源过滤器设置为相等

155
00:08:26,600 --> 00:08:28,253
到更新的过滤器。

156
00:08:29,520 --> 00:08:32,320
现在所有的人都死了，我们可以回去了

157
00:08:32,320 --> 00:08:35,679
到filteredCoaches 计算属性。

158
00:08:35,679 --> 00:08:38,690
而现在并不总是返回所有的教练，

159
00:08:38,690 --> 00:08:41,113
但匹配我们过滤器的教练。

160
00:08:42,750 --> 00:08:47,750
所以在这里我得到了我的教练，它存储在一个常量中，

161
00:08:48,020 --> 00:08:51,120
但我会返回 coaches.filter，

162
00:08:51,120 --> 00:08:52,880
调用内置过滤器方法

163
00:08:52,880 --> 00:08:56,690
您可以在 JavaScript 中调用数组，

164
00:08:56,690 --> 00:09:01,070
我们现在对教练中的每个项目执行一个函数

165
00:09:01,070 --> 00:09:04,030
并自动接收教练作为输入

166
00:09:04,030 --> 00:09:05,270
作为参数。

167
00:09:05,270 --> 00:09:08,100
现在在这里，我想要几个 if 检查，

168
00:09:08,100 --> 00:09:13,050
并检查 this.activeFilters.frontend 是否为真，

169
00:09:13,050 --> 00:09:14,740
这意味着我想给教练看

170
00:09:14,740 --> 00:09:19,170
具有前端专业领域的人。

171
00:09:19,170 --> 00:09:21,350
因此，我知道我想向教练展示

172
00:09:21,350 --> 00:09:23,130
与前端区域。

173
00:09:23,130 --> 00:09:27,810
但现在我可以检查这位教练是否在他或她的地区

174
00:09:27,810 --> 00:09:30,660
有这个前端密钥。

175
00:09:30,660 --> 00:09:33,540
我们可以通过 coach.areas.includes 做到这一点

176
00:09:33,540 --> 00:09:36,880
这是 JavaScript 中内置方法的数字。

177
00:09:36,880 --> 00:09:39,143
我通过前端。

178
00:09:40,230 --> 00:09:43,000
如果匹配，我会在此处返回 true，

179
00:09:43,000 --> 00:09:45,920
因为这意味着我们想见教练

180
00:09:45,920 --> 00:09:48,070
具有前端专业领域的

181
00:09:48,070 --> 00:09:49,750
这个教练有。

182
00:09:49,750 --> 00:09:53,310
所以我们回归真实以留住那个教练

183
00:09:53,310 --> 00:09:55,623
在我们返回的教练阵列中。

184
00:09:57,150 --> 00:09:59,630
现在我们可以复制两次来做

185
00:09:59,630 --> 00:10:01,693
同样，我在这里是为了后端。

186
00:10:03,410 --> 00:10:08,410
当然，这里是为了职业。

187
00:10:10,230 --> 00:10:13,800
最终，如果这些 if 检查都不匹配，

188
00:10:13,800 --> 00:10:17,180
我们在该过滤器方法中返回 false

189
00:10:17,180 --> 00:10:18,990
或在此过滤器功能内部，

190
00:10:18,990 --> 00:10:21,540
这意味着这个教练，没有田地

191
00:10:21,540 --> 00:10:23,963
我们正在过滤的内容被排除在外。

192
00:10:25,700 --> 00:10:27,520
应该就是这样。

193
00:10:27,520 --> 00:10:31,490
保存后，我们现在在这里有了这个过滤器组件。

194
00:10:31,490 --> 00:10:35,170
例如，现在 Julie 没有后端。

195
00:10:35,170 --> 00:10:39,570
所以如果我取消选中职业和前端，就只剩下 Max 了，

196
00:10:39,570 --> 00:10:42,950
如果我检查后端，我们根本没有教练。

197
00:10:42,950 --> 00:10:45,450
如果我检查前端，我们会看到e 两位教练

198
00:10:45,450 --> 00:10:47,400
因为两位教练都有。

199
00:10:47,400 --> 00:10:49,150
这就是过滤器的工作。

200
00:10:49,150 --> 00:10:51,260
所以现在添加了过滤器，

201
00:10:51,260 --> 00:10:56,260
让我们处理联系人和注册作为教练表格。

202
00:10:56,320 --> 00:10:59,540
让我们从注册教练开始吧。

203
00:10:59,540 --> 00:11:01,480
这个页面现在很白

204
00:11:01,480 --> 00:11:04,160
当然在这里，我想要一个漂亮的表格

205
00:11:04,160 --> 00:11:08,163
我们可以在其中填写所有详细信息以注册成为教练。