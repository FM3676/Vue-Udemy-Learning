1
00:00:02,120 --> 00:00:05,430
因此，让我们转到“收到的请求”页面。

2
00:00:05,430 --> 00:00:09,460
在这里，我想展示对现役教练的所有要求。

3
00:00:09,460 --> 00:00:12,340
目前，我将在这里简单地显示所有请求

4
00:00:12,340 --> 00:00:15,360
因为我们还没有真正的活跃教练。

5
00:00:15,360 --> 00:00:17,870
不过，这很快就会发生。

6
00:00:17,870 --> 00:00:22,033
所以在这里我将简单地添加一个新部分，比如说，

7
00:00:23,000 --> 00:00:25,790
我想在其中使用我的基本车

8
00:00:25,790 --> 00:00:27,910
拥有一般的容器风格

9
00:00:27,910 --> 00:00:29,460
我们在整个应用程序中使用。

10
00:00:29,460 --> 00:00:31,610
在那里，我们可以添加一个标题

11
00:00:32,479 --> 00:00:34,840
里面有总部标签，

12
00:00:34,840 --> 00:00:37,230
我们说收到的请求，

13
00:00:37,230 --> 00:00:39,453
因为这就是这个页面的用途。

14
00:00:41,150 --> 00:00:42,680
现在在这之下，

15
00:00:42,680 --> 00:00:45,520
我想渲染一个无序列表

16
00:00:45,520 --> 00:00:48,150
我们收到的所有请求，

17
00:00:48,150 --> 00:00:52,040
或者目前，所有的请求。

18
00:00:52,040 --> 00:00:56,300
在此之下，我实际上想要一个 H 三个标签，

19
00:00:56,300 --> 00:01:01,300
我说“你还没有收到任何请求”，

20
00:01:02,100 --> 00:01:03,300
应该出现

21
00:01:03,300 --> 00:01:06,563
如果尚未创建和存储请求。

22
00:01:08,660 --> 00:01:11,680
所以我们稍后会回到列表项。

23
00:01:11,680 --> 00:01:12,600
暂时，

24
00:01:12,600 --> 00:01:16,320
让我们添加样式和脚本部分。

25
00:01:16,320 --> 00:01:17,270
所以首先，

26
00:01:17,270 --> 00:01:19,330
我将添加范围样式。

27
00:01:19,330 --> 00:01:20,500
和往常一样，

28
00:01:20,500 --> 00:01:24,430
附上你会发现 Requests Received CSS 文件，

29
00:01:24,430 --> 00:01:26,840
其中包含 CSS 样式，

30
00:01:26,840 --> 00:01:30,813
您可以在此处复制和粘贴范围样式标签。

31
00:01:33,170 --> 00:01:34,590
完成后，

32
00:01:34,590 --> 00:01:38,920
现在我们可以处理这个组件的脚本部分了。

33
00:01:38,920 --> 00:01:41,480
在这里，目标最终很简单。

34
00:01:41,480 --> 00:01:43,380
我们想要访问请求

35
00:01:43,380 --> 00:01:45,790
我们在 Vue X 中管理。

36
00:01:45,790 --> 00:01:46,930
因此，

37
00:01:46,930 --> 00:01:48,440
就像我们以前一样，

38
00:01:48,440 --> 00:01:51,330
当我们想要访问 Vue X 数据时，

39
00:01:51,330 --> 00:01:53,960
我们将使用计算属性。

40
00:01:53,960 --> 00:01:56,470
所以我们可以在这里添加我们的计算键，

41
00:01:56,470 --> 00:01:58,410
然后在这里，

42
00:01:58,410 --> 00:02:03,410
我将添加一个名为 Received Requests 的计算属性，

43
00:02:03,590 --> 00:02:06,790
我现在想联系商店，

44
00:02:06,790 --> 00:02:11,160
目前，获取我们在其中找到的所有请求。

45
00:02:11,160 --> 00:02:13,833
所以在 getter 中，在 requests 文件夹中，

46
00:02:15,340 --> 00:02:18,163
我将导出一个对象，

47
00:02:19,670 --> 00:02:22,460
并在此处添加请求字段

48
00:02:22,460 --> 00:02:25,960
我在哪里自动获取状态作为参数

49
00:02:25,960 --> 00:02:27,110
正如你所了解的，

50
00:02:27,110 --> 00:02:30,420
然后我们可以在哪里返回 state.requests

51
00:02:30,420 --> 00:02:32,713
返回此请求列表。

52
00:02:33,930 --> 00:02:35,820
在收到的请求中，

53
00:02:35,820 --> 00:02:37,620
我们现在可以联系到这个吸气剂

54
00:02:37,620 --> 00:02:40,000
在此计算属性中。

55
00:02:40,000 --> 00:02:44,060
我们可以联系这家 store.getters。

56
00:02:44,060 --> 00:02:45,830
现在因为它被命名为间隔，

57
00:02:45,830 --> 00:02:48,360
然后联系请求，

58
00:02:48,360 --> 00:02:49,577
这是命名空间名称，

59
00:02:49,577 --> 00:02:53,033
/requests，也就是这里的getter名字，

60
00:02:54,270 --> 00:02:57,423
然后在这个计算属性中返回这个。

61
00:02:59,380 --> 00:03:02,100
我将添加第二个计算属性，

62
00:03:02,100 --> 00:03:04,250
我说“hasRequests”的地方，

63
00:03:05,230 --> 00:03:08,783
而我只想归还这个，

64
00:03:09,780 --> 00:03:11,800
store.getters,

65
00:03:11,800 --> 00:03:13,413
请求/有请求，

66
00:03:15,096 --> 00:03:17,300
这是我们尚未添加的吸气剂，

67
00:03:17,300 --> 00:03:18,380
到 Vue X。

68
00:03:18,380 --> 00:03:19,780
因此，让我们快速做到这一点。

69
00:03:19,780 --> 00:03:21,600
复制它并

70
00:03:21,600 --> 00:03:25,250
转到请求模块中的吸气剂，

71
00:03:25,250 --> 00:03:27,950
添加 hasRequests 吸气剂，

72
00:03:27,950 --> 00:03:29,570
在那里，我想回来

73
00:03:30,770 --> 00:03:33,790
基本上 state.requests 和

74
00:03:33,790 --> 00:03:37,500
state.requests.length 大于零。

75
00:03:37,500 --> 00:03:41,070
因此，如果我们至少有一个请求，这将产生 true。

76
00:03:41,070 --> 00:03:42,963
否则它会产生错误。

77
00:03:43,960 --> 00:03:47,090
我在这里添加了这个额外的计算属性

78
00:03:47,090 --> 00:03:50,670
因为我们可以将它与 V-if 一起使用

79
00:03:50,670 --> 00:03:54,050
显示这个无序列表，如果它是真的，

80
00:03:54,050 --> 00:03:58,450
但是如果不是真的，然后用 V-else 显示这个 H 三个标签，

81
00:03:58,450 --> 00:03:59,883
如果我们没有要求。

82
00:04:01,270 --> 00:04:03,490
所以现在有了这个，我们可以访问请求。

83
00:04:03,490 --> 00:04:05,850
现在我们需要渲染它们。

84
00:04:05,850 --> 00:04:07,310
为此，我们想要

85
00:04:07,310 --> 00:04:10,530
在这个无序列表中渲染一堆列表项，

86
00:04:10,530 --> 00:04:12,950
虽然我会外包具体项目

87
00:04:12,950 --> 00:04:14,223
成一个新的组件。

88
00:04:15,150 --> 00:04:17,200
因此，为此，我将介绍组件。

89
00:04:17,200 --> 00:04:18,610
然后在里面，

90
00:04:18,610 --> 00:04:21,320
在教练、布局和 UI 旁边，

91
00:04:21,320 --> 00:04:24,070
我们可以添加一个请求子文件夹

92
00:04:24,070 --> 00:04:27,960
管理所有请求相关的组件。

93
00:04:27,960 --> 00:04:30,900
对我来说，这只是一个组成部分，

94
00:04:30,900 --> 00:04:34,090
请求项组件，

95
00:04:34,090 --> 00:04:37,910
它有一个模板，我们在其中呈现一个列表项，比方说。

96
00:04:37,910 --> 00:04:39,430
在那个列表项中，

97
00:04:39,430 --> 00:04:44,430
我们有一个 div 我只是有一个锚标签

98
00:04:46,200 --> 00:04:49,110
我想在哪里输出电子邮件地址并使其可点击

99
00:04:49,110 --> 00:04:52,853
单击后自动打开电子邮件客户端。

100
00:04:54,200 --> 00:04:55,930
而在这之下，

101
00:04:55,930 --> 00:04:58,400
消息，段落也许。

102
00:04:58,400 --> 00:05:03,400
所以在这里，我想插入用户的消息。

103
00:05:03,840 --> 00:05:05,720
在锚标签之间，

104
00:05:05,720 --> 00:05:07,680
我想输出电子邮件地址

105
00:05:08,860 --> 00:05:11,700
与该请求一起发送的。

106
00:05:11,700 --> 00:05:15,330
我想在这里绑定 ref 属性，

107
00:05:15,330 --> 00:05:16,920
阙，

108
00:05:16,920 --> 00:05:18,080
好吧，到一个链接

109
00:05:18,080 --> 00:05:21,610
自动打开本地电子邮件客户端。

110
00:05:21,610 --> 00:05:23,530
为此，我们可以在这里添加一个脚本。

111
00:05:23,530 --> 00:05:25,890
首先，接受道具，

112
00:05:25,890 --> 00:05:28,250
因为我们要渲染一个请求项

113
00:05:28,250 --> 00:05:31,420
作为收到的请求列表的一部分。

114
00:05:31,420 --> 00:05:34,460
Requests Received 有这些请求。

115
00:05:34,460 --> 00:05:36,310
所以我们可以简单地提供数据

116
00:05:36,310 --> 00:05:39,680
进入个人列表物品，水果道具。

117
00:05:39,680 --> 00:05:44,680
需要的数据是电子邮件地址和消息。

118
00:05:45,650 --> 00:05:47,933
所以我在模板中使用的键，

119
00:05:49,080 --> 00:05:51,780
但我也会在这里添加计算道具，

120
00:05:51,780 --> 00:05:53,950
那是电子邮件链接

121
00:05:53,950 --> 00:05:56,670
只是将该逻辑放入 Java 脚本中

122
00:05:56,670 --> 00:05:58,570
并进入模板。

123
00:05:58,570 --> 00:06:01,633
在这里，我想返回邮件：

124
00:06:03,800 --> 00:06:05,700
加上这封电子邮件。

125
00:06:05,700 --> 00:06:08,880
这是浏览器理解的特殊指令，

126
00:06:08,880 --> 00:06:12,710
如果这是您在锚标记中的链接，

127
00:06:12,710 --> 00:06:15,920
浏览器将自动打开您的电子邮件客户端

128
00:06:15,920 --> 00:06:18,150
使用此电子邮件地址，

129
00:06:18,150 --> 00:06:21,970
预先填写到打开的新电子邮件中。

130
00:06:21,970 --> 00:06:24,863
所以在这里我们可以指向电子邮件链接。

131
00:06:26,160 --> 00:06:27,410
和往常一样，

132
00:06:27,410 --> 00:06:28,670
附上你还会发现

133
00:06:28,670 --> 00:06:31,080
一些样式，你可以在这里添加，

134
00:06:31,080 --> 00:06:34,740
这是请求项目的 CSS 文件，

135
00:06:34,740 --> 00:06:38,210
将样式复制并粘贴到您的组件中。

136
00:06:38,210 --> 00:06:40,900
然后我们应该有外观和行为

137
00:06:40,900 --> 00:06:42,743
我们需要的这个组件。

138
00:06:44,760 --> 00:06:47,450
所以回到收到的请求中，

139
00:06:47,450 --> 00:06:50,760
我们现在可以将此组件注册为本地组件。

140
00:06:50,760 --> 00:06:53,710
所以从

141
00:06:54,737 --> 00:06:56,170
往上走，

142
00:06:56,170 --> 00:06:57,910
成组件，143
00:06:57,910 --> 00:06:59,360
进入请求，

144
00:06:59,360 --> 00:07:01,113
到 requestItem.Vue，

145
00:07:02,160 --> 00:07:05,590
然后在这里的组件，

146
00:07:05,590 --> 00:07:09,403
并将请求项注册为本地组件。

147
00:07:10,880 --> 00:07:14,330
这当然允许我们在模板中使用它

148
00:07:14,330 --> 00:07:15,580
像这样。

149
00:07:15,580 --> 00:07:17,900
现在渲染多个实例

150
00:07:17,900 --> 00:07:20,110
用 V-for 关闭这个组件，

151
00:07:20,110 --> 00:07:25,110
通过处理 Received Requests 中的所有请求，

152
00:07:25,440 --> 00:07:27,863
这是我们的计算属性。

153
00:07:30,090 --> 00:07:32,150
现在在这里，我们想添加一个键，

154
00:07:32,150 --> 00:07:37,150
将此设置为 request.id 因为每个请求都有一个 ID，

155
00:07:37,160 --> 00:07:40,623
并传入电子邮件地址，

156
00:07:42,300 --> 00:07:45,920
这是用户电子邮件字段

157
00:07:45,920 --> 00:07:49,270
在 Vue X 中的操作中。

158
00:07:49,270 --> 00:07:52,210
我将电子邮件存储在用户电子邮件字段下。

159
00:07:52,210 --> 00:07:56,260
这就是为什么我必须在这里通过该字段访问它

160
00:07:56,260 --> 00:07:59,133
在收到的请求中，

161
00:08:00,130 --> 00:08:03,380
并将消息道具输入请求项

162
00:08:03,380 --> 00:08:06,163
通过访问 request.message。

163
00:08:08,100 --> 00:08:09,120
因此，

164
00:08:09,120 --> 00:08:11,310
我们几乎实现了我们需要做的所有事情。

165
00:08:11,310 --> 00:08:12,460
还剩一件事。

166
00:08:13,330 --> 00:08:15,780
我们这里的吸气剂是定义的，

167
00:08:15,780 --> 00:08:16,940
但和以前一样，

168
00:08:16,940 --> 00:08:19,900
我们需要将它们添加到我们的模块对象中。

169
00:08:19,900 --> 00:08:23,713
所以我们需要从./getters.js中导入getter，

170
00:08:24,560 --> 00:08:28,400
然后将它们添加到此模块的对象中，

171
00:08:28,400 --> 00:08:31,153
进入请求模块的这个模块对象。

172
00:08:32,610 --> 00:08:33,623
做完这些，

173
00:08:34,659 --> 00:08:35,770
如果我们重新加载这个应用程序，

174
00:08:35,770 --> 00:08:39,440
我们看到您还没有收到任何请求。

175
00:08:39,440 --> 00:08:41,909
但是如果我们联系教练

176
00:08:42,870 --> 00:08:44,747
从我们的电子邮件地址，

177
00:08:44,747 --> 00:08:48,130
“你好，我想得到一些指导。

178
00:08:48,130 --> 00:08:49,677
你能帮助我吗？”

179
00:08:50,890 --> 00:08:52,960
如果我发了这条信息，

180
00:08:52,960 --> 00:08:55,003
根据请求，我们在这里看到它。

181
00:08:55,920 --> 00:08:58,820
如果我向另一位教练发送另一条信息

182
00:08:58,820 --> 00:09:01,987
目前，我们将看到所有教练的消息。

183
00:09:01,987 --> 00:09:02,940
“您好我是

184
00:09:04,240 --> 00:09:05,590
马克斯和我

185
00:09:07,210 --> 00:09:09,200
真的需要一些

186
00:09:09,200 --> 00:09:11,067
支持网络开发。”

187
00:09:12,450 --> 00:09:15,460
如果我添加这个请求，我们也会看到这个。

188
00:09:15,460 --> 00:09:18,080
如果我们点击这样的电子邮件地址，

189
00:09:18,080 --> 00:09:20,850
这将打开电子邮件客户端

190
00:09:20,850 --> 00:09:23,410
预先填充了该电子邮件地址。

191
00:09:23,410 --> 00:09:25,600
所以这是另一个不错的功能。

192
00:09:25,600 --> 00:09:26,480
好的。

193
00:09:26,480 --> 00:09:29,540
所以现在我们也可以发送请求，

194
00:09:29,540 --> 00:09:31,960
但是当然，现在我们总能看到所有请求

195
00:09:31,960 --> 00:09:34,120
在所有教练中。

196
00:09:34,120 --> 00:09:36,300
这不是你想要的。

197
00:09:36,300 --> 00:09:38,670
因此，让我们尝试限制这一点。

198
00:09:38,670 --> 00:09:40,070
在我们的根状态下，

199
00:09:40,070 --> 00:09:42,420
我们实际上已经有了一个用户 ID

200
00:09:42,420 --> 00:09:45,180
假设这是我们。

201
00:09:45,180 --> 00:09:47,490
所以如果我们注册为教练，

202
00:09:47,490 --> 00:09:51,060
这将是注册教练的 ID。

203
00:09:51,060 --> 00:09:52,380
而此后，

204
00:09:52,380 --> 00:09:55,310
仅发送给该教练的消息

205
00:09:55,310 --> 00:09:57,600
应该出现在我们面前。

206
00:09:57,600 --> 00:09:59,743
所以这将是下一步。