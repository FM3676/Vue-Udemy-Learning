1
00:00:02,110 --> 00:00:04,420
所以 CoachesList.vue 是

2
00:00:04,420 --> 00:00:06,880
这是我想开始的第一页。

3
00:00:06,880 --> 00:00:11,880
这最终将成为一个相当复杂的页面

4
00:00:12,770 --> 00:00:14,870
因为你可能记得在那

5
00:00:14,870 --> 00:00:18,270
我不只是想输出教练列表，

6
00:00:18,270 --> 00:00:21,590
我还想添加一些过滤逻辑，以便

7
00:00:21,590 --> 00:00:25,120
我们可以过滤显示的教练列表。

8
00:00:25,120 --> 00:00:28,630
而输出教练名单也意味着我们需要

9
00:00:28,630 --> 00:00:29,890
教练开始

10
00:00:29,890 --> 00:00:32,653
目前我们根本没有管理任何数据。

11
00:00:33,540 --> 00:00:37,090
但我们至少可以开始使用基本模板。

12
00:00:37,090 --> 00:00:41,040
在这里开始使用这个基本模板，

13
00:00:41,040 --> 00:00:44,530
我当然在这里添加一个模板到CoachesList.vue，

14
00:00:44,530 --> 00:00:46,263
但现在在那里，我们需要什么？

15
00:00:47,120 --> 00:00:50,820
我们将有一个部分或一个 div，无论你想要什么，

16
00:00:50,820 --> 00:00:53,680
稍后我们将不得不过滤。

17
00:00:53,680 --> 00:00:56,563
在此之下，我们将有此页面的另一部分，

18
00:00:56,563 --> 00:00:58,930
另一个部分，另一个 div，

19
00:00:58,930 --> 00:01:02,310
我们将在其中获得教练名单。

20
00:01:02,310 --> 00:01:05,180
这将是两个主要领域。

21
00:01:05,180 --> 00:01:10,180
现在我将为此创建两个单独的子组件

22
00:01:10,210 --> 00:01:14,743
这样我们的教练列表组件就保持相对精简。

23
00:01:15,620 --> 00:01:19,260
但至少我们现在有了一个基本模板，一个虚拟模板，

24
00:01:19,260 --> 00:01:21,820
这应该可以让我们在屏幕上看到一些东西

25
00:01:21,820 --> 00:01:23,970
访问此页面时。

26
00:01:23,970 --> 00:01:27,670
因此，如果您使用 npm run serve 运行我们的开发服务器，

27
00:01:27,670 --> 00:01:30,980
让我们看看我们是否至少可以在屏幕上看到这个

28
00:01:30,980 --> 00:01:33,373
当我们访问我们的应用程序时。

29
00:01:34,760 --> 00:01:38,120
事实上，如果我加载这个页面，我会被重定向到 /coaches

30
00:01:38,120 --> 00:01:41,230
我看到了过滤器和教练列表。

31
00:01:41,230 --> 00:01:43,400
现在造型显然已经关闭了，

32
00:01:43,400 --> 00:01:45,070
我的意思是整个内容都不见了

33
00:01:45,070 --> 00:01:47,210
但我已经可以说这也是

34
00:01:47,210 --> 00:01:48,780
不是我想使用的字体。

35
00:01:48,780 --> 00:01:51,060
所以我想设置一些全局样式，

36
00:01:51,060 --> 00:01:53,760
App vue 中的一些基本样式，

37
00:01:53,760 --> 00:01:56,530
这将适用于整个应用程序。

38
00:01:56,530 --> 00:01:59,780
因此，这不是范围样式，而只是一种样式

39
00:01:59,780 --> 00:02:02,340
以便在全球范围内应用。

40
00:02:02,340 --> 00:02:04,920
我为你准备了造型

41
00:02:04,920 --> 00:02:08,009
因为我不想和你一起写风格

42
00:02:08,009 --> 00:02:10,070
因为这不是 CSS 课程

43
00:02:10,070 --> 00:02:11,760
我从其他课程中知道

44
00:02:11,760 --> 00:02:14,970
如果你写太多 CSS 对某些人来说很无聊

45
00:02:14,970 --> 00:02:17,830
因此，我将为您提供所有 CSS 代码。

46
00:02:17,830 --> 00:02:20,450
当然，您也可以根据自己的需要进行调整。

47
00:02:20,450 --> 00:02:23,030
您可以调整它以使其看起来像您想要的样子，

48
00:02:23,030 --> 00:02:24,610
无论你想要什么。

49
00:02:24,610 --> 00:02:28,320
如此附上，你会发现这个应用程序的 CSS 文件

50
00:02:28,320 --> 00:02:31,330
在那里你可以找到你应该复制的样式

51
00:02:31,330 --> 00:02:34,980
到您的 App vue 文件的这些样式文本中。

52
00:02:34,980 --> 00:02:38,560
导入到 Google 字体，我在其中加载字体

53
00:02:38,560 --> 00:02:41,380
然后，我设置了一些基本样式，

54
00:02:41,380 --> 00:02:45,060
设置该基本字体，删除正文上的边距

55
00:02:45,060 --> 00:02:49,140
并且应用了这个，我们现在有了这个字体。

56
00:02:49,140 --> 00:02:52,830
所以现在可行，看起来不错，

57
00:02:52,830 --> 00:02:54,140
不是我想要的样子

58
00:02:54,140 --> 00:02:56,970
但它至少具有空间造型。

59
00:02:56,970 --> 00:02:59,280
现在，我们应该如何继续呢？

60
00:02:59,280 --> 00:03:02,290
我的意思是，这个页面几乎毫无价值

61
00:03:02,290 --> 00:03:05,250
如果我们没有任何教练可以在这里输出。

62
00:03:05,250 --> 00:03:08,960
因此，我看到我们可以采取两条可能的路线。

63
00:03:08,960 --> 00:03:11,850
我们现在可以开始添加 Vuex

64
00:03:11,850 --> 00:03:14,070
并开始添加数据，

65
00:03:14,070 --> 00:03:18,350
或者我们首先f 全部完成整个基础布局

66
00:03:18,350 --> 00:03:22,100
和导航，我们向这个应用程序添加一个标题

67
00:03:22,100 --> 00:03:24,280
这样我们就可以访问所有页面

68
00:03:24,280 --> 00:03:27,010
我们在所有页面上都有一些虚拟代码

69
00:03:27,010 --> 00:03:31,380
然后我们添加到数据中，我将使用第二条路线。

70
00:03:31,380 --> 00:03:34,670
我将首先连接导航和基本布局

71
00:03:34,670 --> 00:03:36,823
在我回到数据之前。

72
00:03:38,550 --> 00:03:43,067
所以要添加一些基本布局和一些基本导航，

73
00:03:43,067 --> 00:03:45,390
我将转到源文件夹

74
00:03:45,390 --> 00:03:48,448
并在页面旁边添加一个组件文件夹。

75
00:03:48,448 --> 00:03:53,448
在那里，我将添加一个布局文件夹

76
00:03:53,710 --> 00:03:58,710
在那个布局文件夹中，我们可以添加 TheHeader.Vue 文件，

77
00:03:59,150 --> 00:04:01,300
它应该包含基本标题

78
00:04:01,300 --> 00:04:04,630
在此应用程序中使用我们想要的导航。

79
00:04:04,630 --> 00:04:09,630
这个，TheHeader 组件将在 App vue 文件中使用

80
00:04:09,690 --> 00:04:11,253
在路由器视图上方。

81
00:04:12,420 --> 00:04:16,519
所以在这里我们可以在App vue中添加一个脚本

82
00:04:16,519 --> 00:04:21,519
并从 components/layoutTheHeader.Vue 导入 TheHeader

83
00:04:22,930 --> 00:04:27,020
并将其注册为 App vue 中的本地组件。

84
00:04:27,020 --> 00:04:30,520
一个本地组件，因为我们只在这里使用它。

85
00:04:30,520 --> 00:04:35,520
然后在这里我们可以在路由器视图上方渲染 TheHeader。

86
00:04:38,370 --> 00:04:40,690
现在，回到 TheHeader.vue，

87
00:04:40,690 --> 00:04:44,170
问题是我们在模板中想要什么？

88
00:04:44,170 --> 00:04:47,030
好吧，我想要 TheHeader HTML 元素，

89
00:04:47,030 --> 00:04:51,350
这应该是我的导航

90
00:04:51,350 --> 00:04:55,560
作为导航的一部分，我将拥有主标题

91
00:04:55,560 --> 00:05:00,560
这个页面可以这么说，我想说的话

92
00:05:00,820 --> 00:05:02,163
找教练。

93
00:05:03,440 --> 00:05:07,210
旁边还有一个无序列表

94
00:05:07,210 --> 00:05:10,680
我们有不同的导航项

95
00:05:10,680 --> 00:05:13,690
那当然应该是路由器链接。

96
00:05:13,690 --> 00:05:17,440
实际上，即使是 h1 元素中的文本

97
00:05:17,440 --> 00:05:21,380
应该是路由器链接，因为它应该是可点击的

98
00:05:21,380 --> 00:05:24,223
并且应该始终引导我们回到起始页面。

99
00:05:25,230 --> 00:05:29,050
所以在这里我想去 /nothing

100
00:05:29,050 --> 00:05:30,730
然后将重定向到教练，

101
00:05:30,730 --> 00:05:32,540
但这基本上总是会回去

102
00:05:32,540 --> 00:05:35,653
到这个应用程序的根入口页面。

103
00:05:36,610 --> 00:05:40,360
在这里，我也想去 /coaches 让我们说，

104
00:05:40,360 --> 00:05:42,190
这当然是基本相同的

105
00:05:42,190 --> 00:05:47,150
点击这个标题，但在这里我想说的是所有教练。

106
00:05:47,150 --> 00:05:49,820
所以这将是我们拥有的导航项目之一。

107
00:05:49,820 --> 00:05:53,970
我们将拥有的其他项目，我们将转到 /requests

108
00:05:53,970 --> 00:05:56,940
向我们展示我们收到的请求

109
00:05:56,940 --> 00:06:00,100
所以用户发送给我们的消息

110
00:06:00,100 --> 00:06:02,513
如果我们注册为教练。

111
00:06:04,370 --> 00:06:07,520
如果不是，我们将不会在此处看到任何请求。

112
00:06:07,520 --> 00:06:12,520
所以这是 TheHeader 的基本设置。

113
00:06:14,280 --> 00:06:16,290
我现在不需要任何脚本

114
00:06:16,290 --> 00:06:18,550
因为这里没有动态的东西，

115
00:06:18,550 --> 00:06:22,240
不需要 Vue 脚本代码。

116
00:06:22,240 --> 00:06:25,240
但当然，我想在这里做一些造型

117
00:06:25,240 --> 00:06:29,453
我想在这里有一些范围内的 CSS 代码。

118
00:06:30,510 --> 00:06:32,310
再一次，你发现附加，

119
00:06:32,310 --> 00:06:36,010
你会发现附加的 TheHeader CSS 文件，

120
00:06:36,010 --> 00:06:39,500
其中包含了我为你准备的一堆样式，

121
00:06:39,500 --> 00:06:42,600
您可以在这些样式大头钉之间复制

122
00:06:42,600 --> 00:06:45,660
这样我们都使用相同的样式。

123
00:06:45,660 --> 00:06:47,400
我基本上只是给 TheHeader

124
00:06:47,400 --> 00:06:49,690
一定的宽度和一定的颜色

125
00:06:49,690 --> 00:06:52,340
然后就是对链接进行样式设置

126
00:06:52,340 --> 00:06:54,460
和活动链接，这很重要，

127
00:06:54,460 --> 00:06:55,940
活动路由器链路

128
00:06:55,940 --> 00:06:58,697
通过使用该路由器链接行为ive 子句，

129
00:06:58,697 --> 00:07:02,740
您学到的将应用于链接

130
00:07:02,740 --> 00:07:04,760
负责当前页面。

131
00:07:04,760 --> 00:07:07,750
然后我也有一些其他的风格

132
00:07:07,750 --> 00:07:10,390
用于正确布置事物。

133
00:07:10,390 --> 00:07:13,590
有了这个我们得到了 TheHeader 如果我们现在重新加载，

134
00:07:13,590 --> 00:07:15,020
这是我们应该看到的。

135
00:07:15,020 --> 00:07:18,070
您会看到所有教练都处于活动状态

136
00:07:18,070 --> 00:07:20,530
我们也可以去请求

137
00:07:20,530 --> 00:07:22,140
我们在屏幕上看不到任何东西，

138
00:07:22,140 --> 00:07:24,850
但切换到页面有效。

139
00:07:24,850 --> 00:07:28,310
这就是这个应用程序中的 TheHeader。

140
00:07:28,310 --> 00:07:30,990
有了这个，我们向前迈出了一大步

141
00:07:30,990 --> 00:07:33,190
因为现在我们有了第一个基本方法

142
00:07:33,190 --> 00:07:35,860
的导航。

143
00:07:35,860 --> 00:07:38,420
现在让我们也处理其他页面

144
00:07:38,420 --> 00:07:40,343
并添加一些肉给他们。