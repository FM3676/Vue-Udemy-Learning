1
00:00:02,080 --> 00:00:04,910
现在，我将从卡片外观开始

2
00:00:04,910 --> 00:00:06,990
在 Components 文件夹中，

3
00:00:06,990 --> 00:00:09,680
我将创建一个新的子文件夹，我将其命名为 UI

4
00:00:10,540 --> 00:00:14,540
因为我想在其中存储一些通用的 UI 组件。

5
00:00:14,540 --> 00:00:19,030
我的卡应该是那些通用组件之一。

6
00:00:19,030 --> 00:00:22,340
所以我将在那里添加一个 BaseCard.vue 文件

7
00:00:22,340 --> 00:00:25,510
遵循这个 Vue 风格指南推荐

8
00:00:26,610 --> 00:00:29,470
在这里，我们当然需要一个模板。

9
00:00:29,470 --> 00:00:31,380
现在卡片应该是什么样子？

10
00:00:31,380 --> 00:00:33,900
卡片组件应该做什么？

11
00:00:33,900 --> 00:00:35,410
这是一个非常简单的组件。

12
00:00:35,410 --> 00:00:38,920
它不会附加任何逻辑。

13
00:00:38,920 --> 00:00:43,010
它只是作为其他内容的包装器，

14
00:00:43,010 --> 00:00:45,360
然后具有一定的外观。

15
00:00:45,360 --> 00:00:48,343
为此，我将在此模板中添加一个 Div，

16
00:00:49,560 --> 00:00:51,600
打开和关闭，

17
00:00:51,600 --> 00:00:54,263
然后提供一定的样式。

18
00:00:56,440 --> 00:01:01,160
所以为此，我再次添加了我的作用域样式

19
00:01:01,160 --> 00:01:05,250
并附加以查找 BaseCard CSS 文件，

20
00:01:05,250 --> 00:01:08,240
和以前一样包含样式，

21
00:01:08,240 --> 00:01:11,880
您想在此处的样式文本之间添加的 CSS 规则

22
00:01:11,880 --> 00:01:13,713
在 BaseCard.vue 文件中。

23
00:01:15,230 --> 00:01:17,560
这将以某种方式设置 div 的样式，

24
00:01:17,560 --> 00:01:19,913
但现在这里缺少一件重要的事情。

25
00:01:21,070 --> 00:01:24,820
我提到这张卡应该可以用作包装

26
00:01:24,820 --> 00:01:27,100
围绕我们想要的任何内容

27
00:01:27,100 --> 00:01:29,920
并且 Vue 有一个内置的功能

28
00:01:29,920 --> 00:01:34,640
这使得构建这样的组件很容易插槽。

29
00:01:34,640 --> 00:01:38,300
所以在这里我现在将在这些 div 之间添加一个插槽

30
00:01:38,300 --> 00:01:41,530
这样我们就可以输入任何标记，

31
00:01:41,530 --> 00:01:44,210
我们选择的任何 HTML 代码

32
00:01:44,210 --> 00:01:47,730
它会被这个 div 以这种风格包裹起来，

33
00:01:47,730 --> 00:01:48,933
就是这样。

34
00:01:50,110 --> 00:01:52,540
现在我们不需要给这个插槽一个名字

35
00:01:52,540 --> 00:01:55,170
因为这是这里唯一的插槽

36
00:01:55,170 --> 00:01:58,870
有了它，我们现在可以去 LearningResource

37
00:01:58,870 --> 00:02:01,370
我想在哪里使用那张卡

38
00:02:01,370 --> 00:02:05,913
并在此处用该基卡替换此 div。

39
00:02:07,850 --> 00:02:09,770
实际上在这里，我刚刚注意到

40
00:02:09,770 --> 00:02:11,860
div 放置不正确。

41
00:02:11,860 --> 00:02:14,470
div 当然应该包装所有内容

42
00:02:14,470 --> 00:02:15,950
列表项的内部。

43
00:02:15,950 --> 00:02:19,630
所以它在这里包装了标题、段落和导航。

44
00:02:19,630 --> 00:02:23,783
这就是这张基础卡的全部内容。

45
00:02:25,810 --> 00:02:27,760
但是，等一下，

46
00:02:27,760 --> 00:02:30,660
基卡已经可用了吗？

47
00:02:30,660 --> 00:02:33,610
这不是因为我们没有注册它。

48
00:02:33,610 --> 00:02:35,120
现在因为我们在这里使用它

49
00:02:35,120 --> 00:02:37,470
在 LearningResource.vue 文件中，

50
00:02:37,470 --> 00:02:40,653
我们当然可以在这里添加它作为本地组件，

51
00:02:41,490 --> 00:02:44,640
但是这个 BaseCard 组件可能会被使用

52
00:02:44,640 --> 00:02:47,400
在应用程序的其他部分也是如此。

53
00:02:47,400 --> 00:02:50,530
因此，将其添加为全局组件

54
00:02:50,530 --> 00:02:52,750
可能更有意义。

55
00:02:52,750 --> 00:02:56,420
一般来说，这些基础组件

56
00:02:56,420 --> 00:02:58,760
通常是全局组件

57
00:02:58,760 --> 00:03:01,900
因为通常是基于组件，

58
00:03:01,900 --> 00:03:04,180
它们将被多次使用

59
00:03:04,180 --> 00:03:06,053
在您的应用程序的不同部分。

60
00:03:07,460 --> 00:03:09,910
因此，我将转到 main.js

61
00:03:09,910 --> 00:03:12,770
我将在那里导入 BaseCard

62
00:03:12,770 --> 00:03:17,770
来自 ./components/UI/BaseCard.vue。

63
00:03:19,480 --> 00:03:23,860
现在将我创建的应用程序存储在一个常量中

64
00:03:23,860 --> 00:03:25,340
所以在这个应用程序上

65
00:03:25,340 --> 00:03:28,370
然后我可以方便地调用所有组件

66
00:03:28,370 --> 00:03:32,520
并注册基卡 HTML 元素名称

67
00:03:32,520 --> 00:03:36,333
对于我们在这里导入的这个 BaseCard 组件。

68
00:03:38,290 --> 00:03:40,190
如果我保存了这个，

69
00:03:40,190 --> 00:03:44,810
我们ow 得到这张卡片 寻找我们的 LearningResources

70
00:03:44,810 --> 00:03:47,403
这看起来已经好多了。

71
00:03:49,540 --> 00:03:51,650
现在让我们处理标题

72
00:03:51,650 --> 00:03:54,500
为此，我将添加另一个子文件夹，

73
00:03:54,500 --> 00:03:57,130
布局子文件夹，

74
00:03:57,130 --> 00:04:00,673
它应该包含我的布局特定组件，

75
00:04:01,830 --> 00:04:04,320
所以基本上是页眉和页脚

76
00:04:04,320 --> 00:04:05,910
如果我们有一个。

77
00:04:05,910 --> 00:04:07,950
在这里我将添加标题

78
00:04:07,950 --> 00:04:10,160
因为我们只有一个标题

79
00:04:10,160 --> 00:04:12,100
在整个应用程序中，

80
00:04:12,100 --> 00:04:13,790
我将其命名为 TheHeader。

81
00:04:16,050 --> 00:04:19,005
旁注，我也可以命名为 StoredResources，

82
00:04:19,005 --> 00:04:20,450
资源

83
00:04:20,450 --> 00:04:22,860
因为我们也只使用那些，

84
00:04:22,860 --> 00:04:25,900
但在这里我认为 StoredResources 是更好的名字

85
00:04:25,900 --> 00:04:29,200
因为它描述得更详细

86
00:04:29,200 --> 00:04:31,200
这个组件将是关于什么的。

87
00:04:31,200 --> 00:04:32,420
另一端的标题

88
00:04:32,420 --> 00:04:34,610
否则只是一个词

89
00:04:34,610 --> 00:04:37,090
无论如何都不推荐。

90
00:04:37,090 --> 00:04:38,500
请记住，您的组件

91
00:04:38,500 --> 00:04:40,020
应该由两个词组成

92
00:04:40,020 --> 00:04:42,823
因此 TheHeader 在这里是个好名字。

93
00:04:43,680 --> 00:04:45,510
长话短说，这是我的标题。

94
00:04:45,510 --> 00:04:47,120
我将在这里添加我的模板

95
00:04:47,120 --> 00:04:48,250
在那个模板中

96
00:04:48,250 --> 00:04:51,150
我当然想要一个标题元素，

97
00:04:51,150 --> 00:04:54,150
内置的 HTML 标头元素

98
00:04:54,150 --> 00:04:57,580
在那里我会有 h1 元素

99
00:04:59,240 --> 00:05:01,830
在这些标签之间，

100
00:05:01,830 --> 00:05:04,190
我想输出标题

101
00:05:04,190 --> 00:05:06,870
我可以在这里硬编码标题，

102
00:05:06,870 --> 00:05:09,240
但也出于练习目的，

103
00:05:09,240 --> 00:05:11,310
我会在这里做一个道具，

104
00:05:11,310 --> 00:05:13,300
但你也可以在这里硬编码。

105
00:05:13,300 --> 00:05:14,763
那也很好。

106
00:05:15,750 --> 00:05:17,520
所以现在我将在这里添加我的脚本

107
00:05:17,520 --> 00:05:20,240
并明确表示我想获得一个标题道具

108
00:05:20,240 --> 00:05:22,373
这样我就可以在这里输出。

109
00:05:23,230 --> 00:05:26,610
现在应该在我们的 App.vue 文件中使用这个头文件

110
00:05:26,610 --> 00:05:29,490
在 StoredResources 之上。

111
00:05:29,490 --> 00:05:32,090
因此在这里，我想导入 TheHeader

112
00:05:32,090 --> 00:05:37,090
来自 /components/layouts,TheHeader.vue,

113
00:05:40,740 --> 00:05:44,253
我将在此处将其注册为本地组件。

114
00:05:46,120 --> 00:05:50,750
然后在这里我可以添加-header，像这样，

115
00:05:50,750 --> 00:05:53,670
现在还设置标题道具

116
00:05:53,670 --> 00:05:57,600
我将在这里命名我的演示应用程序 RememberMe

117
00:05:57,600 --> 00:06:00,680
因为这一切都是为了记住学习资源，

118
00:06:00,680 --> 00:06:01,513
正确的？

119
00:06:02,790 --> 00:06:04,280
这就是 TheHeader 组件。

120
00:06:04,280 --> 00:06:08,040
现在让我们为 TheHeader.vue 文件添加一些样式

121
00:06:08,040 --> 00:06:10,490
为此，您知道我们添加了什么，

122
00:06:10,490 --> 00:06:15,040
我们的样式标签在这里带有 scoped 属性

123
00:06:15,040 --> 00:06:19,050
确保样式只影响这个组件。

124
00:06:19,050 --> 00:06:21,900
和以前一样，您找到附加的文件

125
00:06:21,900 --> 00:06:24,630
在这种情况下，一个 header.css 文件，

126
00:06:24,630 --> 00:06:26,970
其中包含您应该复制的样式

127
00:06:26,970 --> 00:06:28,743
到这里的那些样式标签中。

128
00:06:31,240 --> 00:06:33,630
然后，如果我们重新加载，

129
00:06:33,630 --> 00:06:37,250
我们在 StoredResources 上方看到这个标题，

130
00:06:37,250 --> 00:06:40,360
所以这正在慢慢形成。

131
00:06:40,360 --> 00:06:42,290
作为下一步，

132
00:06:42,290 --> 00:06:47,200
我们为什么不把按钮也变成一个单独的组件。

133
00:06:47,200 --> 00:06:50,860
具有一些默认样式的单独组件。

134
00:06:50,860 --> 00:06:53,200
再一次，你自己试试这个，

135
00:06:53,200 --> 00:06:55,100
自己想出一个解决方案。

136
00:06:55,100 --> 00:06:57,963
我们将在下一节课中一起实现它。