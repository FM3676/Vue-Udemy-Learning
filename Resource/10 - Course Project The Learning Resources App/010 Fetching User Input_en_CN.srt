1
00:00:02,380 --> 00:00:04,700
那么，你成功的地方在哪里？

2
00:00:04,700 --> 00:00:06,153
让我们一起实现它。

3
00:00:07,020 --> 00:00:11,640
为此，我将首先在此处添加我的脚本部分，

4
00:00:11,640 --> 00:00:14,100
我们在这里肯定需要一个方法，

5
00:00:14,100 --> 00:00:15,800
应该触发的方法

6
00:00:15,800 --> 00:00:17,600
提交表单时。

7
00:00:17,600 --> 00:00:19,280
我将其命名为 submitData，

8
00:00:19,280 --> 00:00:22,500
但您当然可以使用任何您想要的方法名称。

9
00:00:22,500 --> 00:00:26,270
在这里，我现在想获取输入到此输入中的值，

10
00:00:26,270 --> 00:00:28,710
这个文本区域和这个输入。

11
00:00:28,710 --> 00:00:32,060
我们有两种主要的收集方式。

12
00:00:32,060 --> 00:00:36,380
选项一是我们使用一些数据属性

13
00:00:36,380 --> 00:00:40,260
然后我们使用 V-Model 或输入监听器

14
00:00:40,260 --> 00:00:42,200
每次击键更新它。

15
00:00:42,200 --> 00:00:45,970
所以要收集自由数据属性中的自由值

16
00:00:45,970 --> 00:00:49,883
并在每次击键时更新每个数据属性值。

17
00:00:51,060 --> 00:00:53,650
这会起作用，而且没有任何问题，

18
00:00:53,650 --> 00:00:56,380
但我会再次使用好的旧裁判。

19
00:00:56,380 --> 00:00:59,750
为此，我将添加一个 ref 键，

20
00:00:59,750 --> 00:01:04,000
第一个输入上的 ref 属性或属性

21
00:01:04,000 --> 00:01:06,080
并命名为titleInput。

22
00:01:06,080 --> 00:01:09,410
您知道这些 ref 标识符由您决定，

23
00:01:09,410 --> 00:01:12,160
但当然你想选择一个描述

24
00:01:12,160 --> 00:01:14,580
您指向哪些元素。

25
00:01:14,580 --> 00:01:17,673
在这里，我将添加一个 ref，它将是 descInput

26
00:01:19,400 --> 00:01:21,530
用于描述输入。

27
00:01:21,530 --> 00:01:22,810
在最后一个输入中，

28
00:01:22,810 --> 00:01:25,997
我将添加一个带有链接输入标识符的 ref。

29
00:01:28,050 --> 00:01:30,660
所以现在我们已经注册了这些免费的裁判

30
00:01:30,660 --> 00:01:32,200
我们现在可以使用它们了。

31
00:01:32,200 --> 00:01:34,920
我们现在可以在这里使用它们来提交数据

32
00:01:34,920 --> 00:01:37,660
通过引用获得输入标题

33
00:01:37,660 --> 00:01:40,600
到这个美元符号参考 titleInput，

34
00:01:42,040 --> 00:01:44,960
这是我在这里使用的参考，对吗？

35
00:01:44,960 --> 00:01:48,300
TitleInput，这是我在这个输入上使用的 ref。

36
00:01:48,300 --> 00:01:52,240
然后 this 指向输入的 HTML 元素对象，

37
00:01:52,240 --> 00:01:53,720
它有一个价值道具，

38
00:01:53,720 --> 00:01:56,190
它保存用户输入的内容。

39
00:01:56,190 --> 00:01:59,870
我将重复输入的描述

40
00:01:59,870 --> 00:02:03,990
指的是 descInput 值。

41
00:02:03,990 --> 00:02:07,230
对于输入的 url 引用

42
00:02:07,230 --> 00:02:11,383
到这个美元符号参考 urlInput.value。

43
00:02:14,830 --> 00:02:16,840
抱歉，那是链接输入，

44
00:02:16,840 --> 00:02:19,823
所以它应该是linkInput.value。

45
00:02:21,300 --> 00:02:24,230
所以现在这些是用户输入的自由值，

46
00:02:24,230 --> 00:02:26,310
当然，它们可能是空的。

47
00:02:26,310 --> 00:02:29,810
我们会在下一步处理这个问题，

48
00:02:29,810 --> 00:02:32,360
目前我会假设它们不是空的，

49
00:02:32,360 --> 00:02:34,640
如果它们不是空的，

50
00:02:34,640 --> 00:02:36,960
然后我想确保他们被添加

51
00:02:36,960 --> 00:02:38,710
我们所有的资源。

52
00:02:38,710 --> 00:02:40,003
那么我们怎么能这样做呢？

53
00:02:40,950 --> 00:02:44,470
我们当然可以发出一个自定义事件，

54
00:02:44,470 --> 00:02:46,790
然后在父组件中监听

55
00:02:46,790 --> 00:02:49,110
这个 addResource 组件。

56
00:02:49,110 --> 00:02:53,480
但是由于我们动态添加了这个 addResource 组件，

57
00:02:53,480 --> 00:02:58,280
像这样，这将不是一件容易的事。

58
00:02:58,280 --> 00:03:00,070
当然，我们不必使用

59
00:03:00,070 --> 00:03:01,960
这个动态组件在这里。

60
00:03:01,960 --> 00:03:05,200
我们可以使用 VF 在两个组件之间切换

61
00:03:05,200 --> 00:03:07,350
然后我们可以使用自定义事件。

62
00:03:07,350 --> 00:03:10,670
但同样，我想在这里练习提供和注入。

63
00:03:10,670 --> 00:03:12,340
因此，我会坚持提供

64
00:03:12,340 --> 00:03:15,373
并注入，我会以不同的方式实现它。

65
00:03:17,510 --> 00:03:22,510
我将从 TheResources.vue 开始，添加一个新方法，

66
00:03:22,770 --> 00:03:24,923
addResource 方法。

67
00:03:25,850 --> 00:03:27,680
在这里，我想得到标题，

68
00:03:27,680 --> 00:03:30,580
描述，以及网址，

69
00:03:30,580 --> 00:03:32,970
我想生成一个新资源

70
00:03:32,970 --> 00:03:36,410
并将其添加到此 storedResources 数组中，

71
00:03:36,410 --> 00:03:38,343
每当触发此方法时。

72
00:03:39,320 --> 00:03:44,180
所以在这里，我将创建一个 newResource JavaScript 对象，

73
00:03:44,180 --> 00:03:46,970
并且该对象需要一个唯一的 ID。

74
00:03:46,970 --> 00:03:49,620
为此，我将在这里创建一个时间戳

75
00:03:49,620 --> 00:03:51,780
通过实例化日期对象，

76
00:03:51,780 --> 00:03:54,020
然后我会得到一个字符串时间戳

77
00:03:54,020 --> 00:03:55,743
通过调用 toISOString。

78
00:03:56,620 --> 00:03:59,023
这对于这个目的来说是独一无二的。

79
00:03:59,960 --> 00:04:03,170
然后我们需要在这个对象中设置一个title属性

80
00:04:03,170 --> 00:04:07,270
因为我们所有的存储资源都有一个title属性，

81
00:04:07,270 --> 00:04:10,290
它们还具有描述和链接属性。

82
00:04:10,290 --> 00:04:12,260
所以我们需要设置这两个，

83
00:04:12,260 --> 00:04:14,950
当然，我们收到的存储值

84
00:04:14,950 --> 00:04:17,660
作为这些属性中的参数。

85
00:04:17,660 --> 00:04:20,640
所以添加描述并将其设置为等于描述

86
00:04:20,640 --> 00:04:23,123
并添加链接并将其设置为 url。

87
00:04:25,630 --> 00:04:27,400
所以现在这是一个新资源，

88
00:04:27,400 --> 00:04:30,730
现在可以添加到 storedResources

89
00:04:30,730 --> 00:04:32,640
只需将它推到那里，

90
00:04:32,640 --> 00:04:36,023
或者如果我们想通过取消移位将它添加到顶部，

91
00:04:37,140 --> 00:04:39,000
这基本上就像推，

92
00:04:39,000 --> 00:04:40,970
但在数组的开头。

93
00:04:40,970 --> 00:04:43,947
所以在这里我将取消移动新资源。

94
00:04:45,870 --> 00:04:48,450
然后我也会设置这个 selectedTab

95
00:04:48,450 --> 00:04:52,000
到 storedResources 以便我们切换到选项卡

96
00:04:52,000 --> 00:04:54,023
当我们添加新资源时。

97
00:04:56,190 --> 00:04:58,750
现在回到 addResource 中，

98
00:04:58,750 --> 00:05:02,430
我想确保从 submitData 内部，

99
00:05:02,430 --> 00:05:04,730
我可以调用 addResource 方法

100
00:05:04,730 --> 00:05:08,190
我们只需将它添加到 TheResources.vue。

101
00:05:08,190 --> 00:05:10,090
我们怎样才能使这项工作？

102
00:05:10,090 --> 00:05:12,920
好吧，我们也可以提供这种方法。

103
00:05:12,920 --> 00:05:14,670
所以在这里提供，

104
00:05:14,670 --> 00:05:17,320
我可以添加一个 addResource 键。

105
00:05:17,320 --> 00:05:19,370
这个键名取决于你，

106
00:05:19,370 --> 00:05:21,770
但我想指出这个广告资源，

107
00:05:21,770 --> 00:05:23,513
因此我指的是我的方法。

108
00:05:24,760 --> 00:05:26,250
我不在这里执行它，

109
00:05:26,250 --> 00:05:28,090
我只是指着它。

110
00:05:28,090 --> 00:05:31,140
现在我们可以注入这个 addResource 键，

111
00:05:31,140 --> 00:05:33,830
实体 addResources 组件。

112
00:05:33,830 --> 00:05:35,970
在这里我们可以添加注入密钥

113
00:05:36,910 --> 00:05:39,940
并像这样注入addResource，

114
00:05:39,940 --> 00:05:41,720
这允许我们在这里调用它

115
00:05:41,720 --> 00:05:43,390
而不是提交数据。

116
00:05:43,390 --> 00:05:45,940
在这里，我们现在可以调用 addResource

117
00:05:45,940 --> 00:05:48,510
并转发输入的标题，

118
00:05:48,510 --> 00:05:51,593
输入的描述和输入的网址。

119
00:05:53,930 --> 00:05:55,290
我们可以保存这一切。

120
00:05:55,290 --> 00:05:57,550
现在如果我们回去

121
00:05:57,550 --> 00:06:00,243
我在这里输入一些测试数据，

122
00:06:01,540 --> 00:06:03,610
类似的东西，

123
00:06:03,610 --> 00:06:05,313
如果我单击添加 rRsource，

124
00:06:07,120 --> 00:06:09,100
好吧，我忘记了一件事。

125
00:06:09,100 --> 00:06:12,280
显然，必须要 submitData 方法很好，

126
00:06:12,280 --> 00:06:15,280
但我还需要在提交表单时触发它

127
00:06:15,280 --> 00:06:17,450
而目前这还没有发生。

128
00:06:17,450 --> 00:06:19,010
所以在这里的表格上，

129
00:06:19,010 --> 00:06:21,240
我想添加一个提交监听器

130
00:06:21,240 --> 00:06:23,460
以及所有以防止浏览器默认

131
00:06:23,460 --> 00:06:25,600
使用 prevent 修饰符。

132
00:06:25,600 --> 00:06:28,020
然后指向 submitData

133
00:06:28,020 --> 00:06:30,860
所以添加我们一直在研究的这个方法。

134
00:06:30,860 --> 00:06:32,080
现在添加了数据，

135
00:06:32,080 --> 00:06:34,403
这当然是相当重要的一步，

136
00:06:35,490 --> 00:06:37,740
如果我们回去，加上爸爸，

137
00:06:37,740 --> 00:06:41,300
我可以在这里再次添加我的测试数据

138
00:06:41,300 --> 00:06:43,840
现在如果我点击添加资源，

139
00:06:43,840 --> 00:06:46,500
这行得通，这是我们的测试资源。

140
00:06:46,500 --> 00:06:49,303
如果我点击链接，我确实会被带到谷歌。

141
00:06:50,370 --> 00:06:51,380
所以这行得通，

142
00:06:51,380 --> 00:06:53,670
如果我按数据丢失的方式返回

143
00:06:53,670 --> 00:06:55,660
因为它只存在于内存中

144
00:06:55,660 --> 00:06:57,650
只要我们的应用程序正在运行，

145
00:06:57,650 --> 00:07:00,920
稍后我们将学习如何持久化数据

146
00:07:00,920 --> 00:07:03,850
并将其存储在服务器上作为旁注。

147
00:07:03,850 --> 00:07:05,860
但是，我们添加了这个。

148
00:07:05,860 --> 00:07:08,170
不过，我想微调一件事，

149
00:07:08,170 --> 00:07:11,070
现在如果我开始在这里输入数据

150
00:07:11,070 --> 00:07:12,960
在添加资源选项卡上，

151
00:07:12,960 --> 00:07:14,750
然后我离开标签，

152
00:07:14,750 --> 00:07:17,710
我回来了，我输入的数据丢失了，

153
00:07:17,710 --> 00:07:19,750
这也是我们也介绍过的场景

154
00:07:19,750 --> 00:07:21,970
在最后一个课程模块中。

155
00:07:21,970 --> 00:07:26,220
我们可以通过访问 TheResources.vue 来解决这个问题

156
00:07:26,220 --> 00:07:28,470
并包装我们的动态组件

157
00:07:28,470 --> 00:07:32,023
像这样的keep-alive组件。

158
00:07:33,030 --> 00:07:33,940
如果我们这样做，

159
00:07:33,940 --> 00:07:35,580
组件将被缓存

160
00:07:35,580 --> 00:07:37,960
并且数据不会丢失。

161
00:07:37,960 --> 00:07:41,410
所以如果我们这样做，我现在在这里输入数据，

162
00:07:41,410 --> 00:07:43,430
如果它切换到选项卡并返回，

163
00:07:43,430 --> 00:07:45,250
我的意见仍然存在。

164
00:07:45,250 --> 00:07:49,290
至此，addResource 表单几乎完成了，

165
00:07:49,290 --> 00:07:51,610
但是缺少一个重要的部分。

166
00:07:51,610 --> 00:07:53,830
我也想让用户知道

167
00:07:53,830 --> 00:07:56,900
当他或她试图提交无效数据时。

168
00:07:56,900 --> 00:08:00,150
例如，当此处的标题字段为空时。

169
00:08:00,150 --> 00:08:02,900
目前，这是可能的。

170
00:08:02,900 --> 00:08:05,430
我当然想防止这种情况发生

171
00:08:05,430 --> 00:08:08,460
我想向用户显示一条错误消息。

172
00:08:08,460 --> 00:08:11,130
我想用一个漂亮的覆盖来做到这一点

173
00:08:11,130 --> 00:08:13,300
带有自定义对话。

174
00:08:13,300 --> 00:08:14,700
所以和以前一样，

175
00:08:14,700 --> 00:08:16,770
您可以自己尝试一下。

176
00:08:16,770 --> 00:08:18,730
建立这样的错误对话

177
00:08:18,730 --> 00:08:22,000
并在用户提交无效数据时显示，

178
00:08:22,000 --> 00:08:23,320
我们将一起建造它，

179
00:08:23,320 --> 00:08:25,023
从下一节课开始。