1
00:00:02,150 --> 00:00:05,400
那么我们如何确保用户无法

2
00:00:05,400 --> 00:00:09,850
在添加资源组件中提交空数据。

3
00:00:09,850 --> 00:00:13,920
好吧，当然，我们得到了自由输入的输入值

4
00:00:13,920 --> 00:00:15,390
如果检查，我们可以编辑

5
00:00:15,390 --> 00:00:20,390
并检查输入的标题是否为空或准确地说，

6
00:00:20,990 --> 00:00:23,090
我什至会叫它修剪，

7
00:00:23,090 --> 00:00:26,520
这是一个存在于 JavaScript 中的内置方法，

8
00:00:26,520 --> 00:00:30,560
您可以调用字符串以删除多余的空白

9
00:00:30,560 --> 00:00:32,210
在开始和结束。

10
00:00:32,210 --> 00:00:36,780
这样可以避免用户输入一堆空白

11
00:00:36,780 --> 00:00:39,210
和 dead 将被视为有效。

12
00:00:39,210 --> 00:00:42,170
修剪将删除那些多余的空白

13
00:00:42,170 --> 00:00:45,320
因此，我们仍然会给我们一个空输入。

14
00:00:45,320 --> 00:00:47,400
所以这就是为什么我要这样检查它。

15
00:00:47,400 --> 00:00:52,360
如果是这样的话，或者如果我输入了描述，

16
00:00:52,360 --> 00:00:54,860
一旦我们修剪它是空的

17
00:00:54,860 --> 00:00:59,560
或者如果输入 U R L，则修剪为空。

18
00:00:59,560 --> 00:01:01,700
如果有任何一种情况，

19
00:01:01,700 --> 00:01:04,483
然后我知道输入无效。

20
00:01:06,220 --> 00:01:07,053
现在一个，

21
00:01:07,053 --> 00:01:09,110
我会让它们变成白色

22
00:01:09,110 --> 00:01:11,680
这行代码在这里执行

23
00:01:11,680 --> 00:01:15,450
因为返回会停止函数的执行。

24
00:01:15,450 --> 00:01:18,350
但除此之外，我还想显示我的警报

25
00:01:18,350 --> 00:01:21,280
我可以使用内置的警报功能来做到这一点，

26
00:01:21,280 --> 00:01:23,740
但我想拥有自己的自定义对话，

27
00:01:23,740 --> 00:01:25,800
看起来更好一点，

28
00:01:25,800 --> 00:01:28,750
因此我将添加一个新组件

29
00:01:28,750 --> 00:01:31,770
它实际上会将其添加到 UI 文件夹中，

30
00:01:31,770 --> 00:01:34,650
基本对话点视图文件，

31
00:01:34,650 --> 00:01:36,510
可以用于任何事情，

32
00:01:36,510 --> 00:01:39,563
但我将使用它来显示错误消息。

33
00:01:40,590 --> 00:01:43,859
现在在模板中这个基本风格的 Octa 视图文件中，

34
00:01:43,859 --> 00:01:46,790
我将添加内置对话，

35
00:01:46,790 --> 00:01:51,790
HTML 元素并添加 open 属性

36
00:01:52,040 --> 00:01:53,980
所以它总是开放的，

37
00:01:53,980 --> 00:01:57,010
但随后将通过添加来控制可见性

38
00:01:57,010 --> 00:02:00,053
或从 Dom 中删除基本对话。

39
00:02:01,000 --> 00:02:03,900
在对话中，现在完全取决于你，

40
00:02:03,900 --> 00:02:06,210
你想如何构建这个。

41
00:02:06,210 --> 00:02:08,245
我将在这里添加一个标题元素。

42
00:02:08,245 --> 00:02:09,939
在那个标题中，

43
00:02:09,939 --> 00:02:13,970
我将添加一个插槽，以便用户能够

44
00:02:13,970 --> 00:02:15,980
设置标题。

45
00:02:15,980 --> 00:02:19,027
但我实际上也会提供一个默认内容

46
00:02:19,027 --> 00:02:20,970
插槽技术之间，

47
00:02:20,970 --> 00:02:24,063
如果没有提供标题，将使用它。

48
00:02:25,710 --> 00:02:28,240
在那里我什至会把它带到一个新的水平，

49
00:02:28,240 --> 00:02:31,350
我将输出一个标题属性，

50
00:02:31,350 --> 00:02:34,170
我希望得到作为道具。

51
00:02:34,170 --> 00:02:36,360
所以在这里我将添加 props 键

52
00:02:36,360 --> 00:02:39,820
并期望在这个组件上有一个标题道具。

53
00:02:39,820 --> 00:02:42,842
这为我们作为开发人员提供了充分的灵活性。

54
00:02:42,842 --> 00:02:45,100
使用基础对话时，

55
00:02:45,100 --> 00:02:48,710
我们可以只提供标题道具

56
00:02:48,710 --> 00:02:53,490
或者我们提供完全定制的 HTML 结构，

57
00:02:53,490 --> 00:02:56,063
然后将其插入此标头插槽中。

58
00:02:57,520 --> 00:03:02,450
所以我们可以同时使用我们自己的自定义文本的默认值

59
00:03:02,450 --> 00:03:06,600
或者完全覆盖它而不仅仅是提供我们自己的文本，

60
00:03:06,600 --> 00:03:09,210
还有我们自己的 HTML 代码

61
00:03:09,210 --> 00:03:11,420
应该在标题中使用。

62
00:03:11,420 --> 00:03:14,690
因此，我实际上会在这里以不同的方式添加我的道具，

63
00:03:14,690 --> 00:03:19,690
并且非常清楚标题是可选的这一事实。

64
00:03:20,070 --> 00:03:24,450
它的类型是字符串，但绝对不是必需的。

65
00:03:24,450 --> 00:03:26,760
您不必提供标题道具

66
00:03:26,760 --> 00:03:28,990
因为当然你也可以提供

67
00:03:28,990 --> 00:03:32,083
您自己的 HTML 内容很多。

68
00:03:34,410 --> 00:03:35,560
现在在标题之后，

69
00:03:35,560 --> 00:03:38,910
我将添加一个部分，这将包含主要内容

70
00:03:38,910 --> 00:03:40,160
关闭这个对话。

71
00:03:40,160 --> 00:03:42,860
再次在这里，我想给我们作为开发人员

72
00:03:42,860 --> 00:03:45,390
尽可能多的灵活性，

73
00:03:45,390 --> 00:03:49,091
我们应该可以带上我们自己的 HTML 代码。

74
00:03:49,091 --> 00:03:52,130
因此再次这样做，时间到了，

75
00:03:52,130 --> 00:03:56,390
但由于我们现在有两个插槽，我们需要命名插槽。

76
00:03:56,390 --> 00:04:01,390
一个插槽可能仍然未命名，但我们所有的插槽都需要名称。

77
00:04:02,100 --> 00:04:04,000
所以我会在这里命名这个插槽，

78
00:04:04,000 --> 00:04:07,053
header 因为它毕竟是我们的 header 插槽。

79
00:04:08,700 --> 00:04:13,000
然后我将在此对话的标题之后添加第三部分

80
00:04:13,000 --> 00:04:16,649
主要部分，我将添加一个菜单元素，

81
00:04:16,649 --> 00:04:21,440
这又是我想要允许的默认 HTML 元素

82
00:04:21,440 --> 00:04:24,680
用户显示按钮，用户可以按下。

83
00:04:24,680 --> 00:04:27,230
同样，应提供 HTML 代码

84
00:04:27,230 --> 00:04:28,960
由我们作为开发人员。

85
00:04:28,960 --> 00:04:32,820
所以这里我还要给这个起个名字action，

86
00:04:32,820 --> 00:04:36,823
现在我们可以在这里传递我们自己的 HTML 代码。

87
00:04:39,010 --> 00:04:42,460
现在我只在这个应用程序的一个地方使用这个对话

88
00:04:42,460 --> 00:04:45,520
因此我们不必把它构建得那么灵活

89
00:04:45,520 --> 00:04:46,880
当我们在这里做的时候，

90
00:04:46,880 --> 00:04:49,380
但当然，这是关于练习这一切的。

91
00:04:49,380 --> 00:04:50,890
这是关于向你展示

92
00:04:50,890 --> 00:04:54,560
你如何建立一个真正可重用的对话，

93
00:04:54,560 --> 00:04:57,950
然后你可以在你的应用程序之外的不同地方使用它

94
00:04:57,950 --> 00:05:00,940
并以完全不同的方式使用和配置它。

95
00:05:00,940 --> 00:05:03,550
每次您作为开发人员使用它。

96
00:05:03,550 --> 00:05:07,223
这就是为什么我在这里以这种高度灵活的方式构建它。

97
00:05:08,740 --> 00:05:11,410
而且我也不只是想要对话。

98
00:05:11,410 --> 00:05:14,280
我总是想在它背后有一个背景。

99
00:05:14,280 --> 00:05:16,510
所以我想确保后面的页面

100
00:05:16,510 --> 00:05:19,300
对话很棒。

101
00:05:19,300 --> 00:05:23,793
对于 div，我将在这样的对话旁边添加一个 div。

102
00:05:25,640 --> 00:05:28,170
添加后，我们可以添加一些样式，

103
00:05:28,170 --> 00:05:31,200
我当然也为你准备了。

104
00:05:31,200 --> 00:05:36,070
我会像往常一样再次添加我的作用域样式并附上。

105
00:05:36,070 --> 00:05:40,650
你会发现这个对话 CSS 文件和往常一样，

106
00:05:40,650 --> 00:05:43,000
它包含一堆 CSS 规则，

107
00:05:43,000 --> 00:05:45,000
您只需复制和粘贴

108
00:05:45,000 --> 00:05:46,950
在您的样式标签之间。

109
00:05:46,950 --> 00:05:49,546
这将给出对话和标题

110
00:05:49,546 --> 00:05:53,063
和这个背景，所需的造型。

111
00:05:54,920 --> 00:05:57,943
我们在这里有一个基本的对话。

112
00:06:00,210 --> 00:06:02,530
现在让我们看看如何使用它。

113
00:06:02,530 --> 00:06:05,960
首先，我当然会在全球范围内注册它

114
00:06:05,960 --> 00:06:09,140
这样我们就可以在这个应用程序的任何地方使用它。

115
00:06:09,140 --> 00:06:11,960
所以在主 JS 中，我将导入基于对话

116
00:06:11,960 --> 00:06:16,960
从点斜线组件 UI 基础对话点视图，

117
00:06:17,160 --> 00:06:22,160
然后添加基于应用程序组件的对话

118
00:06:22,260 --> 00:06:25,333
并指向我的基本对话配置对象。

119
00:06:28,170 --> 00:06:32,790
这样，对话现在就在广告资源中注册了，

120
00:06:32,790 --> 00:06:35,570
我们可以使用它，这里应该显示它。

121
00:06:35,570 --> 00:06:38,083
如果用户输入的内容无效。

122
00:06:39,630 --> 00:06:42,130
对于数据，我将在此处添加我的数据属性

123
00:06:42,130 --> 00:06:44,670
添加资源组件。

124
00:06:44,670 --> 00:06:47,810
我想在这里管理的一个数据

125
00:06:47,810 --> 00:06:49,430
是关于的信息

126
00:06:49,430 --> 00:06:52,630
用户输入是否无效。

127
00:06:52,630 --> 00:06:56,520
所以我将在这里命名我的属性，输入无效。

128
00:06:56,520 --> 00:06:59,860
最初那是错误的，因为最初是用户输入

129
00:06:59,860 --> 00:07:03,830
还不是无效的，因为用户没有机会

130
00:07:03,830 --> 00:07:04,923
输入任何东西，

131
00:07:06,170 --> 00:07:10,400
但如果我们进行安全检查，我会将其设置为 true。

132
00:07:10,400 --> 00:07:14,330
因此，如果这些输入中至少有一个为空，那么我将设置

133
00:07:14,330 --> 00:07:16,773
此输入对 true 无效。

134
00:07:18,210 --> 00:07:21,080
现在我们可以使用这个新添加的属性

135
00:07:21,080 --> 00:07:23,470
切换我们的对话。

136
00:07:23,470 --> 00:07:26,105
在基卡旁边。

137
00:07:26,105 --> 00:07:31,105
我将添加这样的基本对话，

138
00:07:34,640 --> 00:07:37,170
我会用VF来展示它。

139
00:07:37,170 --> 00:07:40,170
如果输入无效为真

140
00:07:41,360 --> 00:07:45,010
现在我们可以为我们的不同插槽提供内容。

141
00:07:45,010 --> 00:07:48,340
现在我实际上不会提供我自己的标题槽。

142
00:07:48,340 --> 00:07:51,960
相反，我想利用这个默认后备

143
00:07:51,960 --> 00:07:54,222
并设置我自己的标题文本。

144
00:07:54,222 --> 00:07:58,620
因此，我将在基本对话上设置标题道具

145
00:07:58,620 --> 00:08:00,823
并将其设置为无效输入。

146
00:08:02,950 --> 00:08:05,780
但我确实想提供 HTML 内容

147
00:08:05,780 --> 00:08:07,850
其他两个插槽。

148
00:08:07,850 --> 00:08:10,650
所以在这里，我现在将添加一个模板标签

149
00:08:11,850 --> 00:08:15,310
并使用此速记定位默认插槽。

150
00:08:15,310 --> 00:08:18,580
替代方案是 V 槽冒号默认值，

151
00:08:18,580 --> 00:08:22,297
但您可以在此处使用短端和之间。

152
00:08:22,297 --> 00:08:26,601
我想要一段话，不幸的是，

153
00:08:26,601 --> 00:08:31,570
至少一个输入值无效

154
00:08:32,940 --> 00:08:37,750
并在我说的地方添加另一段，

155
00:08:37,750 --> 00:08:42,466
请检查所有输入并确保您输入

156
00:08:42,466 --> 00:08:47,466
队列中至少有几个字符，每个输入字段，

157
00:08:49,450 --> 00:08:50,420
像这样的东西。

158
00:08:50,420 --> 00:08:52,493
当然，错误消息取决于您。

159
00:08:55,370 --> 00:08:57,930
现在我们还需要第二个模板

160
00:08:57,930 --> 00:09:01,110
为我们拥有的第二个插槽提供内容

161
00:09:01,110 --> 00:09:03,600
对于这个动作槽。

162
00:09:03,600 --> 00:09:08,390
所以在这里使用 v-slot 动作或使用速记，

163
00:09:08,390 --> 00:09:12,020
我们可以告诉 view 那是模板里面的内容

164
00:09:12,020 --> 00:09:13,810
应该进入那个插槽。

165
00:09:13,810 --> 00:09:15,920
在那里，我想要一个基本按钮

166
00:09:16,950 --> 00:09:20,963
我只是说，好吧。

167
00:09:23,070 --> 00:09:25,660
我为这个按钮添加了一个点击监听器。

168
00:09:25,660 --> 00:09:27,670
现在我想触发一个方法

169
00:09:27,670 --> 00:09:30,500
这允许我们关闭此对话框。

170
00:09:30,500 --> 00:09:31,440
所以他们一年，

171
00:09:31,440 --> 00:09:33,340
我将注册一个新方法

172
00:09:34,490 --> 00:09:37,990
D 确认错误方法 例如，

173
00:09:37,990 --> 00:09:41,700
我们将这个输入设置为无效的地方返回假，

174
00:09:41,700 --> 00:09:43,940
然后将关闭对话

175
00:09:43,940 --> 00:09:47,060
并应触发确认错误。

176
00:09:47,060 --> 00:09:49,780
如果单击此处的此按钮

177
00:09:49,780 --> 00:09:52,563
这个按钮在我们对话的动作中。

178
00:09:55,220 --> 00:09:59,180
有了所有这些，如果我们保存它并重新加载此页面，

179
00:09:59,180 --> 00:10:03,240
我们去添加资源并尝试提交这个，

180
00:10:03,240 --> 00:10:07,493
我们应该看到我们的对话，然后单击，好的，关闭它。

181
00:10:08,450 --> 00:10:11,310
现在如果点击背景会很棒

182
00:10:11,310 --> 00:10:15,010
也会关闭它，但目前还没有发生。

183
00:10:15,010 --> 00:10:18,310
因此，让我们将此功能添加到基本对话中。

184
00:10:18,310 --> 00:10:20,600
因此在这个僵硬的地方，

185
00:10:20,600 --> 00:10:25,205
我将添加一个点击监听器，这里的 div 是我们的背景，

186
00:10:25,205 --> 00:10:29,500
我想在哪里发出自定义事件，

187
00:10:29,500 --> 00:10:30,780
我将命名关闭。

188
00:10:30,780 --> 00:10:33,323
当然，这个自定义事件名称取决于您。

189
00:10:34,330 --> 00:10:37,450
实际上我也会留在这里

190
00:10:37,450 --> 00:10:41,450
并将后备内容添加到我的操作槽中，

191
00:10:41,450 --> 00:10:44,360
即使我们在这里使用它的方式不需要它，

192
00:10:44,360 --> 00:10:46,343
但要使它真正可重用。

193
00:10:47,420 --> 00:10:50,557
我将在这里添加一个基本按钮作为后备内容

194
00:10:50,557 --> 00:10:54,390
我说关闭的地方和点击的地方，

195
00:10:54,390 --> 00:10:58,090
我也发出这个关闭的自定义事件

196
00:10:58,090 --> 00:11:00,930
这样如果用户不会提供任何内容

197
00:11:00,930 --> 00:11:02,470
对于动作插槽，

198
00:11:02,470 --> 00:11:04,463
至少会显示此按钮。

199
00:11:07,680 --> 00:11:12,180
现在有了这个，我会让你知道

200
00:11:12,180 --> 00:11:15,690
我们发出的关于关闭事件的自定义事件

201
00:11:15,690 --> 00:11:19,343
通过向此冲突对象添加 D 发出选项。

202
00:11:20,260 --> 00:11:23,630
现在有了这个，我们可以回去添加资源

203
00:11:23,630 --> 00:11:26,560
我们在哪里使用基本对话。

204
00:11:26,560 --> 00:11:30,830
我们现在可以在此对话中收听此密切事件。

205
00:11:30,830 --> 00:11:32,580
而当这个事件发生时，

206
00:11:32,580 --> 00:11:35,920
我想运行我的确认错误方法。

207
00:11:35,920 --> 00:11:38,090
所以我们执行相同的方法

208
00:11:38,090 --> 00:11:39,690
当单击此确定按钮时

209
00:11:41,380 --> 00:11:42,940
因此现在加上了，

210
00:11:42,940 --> 00:11:46,820
如果我们保存并重新加载此页面，

211
00:11:46,820 --> 00:11:51,280
如果我回到这里提交一个空表格，

212
00:11:51,280 --> 00:11:53,370
我现在也可以关闭对话了

213
00:11:53,370 --> 00:11:55,140
通过单击背景。

214
00:11:55,140 --> 00:11:58,590
当然也仍然使用确定按钮。

215
00:11:58,590 --> 00:12:01,770
另一方面，如果我们在此处输入有效的内容。

216
00:12:01,770 --> 00:12:04,609
所以如果我们不提供无效的输入，

217
00:12:04,609 --> 00:12:07,980
创建资源仍然有效。

218
00:12:07,980 --> 00:12:10,600
所以如果只剩下最后一件事

219
00:12:10,600 --> 00:12:13,623
那就是删除资源，

220
00:12:14,660 --> 00:12:17,103
我们将共同实施债务作为下一步。