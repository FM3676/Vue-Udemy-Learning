1
00:00:02,240 --> 00:00:04,110
所以我们得到了我们的第一个组件。

2
00:00:04,110 --> 00:00:06,640
现在让我们处理样式。

3
00:00:06,640 --> 00:00:08,950
现在有一些基础样式

4
00:00:08,950 --> 00:00:11,210
我想将应用程序设置为广泛。

5
00:00:11,210 --> 00:00:14,020
为此，我将使用 App.vue

6
00:00:14,020 --> 00:00:18,120
在脚本标签下方，我将添加样式标签

7
00:00:18,120 --> 00:00:21,340
没有 scoped.vue，只要这样的风格。

8
00:00:21,340 --> 00:00:24,630
所以这里的样式是全局应用的

9
00:00:24,630 --> 00:00:26,323
到整个应用程序。

10
00:00:28,020 --> 00:00:29,630
作为旁注，结构

11
00:00:29,630 --> 00:00:32,450
首先有模板，脚本部分，

12
00:00:32,450 --> 00:00:35,290
最后造型是典型的结构

13
00:00:35,290 --> 00:00:37,630
你想在那些 dot.vue 文件中使用，

14
00:00:37,630 --> 00:00:40,320
以防万一你想知道。

15
00:00:40,320 --> 00:00:43,850
现在附上你会发现一个应用程序 CSS 文件，

16
00:00:43,850 --> 00:00:45,680
其中包含一些样式，

17
00:00:45,680 --> 00:00:48,940
您应该在这些样式标签之间进行复制。

18
00:00:48,940 --> 00:00:51,410
我在这里导入了一些 Google 字体。

19
00:00:51,410 --> 00:00:52,350
然后我只是设置

20
00:00:52,350 --> 00:00:54,820
一些通用应用范围的样式。

21
00:00:54,820 --> 00:00:58,363
例如，将导入的字体应用为默认字体。

22
00:00:59,480 --> 00:01:02,833
如果您这么说并重新加载，我们就有不同的字体。

23
00:01:04,459 --> 00:01:06,340
现在，我也想改变样式

24
00:01:06,340 --> 00:01:09,100
学习资源，因此在这里，

25
00:01:09,100 --> 00:01:13,440
我还将添加样式，但现在使用 scoped 属性，

26
00:01:13,440 --> 00:01:14,960
因为这里的风格

27
00:01:14,960 --> 00:01:17,663
应该是这个组件独有的。

28
00:01:19,260 --> 00:01:21,680
现在您还可以找到学习资源

29
00:01:21,680 --> 00:01:25,030
附加点 CSS 文件，正如您可能猜到的那样

30
00:01:25,030 --> 00:01:26,660
包含两种样式，

31
00:01:26,660 --> 00:01:29,163
您应该在这些样式标签之间进行复制。

32
00:01:30,150 --> 00:01:33,760
我给你这些复制和粘贴的样式

33
00:01:33,760 --> 00:01:37,260
因为这不是 CSS 课程 我知道很多学生都很无聊

34
00:01:37,260 --> 00:01:39,090
如果我们在这里编写 CSS 代码。

35
00:01:39,090 --> 00:01:41,943
所以这里是你可以复制它们的样式。

36
00:01:43,380 --> 00:01:46,070
你现在应该在屏幕上看到这个。

37
00:01:46,070 --> 00:01:48,900
现在显然，这不是最终的风格，

38
00:01:48,900 --> 00:01:50,933
但至少看起来好一点。

39
00:01:53,150 --> 00:01:55,740
为了更接近最终的造型，

40
00:01:55,740 --> 00:01:57,530
我将添加另一个组件

41
00:01:57,530 --> 00:02:00,430
学习资源组件旁边。

42
00:02:00,430 --> 00:02:03,960
那将是一个实际上应该包含的组件

43
00:02:03,960 --> 00:02:08,960
这个无序列表，然后还有这个循环。

44
00:02:09,199 --> 00:02:11,540
我正在为此创建一个单独的组件

45
00:02:11,540 --> 00:02:14,350
不是因为这将是这么多的标记，

46
00:02:14,350 --> 00:02:17,100
但因为我本质上不想拥有它

47
00:02:17,100 --> 00:02:20,010
在我的根 App.vue 文件中。

48
00:02:20,010 --> 00:02:23,090
我真的只想在里面有一个最小的模板

49
00:02:23,090 --> 00:02:26,050
并在这里有应用程序范围的样式。

50
00:02:26,050 --> 00:02:27,660
所以我不想开始造型

51
00:02:27,660 --> 00:02:30,350
App.vue 中的无序列表，

52
00:02:30,350 --> 00:02:32,320
当我们可能使用无序列表时

53
00:02:32,320 --> 00:02:34,200
在其他组件中，

54
00:02:34,200 --> 00:02:36,443
因为我不想在这里使用范围。

55
00:02:37,870 --> 00:02:40,350
因此，我将添加一个全新的组件

56
00:02:40,350 --> 00:02:43,200
我将其命名为 StoredResources.vue

57
00:02:44,220 --> 00:02:48,700
添加一个模板，基本上只是复制模板

58
00:02:48,700 --> 00:02:51,130
从 App.vue 文件中，

59
00:02:51,130 --> 00:02:53,900
或将其剪切到该模板中

60
00:02:53,900 --> 00:02:56,593
StoredResources.vue 文件。

61
00:02:58,660 --> 00:03:02,130
当然，我们现在在这里缺少 StoredResources，

62
00:03:02,130 --> 00:03:05,470
我们需要 v-for，StoredResources

63
00:03:05,470 --> 00:03:10,000
仍然是我们应用程序的数据选项的一部分，

64
00:03:10,000 --> 00:03:11,590
因此不可用

65
00:03:11,590 --> 00:03:13,463
像这样在 StoredResources 中。

66
00:03:15,970 --> 00:03:17,150
嗯，你当然知道

67
00:03:17,150 --> 00:03:19,430
我们如何在此处提供它们。

68
00:03:19,430 --> 00:03:22,010
我们可以在这里添加道具

69
00:03:22,010 --> 00:03:25,820
让 Vue 我们需要一些来自外部的数据。

70
00:03:25,820 --> 00:03:29,080
在这里，我想获得我的资源，

71
00:03:29,080 --> 00:03:30,680
再次，这个名字取决于你。

72
00:03:30,680 --> 00:03:33,733
这样我就可以在这里循环我的资源。

73
00:03:35,010 --> 00:03:39,130
资源现在应该是那些 StoredResources。

74
00:03:39,130​​ --> 00:03:43,360
所以在 App.vue 中，我实际上会删除现有的导入

75
00:03:43,360 --> 00:03:47,653
我在这里，然后声明 import StoredResources

76
00:03:49,350 --> 00:03:54,350
来自 ./components LearningResources, StoredResources.vue

77
00:03:57,645 --> 00:04:00,370
并在此处注册 StoredResources

78
00:04:00,370 --> 00:04:04,004
在组件而不是 LearningResources 中，

79
00:04:04,004 --> 00:04:06,837
然后在这里使用存储资源

80
00:04:08,630 --> 00:04:11,150
在我的 App.vue 文件模板中，

81
00:04:11,150 --> 00:04:15,653
并传递我在数据中的 StoredResources，

82
00:04:16,750 --> 00:04:20,529
通过对 StoredResources 组件的道具。

83
00:04:20,529 --> 00:04:24,110
所以在那里，我想绑定资源道具，

84
00:04:24,110 --> 00:04:27,013
这是我在那里添加的道具。

85
00:04:28,580 --> 00:04:33,330
我将在这里传递 StoredResources 键。

86
00:04:33,330 --> 00:04:36,800
所以我在数据选项中拥有的 StoredResources 数组

87
00:04:36,800 --> 00:04:40,610
通过资源属性作为值传递

88
00:04:40,610 --> 00:04:42,793
到 StoredResources 组件。

89
00:04:45,060 --> 00:04:47,760
现在在 StoredResources 组件内部，

90
00:04:47,760 --> 00:04:50,010
我们正在使用 LearningResource 组件。

91
00:04:50,010 --> 00:04:53,070
所以我想在那里导入并注册它。

92
00:04:53,070 --> 00:04:55,820
到目前为止，我正在使用本地组件，

93
00:04:55,820 --> 00:04:58,540
因为目前，我只有组件

94
00:04:58,540 --> 00:05:00,700
我在特定领域需要

95
00:05:00,700 --> 00:05:02,793
或在应用程序的特定部分。

96
00:05:03,690 --> 00:05:07,350
因此，在这里我将导入我的 LearningResource

97
00:05:10,360 --> 00:05:14,050
来自./LearningResource.vue，

98
00:05:14,050 --> 00:05:17,350
它与 StoredResource.vue 文件位于同一文件夹中。

99
00:05:17,350 --> 00:05:20,390
所以我们只需要这个导入路径。

100
00:05:20,390 --> 00:05:23,590
然后在这里，我将添加组件

101
00:05:24,670 --> 00:05:28,190
并将 LearningResource 注册为 LocalResource

102
00:05:28,190 --> 00:05:31,053
在这个 StoredResources 组件中。

103
00:05:32,800 --> 00:05:35,020
现在看起来像以前一样，

104
00:05:35,020 --> 00:05:36,920
但现在我有了一个全新的组件，

105
00:05:36,920 --> 00:05:38,940
StoredResources 组件。

106
00:05:38,940 --> 00:05:43,320
我添加了这个，因为现在在这里，我可以添加范围样式

107
00:05:43,320 --> 00:05:47,700
到 StoredResources 并添加特定于组件的样式

108
00:05:47,700 --> 00:05:50,240
负责处理这个无序列表

109
00:05:50,240 --> 00:05:53,870
在不影响应用其他部分的无序列表的情况下，

110
00:05:53,870 --> 00:05:55,820
我们可能有。

111
00:05:55,820 --> 00:05:57,590
当然，会有替代品

112
00:05:57,590 --> 00:05:59,390
对此解决方案也是如此。

113
00:05:59,390 --> 00:06:02,420
我们可以使用 CSS 类，例如，

114
00:06:02,420 --> 00:06:05,950
但我想像我提到的那样保持我的 App.vue 文件精简，

115
00:06:05,950 --> 00:06:09,120
通过添加这个额外的组件，我实现了这一点。

116
00:06:09,120 --> 00:06:11,170
现在，正如我之前在课程中提到的，

117
00:06:11,170 --> 00:06:12,860
类似的事情也下来了

118
00:06:12,860 --> 00:06:14,820
当然根据个人喜好。

119
00:06:14,820 --> 00:06:18,340
我只是在教你一种可能的方法，

120
00:06:18,340 --> 00:06:21,173
没有单一的正确或错误方法。

121
00:06:22,540 --> 00:06:25,710
但是，您现在可以下载附件

122
00:06:25,710 --> 00:06:28,370
存储资源 CSS 文件，

123
00:06:28,370 --> 00:06:30,980
并复制您在其中找到的样式，

124
00:06:30,980 --> 00:06:34,360
样式标签之间的这种无序列表样式

125
00:06:34,360 --> 00:06:36,603
您的 StoredResources.vue 文件。

126
00:06:38,330 --> 00:06:42,950
如果你这样做，你现在应该会看到略有变化。

127
00:06:42,950 --> 00:06:47,460
看这里，列表项前面的点都没有了。

128
00:06:47,460 --> 00:06:51,543
现在它仍然不是最终的样子，但它更接近了一步。

129
00:06:52,580 --> 00:06:55,840
这样我们就输出了一些虚拟资源。

130
00:06:55,840 --> 00:06:59,650
作为下一步，我想处理标题

131
00:06:59,650 --> 00:07:01,750
我想在这个应用程序中拥有

132
00:07:01,750 --> 00:07:06,740
我想添加卡片外观到我这里的资源。

133
00:07:06,740 --> 00:07:10,550
和以前一样，你绝对可以自己尝试，

134
00:07:10,550 --> 00:07:12,350
想出解决方案，

135
00:07:12,350 --> 00:07:14,650
用于添加标题和卡片外观，

136
00:07:14,650 --> 00:07:17,073
我们将在下一节课中一起做。