1
00:00:02,040 --> 00:00:04,710
所以让我们在这里输出资源，

2
00:00:04,710 --> 00:00:06,770
为此，我们可以使用列表项

3
00:00:06,770 --> 00:00:09,360
当然有 v-for ，

4
00:00:09,360 --> 00:00:12,620
循环遍历所有存储的资源。

5
00:00:12,620 --> 00:00:15,750
但正如我在上一节课结束时提到的，

6
00:00:15,750 --> 00:00:18,630
我宁愿创建一个单独的组件

7
00:00:18,630 --> 00:00:20,820
其中包含列表项，

8
00:00:20,820 --> 00:00:23,580
然后我会把所有的数据放在那里。

9
00:00:23,580 --> 00:00:25,670
现在你可能想知道为什么，

10
00:00:25,670 --> 00:00:28,110
为什么我们要创建一个单独的组件

11
00:00:28,110 --> 00:00:31,410
而不是在这里写下所有的标记。

12
00:00:31,410 --> 00:00:34,090
好吧，首先，让我说得很清楚

13
00:00:34,090 --> 00:00:36,680
你不需要创建一个单独的组件，

14
00:00:36,680 --> 00:00:39,540
这是可选的，这只是想法

15
00:00:39,540 --> 00:00:42,150
落后于使用像 Vue 这样的框架。

16
00:00:42,150 --> 00:00:44,910
如果您构建越来越大的应用程序，`

17
00:00:44,910 --> 00:00:48,200
你理论上可以把所有的标记

18
00:00:48,200 --> 00:00:50,520
只需一个 Vue 组件。

19
00:00:50,520 --> 00:00:53,943
所有的标记都可以进入 App.vue 的模板中，

20
00:00:54,920 --> 00:00:58,840
但这将成为一个超级大的文件

21
00:00:58,840 --> 00:01:01,820
并维护它，编辑它，

22
00:01:01,820 --> 00:01:04,560
找到您现在要编辑的代码，

23
00:01:04,560 --> 00:01:06,810
这一切都将成为一场噩梦，

24
00:01:06,810 --> 00:01:11,163
如果您在一个文件中拥有所有标记、所有逻辑。

25
00:01:12,010 --> 00:01:14,090
这就是我们想要拆分代码的原因

26
00:01:14,090 --> 00:01:16,830
成可重复使用的小块。

27
00:01:16,830 --> 00:01:19,180
现在，没有硬性规定

28
00:01:19,180 --> 00:01:21,680
当您应该购买新组件时，

29
00:01:21,680 --> 00:01:24,020
与放置标记和逻辑相比

30
00:01:24,020 --> 00:01:25,760
到现有组件中，

31
00:01:25,760 --> 00:01:28,350
这是你会随着时间的推移而发展的东西。

32
00:01:28,350 --> 00:01:29,740
这是你会得到的感觉

33
00:01:29,740 --> 00:01:33,170
当然，这也归结为个人喜好。

34
00:01:33,170 --> 00:01:36,060
但是你循环的列表项之类的东西

35
00:01:36,060 --> 00:01:39,290
通常是单独组件的候选者，

36
00:01:39,290 --> 00:01:41,520
因此，我将创建一个全新的组件

37
00:01:41,520 --> 00:01:42,423
这里也是。

38
00:01:43,430 --> 00:01:46,480
还有我想在这里生成的那个组件

39
00:01:46,480 --> 00:01:50,780
是资源项组件。

40
00:01:50,780 --> 00:01:52,100
现在名字由你决定

41
00:01:52,100 --> 00:01:53,840
但你当然想描述

42
00:01:53,840 --> 00:01:56,240
你将使用这个组件做什么。

43
00:01:56,240 --> 00:01:58,440
我将使用这个组件

44
00:01:58,440 --> 00:02:01,310
显示学习资源项目，

45
00:02:01,310 --> 00:02:03,660
当然我们也可以因此命名它，

46
00:02:03,660 --> 00:02:06,280
学习资源，如果您愿意，

47
00:02:06,280 --> 00:02:08,120
实际上我更喜欢那样。

48
00:02:08,120 --> 00:02:11,283
所以让我们一起去吧，LearningResource.vue。

49
00:02:13,270 --> 00:02:15,750
现在，就因为我这样命名文件，

50
00:02:15,750 --> 00:02:17,650
它不是自动的名称

51
00:02:17,650 --> 00:02:19,600
我将使用该组件，

52
00:02:19,600 --> 00:02:22,990
但保持一致被认为是一种很好的做法。

53
00:02:22,990 --> 00:02:25,440
所以如果你命名了一个文件学习资源，

54
00:02:25,440 --> 00:02:28,573
您还应该稍后将其命名为组件学习资源。

55
00:02:30,060 --> 00:02:32,470
现在，我不想存储这个组件

56
00:02:32,470 --> 00:02:34,600
虽然在这样的组件文件夹中。

57
00:02:34,600 --> 00:02:36,830
稍后我们将添加更多组件

58
00:02:36,830 --> 00:02:40,970
并保持我的代码井井有条并保持文件井井有条，

59
00:02:40,970 --> 00:02:42,860
我将在这里创建一个子文件夹，

60
00:02:42,860 --> 00:02:47,660
我会命名它，资源或学习资源，

61
00:02:47,660 --> 00:02:50,160
因为我想存储所有的学习资源

62
00:02:50,160 --> 00:02:52,830
该子文件夹中的相关组件。

63
00:02:52,830 --> 00:02:54,190
所以代替组件

64
00:02:54,190 --> 00:02:56,703
它们位于学习资源文件夹中。

65
00:02:58,150 --> 00:03:00,220
然后在 App.vue 中，

66
00:03:00,220 --> 00:03:03,050
我想导入这个新创建的组件。

67
00:03:03,050 --> 00:03:06,120
它仍然是空的，但我们很快就会改变它。

68
00:03:06,120 --> 00:03:08,360
所以让我们导入 LearningResource

69
00:03:08,360 --> 00:03:13,360
来自'./components/learning-resources/LearningResource.vue'

70
00:03:16,590 --> 00:03:18,503
这就是我们刚刚创建的文件。

71
00:03:19,770 --> 00:03:23,150
并且在 App.vue 中添加了该导入，

72
00:03:23,150 --> 00:03:27,100
我们可以将 components 选项添加到我们的对象

73
00:03:27,100 --> 00:03:29,850
并像这样注册学习资源，

74
00:03:29,850 --> 00:03:31,420
你就是这样学会的。

75
00:03:31,420 --> 00:03:35,050
您也可以单独给它另一个密钥

76
00:03:35,050 --> 00:03:38,060
或无论如何都会假定的相同密钥，

77
00:03:38,060 --> 00:03:39,670
但没有必要这样做

78
00:03:39,670 --> 00:03:41,650
你可以像这样注册它，

79
00:03:41,650 --> 00:03:44,440
并且感谢这种现代的 JavaScript 语法。

80
00:03:44,440 --> 00:03:47,130
这会自动扩展到此代码

81
00:03:47,130 --> 00:03:49,570
这反过来会告诉 Vue

82
00:03:49,570 --> 00:03:51,300
你希望能够使用

83
00:03:51,300 --> 00:03:54,970
使用此标记的学习资源组件

84
00:03:54,970 --> 00:03:57,940
或它的烤肉串版本。

85
00:03:57,940 --> 00:04:00,913
但这就是我在最后一个模块中介绍的所有内容。

86
00:04:01,900 --> 00:04:04,460
所以现在我们已经导入了学习资源，

87
00:04:04,460 --> 00:04:08,110
现在在这里我将输出学习资源

88
00:04:08,110 --> 00:04:11,440
我是这个烤肉盒的粉丝，因为我的元素，

89
00:04:11,440 --> 00:04:14,340
所以我会用它，我会把它放在这里，

90
00:04:14,340 --> 00:04:16,160
但当然不止一次，

91
00:04:16,160 --> 00:04:17,970
而是使用 v-for，

92
00:04:17,970 --> 00:04:21,000
我将遍历我存储的资源

93
00:04:21,000 --> 00:04:24,290
并创建一个学习资源组件实例

94
00:04:24,290 --> 00:04:27,230
我存储的资源中的每个项目。

95
00:04:27,230 --> 00:04:29,850
所以在这种情况下，我们有两个存储的资源，

96
00:04:29,850 --> 00:04:32,350
这仅仅意味着我们要创造

97
00:04:32,350 --> 00:04:35,573
两个带有 v-for 的学习资源实例。

98
00:04:37,820 --> 00:04:41,180
为此，我们可以像这样遍历存储的资源

99
00:04:41,180 --> 00:04:43,527
使用存储资源中的资源，

100
00:04:44,380 --> 00:04:47,400
我们应该在这里绑定key prop，

101
00:04:47,400 --> 00:04:51,170
Vue 想要的，在这种情况下是 res.id，

102
00:04:51,170 --> 00:04:54,000
因为我提取的每一种资源

103
00:04:54,000 --> 00:04:58,260
进入 res 变量这里有一个 id 字段

104
00:04:58,260 --> 00:05:00,880
并且该 id 保证是唯一的，

105
00:05:00,880 --> 00:05:02,363
所以这是一把完美的钥匙。

106
00:05:04,230 --> 00:05:07,230
有了这个，我们将创建多种学习资源，

107
00:05:07,230 --> 00:05:09,270
这意味着我们现在可以回去了

108
00:05:09,270 --> 00:05:13,200
到 LearningResource.vue 文件并在那里添加一个模板，

109
00:05:13,200 --> 00:05:15,230
因为最终我们希望能够

110
00:05:15,230 --> 00:05:17,290
在那里输出一些东西。

111
00:05:17,290 --> 00:05:21,660
所以在这个模板中，我现在将输出一个列表项，

112
00:05:21,660 --> 00:05:25,740
打开和关闭文本以及列表项的内部，

113
00:05:25,740 --> 00:05:27,383
我想要我的内容。

114
00:05:28,290 --> 00:05:32,073
在这里，我确实想在其中有一个 div，

115
00:05:32,940 --> 00:05:35,093
这又包含一个标题。

116
00:05:35,940 --> 00:05:39,070
在那个标题中，我想要一个 h3 标签

117
00:05:39,070 --> 00:05:43,270
稍后输出标题，旁边是，

118
00:05:43,270 --> 00:05:45,860
所以在同一行你可以说，

119
00:05:45,860 --> 00:05:49,800
我想要一个允许我们删除它的按钮。

120
00:05:49,800 --> 00:05:53,310
现在作为旁注，我知道我挑战了你

121
00:05:53,310 --> 00:05:56,840
继续并使用列表项创建您自己的组件

122
00:05:56,840 --> 00:06:00,070
而且我完全知道您可能没有创建

123
00:06:00,070 --> 00:06:02,320
这个标记，很好，

124
00:06:02,320 --> 00:06:04,810
你现在可以和我一起创造它。

125
00:06:04,810 --> 00:06:08,350
我只是想让你也练习创建和注册

126
00:06:08,350 --> 00:06:10,190
并自行使用组件，

127
00:06:10,190 --> 00:06:11,660
你希望这样做，

128
00:06:11,660 --> 00:06:13,500
你希望在那里取得成功，

129
00:06:13,500 --> 00:06:16,130
如果没有，我们现在一起做。

130
00:06:16,130 --> 00:06:17,930
所以我们得到了标题，我们得到了 h3 标签，

131
00:06:17,930 --> 00:06:20,680
我们得到了按钮，它都在那个 div 中，

132
00:06:20,680 --> 00:06:23,270
在那个div下面我想要一段

133
00:06:23,270 --> 00:06:26,830
那是稍后应该输出描述的地方

134
00:06:26,830 --> 00:06:30,330
在下面我将添加一个导航元素，

135
00:06:30,330 --> 00:06:33,460
这是一个默认的 HTML 元素

136
00:06:33,460 --> 00:06:37,790
然后我想要一个锚标签，

137
00:06:37,790 --> 00:06:41,053
这应该导致用户提供的链接。

138
00:06:41,920 --> 00:06:45,500
所以在这里我们可以有一个查看资源的文本

139
00:06:45,500 --> 00:06:48,670
和链接值，这就是我想要设置的东西

140
00:06:48,670 --> 00:06:52,343
到存储在相​​应资源中的链接值。

141
00:06:53,930 --> 00:06:57,380
所以你已经可以看出学习资源组件

142
00:06:57,380 --> 00:07:01,290
需要外部数据才能正常工作，

143
00:07:01,290 --> 00:07:03,100
因为我们这里有所有的标记，

144
00:07:03,100 --> 00:07:05,900
但是标题不见了，描述不见了，

145
00:07:05,900 --> 00:07:07,183
并且链接丢失了。

146
00:07:08,420 --> 00:07:11,580
我们如何获得这些外部数据？

147
00:07:11,580 --> 00:07:15,750
我们如何使这个组件可重用和可配置？

148
00:07:15,750 --> 00:07:17,670
当然有道具。

149
00:07:17,670 --> 00:07:21,590
所以在这里我们现在可以像这样添加我们的脚本标签，

150
00:07:21,590 --> 00:07:23,860
然后添加 props 选项

151
00:07:23,860 --> 00:07:26,090
让 Vue 知道 props

152
00:07:26,090 --> 00:07:27,973
我们想进入这个组件。

153
00:07:29,330 --> 00:07:32,690
而这里最简单的形式是提供一个数组

154
00:07:32,690 --> 00:07:36,140
每个道具都注册为字符串。

155
00:07:36,140 --> 00:07:39,670
因此，例如，我们可以期望得到一个 title 道具。

156
00:07:39,670 --> 00:07:43,590
您还可以使用更长的形式并更具体

157
00:07:43,590 --> 00:07:45,360
关于你想要得到的道具

158
00:07:45,360 --> 00:07:48,700
并描述您想要获得的数据类型，

159
00:07:48,700 --> 00:07:51,430
描述是否需要，

160
00:07:51,430 --> 00:07:55,150
但我会在这里保持简单，只使用这个数组。

161
00:07:55,150 --> 00:07:59,800
所以我们会得到一个标题，我还需要一个描述

162
00:07:59,800 --> 00:08:02,270
我也想要一个链接。

163
00:08:02,270 --> 00:08:06,580
现在所有这些名字都100%由你决定。

164
00:08:06,580 --> 00:08:09,730
如果你使用和我一样的名字可能是最好的

165
00:08:09,730 --> 00:08:11,930
为了轻松跟上，

166
00:08:11,930 --> 00:08:14,260
但你可以在这里使用任何你想要的名字。

167
00:08:14,260 --> 00:08:16,350
这是你的组件，所以你可以命名道具

168
00:08:16,350 --> 00:08:17,250
无论你想要什么。

169
00:08:19,010 --> 00:08:23,820
现在，有了它，我们现在可以在这里输出道具数据。

170
00:08:23,820 --> 00:08:26,360
例如，在 h3 标签中，

171
00:08:26,360 --> 00:08:29,673
我们可以输出标题，所以这个道具。

172
00:08:30,660 --> 00:08:33,289
在段落中，我想输出描述。

173
00:08:33,289 --> 00:08:36,710
所以在这里我们可以插入描述

174
00:08:36,710 --> 00:08:39,419
你会了解到这里所有的道具，

175
00:08:39,419 --> 00:08:43,630
所以这些道具可以像这样在模板中使用，

176
00:08:43,630 --> 00:08:47,360
它们是可用的，就好像它们将是已注册的数据一样

177
00:08:47,360 --> 00:08:49,523
进入该组件的数据选项。

178
00:08:50,730 --> 00:08:55,120
然后我们可以在这里使用 v-bind 或短期绑定 ref，

179
00:08:55,120 --> 00:08:59,290
我在这里使用并将其绑定到链接，

180
00:08:59,290 --> 00:09:01,523
所以链接道具中的值。

181
00:09:03,230 --> 00:09:05,090
现在当然是缺失的部分，

182
00:09:05,090 --> 00:09:08,500
是我们确实在这里提供了道具

183
00:09:08,500 --> 00:09:11,590
这样我们就可以确保传入的值

184
00:09:11,590 --> 00:09:13,620
对于所有这些道具。

185
00:09:13,620 --> 00:09:15,760
那么让我们回到 App.Vue

186
00:09:15,760 --> 00:09:19,090
在这里我们使用学习资源

187
00:09:19,090 --> 00:09:21,530
以及我们使用 v-for 的地方，

188
00:09:21,530 --> 00:09:23,870
我们现在想绑定所有这些道具

189
00:09:23,870 --> 00:09:27,740
并为学习资源的所有道具提供价值。

190
00:09:27,740 --> 00:09:30,763
例如，我们想为 title 属性设置一个值。

191
00:09:31,640 --> 00:09:34,210
当然，这个值不应该是硬编码的，

192
00:09:34,210 --> 00:09:36,873
但动态的，因为它取决于 res。

193
00:09:38,090 --> 00:09:43,090
所以在这里我将标题绑定到 res.title

194
00:09:43,700 --> 00:09:45,600
和描述一样，

195
00:09:45,600 --> 00:09:50,523
这应该绑定到rest.description。

196
00:09:51,700 --> 00:09:54,410
我正在重新格式化它以使其更易于阅读

197
00:09:54,410 --> 00:09:58,173
并将链接绑定到 res.link。

198
00:09:59,890 --> 00:10:04,890
有了这个，我们正在为这些免费道具提供价值，

199
00:10:04,940 --> 00:10:06,720
标题、描述和链接，

200
00:10:06,720 --> 00:10:09,790
我们期望在学习资源上。

201
00:10:09,790 --> 00:10:12,790
现在我们也可以尝试在屏幕上看到，

202
00:10:12,790 --> 00:10:17,790
为此，在 main.js 中，我现在将从 '/App.vue' 导入 App

203
00:10:24,310 --> 00:10:26,580
并将其传递到此处以创建 App

204
00:10:28,290 --> 00:10:32,050
在 App.vue 中，我已经注册了学习资源。

205
00:10:32,050 --> 00:10:35,430
因此，如果我们将其全部保存，我们应该会在屏幕上看到它。

206
00:10:35,430 --> 00:10:39,280
绝对不漂亮，但它表明这是有效的

207
00:10:39,280 --> 00:10:42,100
并且我们自己的组件正在工作。

208
00:10:42,100 --> 00:10:44,483
现在让我们接下来做一些造型。