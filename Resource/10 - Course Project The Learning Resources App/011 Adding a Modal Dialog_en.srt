1
00:00:02,150 --> 00:00:05,400
So how we ensure that the user is not able

2
00:00:05,400 --> 00:00:09,850
to submit empty data in the add resource component.

3
00:00:09,850 --> 00:00:13,920
Well, of course, we got our free entered input values

4
00:00:13,920 --> 00:00:15,390
and we can edit if check

5
00:00:15,390 --> 00:00:20,390
and check if entered title is empty or to be precise,

6
00:00:20,990 --> 00:00:23,090
I will even call trim on it,

7
00:00:23,090 --> 00:00:26,520
which is a built in method that exists in JavaScript,

8
00:00:26,520 --> 00:00:30,560
which you can call on strings to remove excess white space

9
00:00:30,560 --> 00:00:32,210
at the beginning and end.

10
00:00:32,210 --> 00:00:36,780
This avoids that the user enters a bunch of blanks

11
00:00:36,780 --> 00:00:39,210
and dead would be treated as valid.

12
00:00:39,210 --> 00:00:42,170
Trim Will remove those excess blanks

13
00:00:42,170 --> 00:00:45,320
and we'll therefore still give us an empty input.

14
00:00:45,320 --> 00:00:47,400
So that's why I'm checking it like this.

15
00:00:47,400 --> 00:00:52,360
And if that's the case, or if I entered description,

16
00:00:52,360 --> 00:00:54,860
once we trim it is empty

17
00:00:54,860 --> 00:00:59,560
or if entered U R L trimmed is empty.

18
00:00:59,560 --> 00:01:01,700
If any of that is the case,

19
00:01:01,700 --> 00:01:04,483
then I know the input is invalid.

20
00:01:06,220 --> 00:01:07,053
Now for one,

21
00:01:07,053 --> 00:01:09,110
I will return them to a white

22
00:01:09,110 --> 00:01:11,680
that this line of code here executes

23
00:01:11,680 --> 00:01:15,450
because returning stops the function execution.

24
00:01:15,450 --> 00:01:18,350
But in addition, I also wanna show my alert

25
00:01:18,350 --> 00:01:21,280
and I could do this with the built in alert function,

26
00:01:21,280 --> 00:01:23,740
but I wanna have my own custom dialogue,

27
00:01:23,740 --> 00:01:25,800
which looks a bit nicer,

28
00:01:25,800 --> 00:01:28,750
and therefore I will add a new component

29
00:01:28,750 --> 00:01:31,770
and it will actually add it into UI folder,

30
00:01:31,770 --> 00:01:34,650
a base dialogue dot view file,

31
00:01:34,650 --> 00:01:36,510
which could be used for anything,

32
00:01:36,510 --> 00:01:39,563
but which I will use for showing an error message.

33
00:01:40,590 --> 00:01:43,859
Now in this base style Octa view file in the template,

34
00:01:43,859 --> 00:01:46,790
I will add the built in dialogue,

35
00:01:46,790 --> 00:01:51,790
HTML element and add the open attribute already

36
00:01:52,040 --> 00:01:53,980
so that it's always open,

37
00:01:53,980 --> 00:01:57,010
but will then control visibility by adding

38
00:01:57,010 --> 00:02:00,053
or removing base dialogue to and from the Dom.

39
00:02:01,000 --> 00:02:03,900
And here in the dialogue, it's now totally up to you,

40
00:02:03,900 --> 00:02:06,210
how you wanna structure this.

41
00:02:06,210 --> 00:02:08,245
I will add a header element here.

42
00:02:08,245 --> 00:02:09,939
And in that header,

43
00:02:09,939 --> 00:02:13,970
I will add a slot so that the user is able

44
00:02:13,970 --> 00:02:15,980
to set the header.

45
00:02:15,980 --> 00:02:19,027
But I will actually also provide a default content

46
00:02:19,027 --> 00:02:20,970
between the slot techs,

47
00:02:20,970 --> 00:02:24,063
which will be used if no header would be provided.

48
00:02:25,710 --> 00:02:28,240
And there I'll even take it to the next level,

49
00:02:28,240 --> 00:02:31,350
and I'll output a title property,

50
00:02:31,350 --> 00:02:34,170
which I expect to get as props.

51
00:02:34,170 --> 00:02:36,360
So here I'll add the props key

52
00:02:36,360 --> 00:02:39,820
and expect a title prop on this component.

53
00:02:39,820 --> 00:02:42,842
This gives us as a developer full flexibility.

54
00:02:42,842 --> 00:02:45,100
When using the base dialogue,

55
00:02:45,100 --> 00:02:48,710
we can either just provide the title prop

56
00:02:48,710 --> 00:02:53,490
or we provide our totally customized HTML structure,

57
00:02:53,490 --> 00:02:56,063
which will then be inserted in this header slot.

58
00:02:57,520 --> 00:03:02,450
So we can do both use default with our own custom text

59
00:03:02,450 --> 00:03:06,600
or override it entirely and not just provide our own text,

60
00:03:06,600 --> 00:03:09,210
but also our own HTML code

61
00:03:09,210 --> 00:03:11,420
that should be used in the header.

62
00:03:11,420 --> 00:03:14,690
And therefore I'll actually add my prop differently here,

63
00:03:14,690 --> 00:03:19,690
and be very clear about the fact that title is optional.

64
00:03:20,070 --> 00:03:24,450
It's type is string, but it's definitely not required.

65
00:03:24,450 --> 00:03:26,760
You don't have to provide a title prop

66
00:03:26,760 --> 00:03:28,990
because of course you might also just provide

67
00:03:28,990 --> 00:03:32,083
your own HTML content for this slot.

68
00:03:34,410 --> 00:03:35,560
Now after the header,

69
00:03:35,560 --> 00:03:38,910
I'll add a section and this will hold the main content

70
00:03:38,910 --> 00:03:40,160
off this dialogue.

71
00:03:40,160 --> 00:03:42,860
Here again, I want to give us as a developer

72
00:03:42,860 --> 00:03:45,390
as much flexibility as possible,

73
00:03:45,390 --> 00:03:49,091
and we should be able to bring our own HTML code.

74
00:03:49,091 --> 00:03:52,130
Hence does this again, time for a slot,

75
00:03:52,130 --> 00:03:56,390
but since we now have two slots, we need named slots.

76
00:03:56,390 --> 00:04:01,390
One slot may remain unnamed, but all our slots need names.

77
00:04:02,100 --> 00:04:04,000
So I'll name this slot here,

78
00:04:04,000 --> 00:04:07,053
header because it is our header slot after all.

79
00:04:08,700 --> 00:04:13,000
And then I'll add a third part in this dialogue after header

80
00:04:13,000 --> 00:04:16,649
and the main section, I'll add a menu element,

81
00:04:16,649 --> 00:04:21,440
which again is a default HTML element where I want to allow

82
00:04:21,440 --> 00:04:24,680
the user to display buttons, which the user can press.

83
00:04:24,680 --> 00:04:27,230
And again, the HTML code should be provided

84
00:04:27,230 --> 00:04:28,960
by us as a developer.

85
00:04:28,960 --> 00:04:32,820
So here I will also give this a name actions,

86
00:04:32,820 --> 00:04:36,823
and now we can pass our own HTML code in here.

87
00:04:39,010 --> 00:04:42,460
Now I'm only using this dialogue in one place in this app

88
00:04:42,460 --> 00:04:45,520
and therefore we don't have to build it as flexible

89
00:04:45,520 --> 00:04:46,880
as we're doing it here,

90
00:04:46,880 --> 00:04:49,380
but of course, this is about practicing this all.

91
00:04:49,380 --> 00:04:50,890
And this is about showing you

92
00:04:50,890 --> 00:04:54,560
how you could build a really reusable dialogue,

93
00:04:54,560 --> 00:04:57,950
which you could then use in different places off your app

94
00:04:57,950 --> 00:05:00,940
and use and configure it in a totally different way.

95
00:05:00,940 --> 00:05:03,550
Every time you as a developer use it.

96
00:05:03,550 --> 00:05:07,223
That's why I'm building it in this highly flexible way here.

97
00:05:08,740 --> 00:05:11,410
And I also don't just wanna have the dialogue.

98
00:05:11,410 --> 00:05:14,280
I always wanna have a backdrop behind it.

99
00:05:14,280 --> 00:05:16,510
So I wanna make sure that the page behind

100
00:05:16,510 --> 00:05:19,300
the dialogue is great out.

101
00:05:19,300 --> 00:05:23,793
For div I'll add a div here next to the dialogue like this.

102
00:05:25,640 --> 00:05:28,170
And with that added, we can add some styling,

103
00:05:28,170 --> 00:05:31,200
which I of course also prepared for you.

104
00:05:31,200 --> 00:05:36,070
I'll add my scoped styles again, as always and attached.

105
00:05:36,070 --> 00:05:40,650
You find this dialogue CSS file as always,

106
00:05:40,650 --> 00:05:43,000
it contains a bunch of CSS rules,

107
00:05:43,000 --> 00:05:45,000
which you simply should copy and paste

108
00:05:45,000 --> 00:05:46,950
between your style tags here.

109
00:05:46,950 --> 00:05:49,546
And that will give the dialogue and the header

110
00:05:49,546 --> 00:05:53,063
and this backdrop, the desired styling.

111
00:05:54,920 --> 00:05:57,943
with that we have a base dialogue here.

112
00:06:00,210 --> 00:06:02,530
Now let's see how we can use it.

113
00:06:02,530 --> 00:06:05,960
And first of all, I will, of course, register it globally

114
00:06:05,960 --> 00:06:09,140
so that we could use it everywhere in this app.

115
00:06:09,140 --> 00:06:11,960
So in main JS, I'll import based dialogue

116
00:06:11,960 --> 00:06:16,960
from dot slash components UI base dialogue dot view,

117
00:06:17,160 --> 00:06:22,160
and then added with app component based dialogue

118
00:06:22,260 --> 00:06:25,333
and point at my base dialogue config object.

119
00:06:28,170 --> 00:06:32,790
With that, the dialogue is registered now in ad resource,

120
00:06:32,790 --> 00:06:35,570
we can use it and here it should be shown.

121
00:06:35,570 --> 00:06:38,083
If the user entered something invalid.

122
00:06:39,630 --> 00:06:42,130
for data I'll add my data property here

123
00:06:42,130 --> 00:06:44,670
to the add resource component.

124
00:06:44,670 --> 00:06:47,810
And the one piece of data I wanna manage in here

125
00:06:47,810 --> 00:06:49,430
is information about

126
00:06:49,430 --> 00:06:52,630
whether the user input is invalid or not.

127
00:06:52,630 --> 00:06:56,520
So I will name my property here, input is invalid.

128
00:06:56,520 --> 00:06:59,860
And initially that's false because initially the user input

129
00:06:59,860 --> 00:07:03,830
isn't invalid yet because the user didn't have a chance of

130
00:07:03,830 --> 00:07:04,923
entering anything,

131
00:07:06,170 --> 00:07:10,400
but I'll set this to true if we make it into the safe check.

132
00:07:10,400 --> 00:07:14,330
So if at least one of these inputs is empty, then I'll set

133
00:07:14,330 --> 00:07:16,773
this input is invalid to true.

134
00:07:18,210 --> 00:07:21,080
And now we can use this newly added property

135
00:07:21,080 --> 00:07:23,470
to toggle our dialogue.

136
00:07:23,470 --> 00:07:26,105
Here next to base card.

137
00:07:26,105 --> 00:07:31,105
I will add the base dialogue like this,

138
00:07:34,640 --> 00:07:37,170
and I'll show it with VF.

139
00:07:37,170 --> 00:07:40,170
If input is invalid is true

140
00:07:41,360 --> 00:07:45,010
and now we can provide content for our different slots.

141
00:07:45,010 --> 00:07:48,340
Now I will actually not provide my own header slot.

142
00:07:48,340 --> 00:07:51,960
Instead there I wanna utilize this default fallback

143
00:07:51,960 --> 00:07:54,222
and just set my own title text.

144
00:07:54,222 --> 00:07:58,620
Therefore I'll set the title prop on the base dialogue

145
00:07:58,620 --> 00:08:00,823
and set it to invalid input.

146
00:08:02,950 --> 00:08:05,780
But I do want to provide HTML content

147
00:08:05,780 --> 00:08:07,850
for the other two slots.

148
00:08:07,850 --> 00:08:10,650
So here, I'll now add a template tag

149
00:08:11,850 --> 00:08:15,310
and target the default slot with this shorthand.

150
00:08:15,310 --> 00:08:18,580
The alternative would be V slot colon default,

151
00:08:18,580 --> 00:08:22,297
but you can use the short end and between here.

152
00:08:22,297 --> 00:08:26,601
I wanna have a paragraph where I say, unfortunately,

153
00:08:26,601 --> 00:08:31,570
at least one input value is invalid

154
00:08:32,940 --> 00:08:37,750
and add another paragraph here where I say,

155
00:08:37,750 --> 00:08:42,466
please check all inputs and make sure you enter

156
00:08:42,466 --> 00:08:47,466
at least a few characters in queue, each input field,

157
00:08:49,450 --> 00:08:50,420
something like this.

158
00:08:50,420 --> 00:08:52,493
Of course the error message is up to you.

159
00:08:55,370 --> 00:08:57,930
and now we also need a second template here

160
00:08:57,930 --> 00:09:01,110
to provide the content for the second slot we have

161
00:09:01,110 --> 00:09:03,600
for this actions slot.

162
00:09:03,600 --> 00:09:08,390
So here with v-slot actions or using the shorthand,

163
00:09:08,390 --> 00:09:12,020
we can tell view that's the content inside of the template

164
00:09:12,020 --> 00:09:13,810
should go into that slot.

165
00:09:13,810 --> 00:09:15,920
And there, I want to have one base button

166
00:09:16,950 --> 00:09:20,963
where I simply say, okay.

167
00:09:23,070 --> 00:09:25,660
And I add a click listener to this button.

168
00:09:25,660 --> 00:09:27,670
And now I wanna trigger a method

169
00:09:27,670 --> 00:09:30,500
which allows us to close this dialog.

170
00:09:30,500 --> 00:09:31,440
So they are for a year,

171
00:09:31,440 --> 00:09:33,340
I will register a new method

172
00:09:34,490 --> 00:09:37,990
D confirm error method For example,

173
00:09:37,990 --> 00:09:41,700
where we set this input is invalid back to false,

174
00:09:41,700 --> 00:09:43,940
which will then close the dialogue

175
00:09:43,940 --> 00:09:47,060
and confirm error should be triggered.

176
00:09:47,060 --> 00:09:49,780
If this button here is clicked

177
00:09:49,780 --> 00:09:52,563
this button in the actions of our dialogue.

178
00:09:55,220 --> 00:09:59,180
With all of that, if we saved it and reload this page,

179
00:09:59,180 --> 00:10:03,240
and we go to add resources and we try to submit this,

180
00:10:03,240 --> 00:10:07,493
we should see our dialogue and clicking, okay, closes it.

181
00:10:08,450 --> 00:10:11,310
Now it would be great if clicking the backdrop

182
00:10:11,310 --> 00:10:15,010
would also close it, but currently that's not happening.

183
00:10:15,010 --> 00:10:18,310
So let's add this functionality to the base dialogue.

184
00:10:18,310 --> 00:10:20,600
And therefore on this stiff,

185
00:10:20,600 --> 00:10:25,205
I will add a click listener that div here is our backdrop,

186
00:10:25,205 --> 00:10:29,500
where I want to emit a custom event,

187
00:10:29,500 --> 00:10:30,780
which I'll name close.

188
00:10:30,780 --> 00:10:33,323
And of course this custom event name is up to you.

189
00:10:34,330 --> 00:10:37,450
And actually I will also stay here

190
00:10:37,450 --> 00:10:41,450
and add a fallback content to my actions slot,

191
00:10:41,450 --> 00:10:44,360
even though we don't need it for the way we use it here,

192
00:10:44,360 --> 00:10:46,343
but to make this really reusable.

193
00:10:47,420 --> 00:10:50,557
And I'll add a base button here as a fallback content

194
00:10:50,557 --> 00:10:54,390
where I say close and where upon a click,

195
00:10:54,390 --> 00:10:58,090
I also emit this close custom event

196
00:10:58,090 --> 00:11:00,930
so that if the user would not provide any content

197
00:11:00,930 --> 00:11:02,470
for the actions slot,

198
00:11:02,470 --> 00:11:04,463
this button would be shown at least.

199
00:11:07,680 --> 00:11:12,180
And now with that, I will just let you know about

200
00:11:12,180 --> 00:11:15,690
our emitted custom event about the close event

201
00:11:15,690 --> 00:11:19,343
by adding D emits option to this conflict object.

202
00:11:20,260 --> 00:11:23,630
And now with that, we can go back to add resource

203
00:11:23,630 --> 00:11:26,560
where we are using the base dialogue.

204
00:11:26,560 --> 00:11:30,830
And we can now listen to this close event on this dialogue.

205
00:11:30,830 --> 00:11:32,580
And when this event occurs,

206
00:11:32,580 --> 00:11:35,920
I want to run my confirm error method.

207
00:11:35,920 --> 00:11:38,090
So to same method we execute

208
00:11:38,090 --> 00:11:39,690
when this okay button is clicked

209
00:11:41,380 --> 00:11:42,940
and therefore now with that added,

210
00:11:42,940 --> 00:11:46,820
if we save this and we reload this page,

211
00:11:46,820 --> 00:11:51,280
if I go back here and submit an empty form,

212
00:11:51,280 --> 00:11:53,370
I can now also close the dialogue

213
00:11:53,370 --> 00:11:55,140
by clicking on the backdrop.

214
00:11:55,140 --> 00:11:58,590
And of course also still by using the okay button.

215
00:11:58,590 --> 00:12:01,770
And on the other hand, if we enter something valid here.

216
00:12:01,770 --> 00:12:04,609
So if we do not provide invalid input,

217
00:12:04,609 --> 00:12:07,980
creating the resource still works.

218
00:12:07,980 --> 00:12:10,600
So if that there's only one last thing left

219
00:12:10,600 --> 00:12:13,623
and that is deleting resources,

220
00:12:14,660 --> 00:12:17,103
we'll implement debt as a next step together.

