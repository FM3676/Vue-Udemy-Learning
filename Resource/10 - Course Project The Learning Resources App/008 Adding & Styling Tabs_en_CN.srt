1
00:00:01,580 --> 00:00:05,260
为了解决这个问题，我们有两个选择。

2
00:00:05,260 --> 00:00:09,070
选项一，是我们传递我们的道具，

3
00:00:09,070 --> 00:00:11,290
到动态渲染的组件。

4
00:00:11,290 --> 00:00:14,430
实际上，我们可以使用一种语法，

5
00:00:14,430 --> 00:00:17,860
我确实添加了关于这种语法的文字讲座，

6
00:00:17,860 --> 00:00:22,410
在最后一个模块中，在 D 动态组件讲座之后。

7
00:00:22,410 --> 00:00:23,970
但我不会在这里使用它。

8
00:00:23,970 --> 00:00:26,870
相反，我将使用它提供注入功能

9
00:00:26,870 --> 00:00:31,280
我们学习了，这样我们也可以再次练习这个。

10
00:00:31,280 --> 00:00:34,480
为此，我首先想搬家，

11
00:00:34,480 --> 00:00:38,080
我从 App.vue 存储的资源。

12
00:00:38,080 --> 00:00:41,660
所以移动这个键 NDRA，

13
00:00:41,660 --> 00:00:44,550
并将其带到 TheResources.vue。

14
00:00:44,550 --> 00:00:46,450
这当然意味着我们现在可以摆脱

15
00:00:46,450 --> 00:00:48,970
数据属性，在 App.vue 中，

16
00:00:48,970 --> 00:00:51,533
因为我们那里不再有任何数据。

17
00:00:52,420 --> 00:00:56,370
但是现在在 TheResources.vue 中，在这个组件中，

18
00:00:56,370 --> 00:00:58,130
我们可以添加这个密钥。

19
00:00:58,130 --> 00:01:01,163
我们可以在这里将存储的资源添加到我们的数据中，

20
00:01:02,370 --> 00:01:06,020
现在我想提供那些存储的资源，

21
00:01:06,020 --> 00:01:08,940
这样在存储的资源组件中，

22
00:01:08,940 --> 00:01:11,030
我可以注射它们。

23
00:01:11,030 --> 00:01:12,600
您将了解它是如何工作的。

24
00:01:12,600 --> 00:01:15,110
为此，我们现在可以添加提供键，

25
00:01:15,110 --> 00:01:18,120
并以它的方法形式添加它，

26
00:01:18,120 --> 00:01:20,600
这样我们返回一个对象，

27
00:01:20,600 --> 00:01:22,920
我们可以提供资源的地方，

28
00:01:22,920 --> 00:01:25,580
并指向存储的资源，

29
00:01:25,580 --> 00:01:27,503
我们在这里有我们的数据属性。

30
00:01:28,660 --> 00:01:31,480
我们提供资源，

31
00:01:31,480 --> 00:01:34,210
到所有较低级别的组件。

32
00:01:34,210 --> 00:01:36,340
因此，对于所有子组件，

33
00:01:36,340 --> 00:01:39,023
和子组件的子组件。

34
00:01:40,150 --> 00:01:43,060
这意味着在存储的资源中，

35
00:01:43,060 --> 00:01:45,710
我们现在只需要改变一件事。

36
00:01:45,710 --> 00:01:48,370
而不是获取资源作为道具，

37
00:01:48,370 --> 00:01:50,223
我们需要注入它们。

38
00:01:51,140 --> 00:01:54,410
这样我们注入这个资源键，

39
00:01:54,410 --> 00:01:57,070
这就是我在这里提供的关键，

40
00:01:57,070 --> 00:02:00,490
这样，我们就可以在这里访问这些资源，

41
00:02:00,490 --> 00:02:01,943
就这样。

42
00:02:03,190 --> 00:02:05,380
所以现在所有这些都完成了，

43
00:02:05,380 --> 00:02:08,270
我当然需要回到 App.vue，

44
00:02:08,270 --> 00:02:11,950
并使用我们一直在研究的 TheResources 组件。

45
00:02:11,950 --> 00:02:13,957
所以导入TheResources，

46
00:02:15,095 --> 00:02:20,095
来自 ./components- 学习资源/TheResources.vue，

47
00:02:21,850 --> 00:02:25,010
并在此处将其注册为本地组件，

48
00:02:25,010 --> 00:02:27,240
在应用程序配置对象中。

49
00:02:27,240 --> 00:02:29,470
所以在应用程序模板中，

50
00:02:29,470 --> 00:02:31,557
我们可以渲染 TheResources，

51
00:02:32,460 --> 00:02:33,663
因此放弃这个组件

52
00:02:33,663 --> 00:02:35,423
我们一直在努力。

53
00:02:37,030 --> 00:02:38,420
如果我们重新加载，

54
00:02:38,420 --> 00:02:40,670
在这里，我们得到了我们的标签，

55
00:02:40,670 --> 00:02:43,010
我们可以在这两个组件之间切换，

56
00:02:43,010 --> 00:02:46,193
我们也可以看到那里存储的资源。

57
00:02:47,040 --> 00:02:50,360
现在，让我们突出显示当前选择的选项卡。

58
00:02:50,360 --> 00:02:52,940
因为目前这并不容易看到，

59
00:02:52,940 --> 00:02:56,540
然后，当然，让我们开始添加资源。

60
00:02:56,540 --> 00:02:59,110
但是要快速突出显示这些选择选项卡，

61
00:02:59,110 --> 00:03:01,460
我们可以去 TheResources，

62
00:03:01,460 --> 00:03:03,520
这就是我们拥有这些按钮的地方。

63
00:03:03,520 --> 00:03:05,770
在那里，我可以设置模式，

64
00:03:05,770 --> 00:03:08,483
取决于选择的资源。

65
00:03:10,010 --> 00:03:13,720
所以我将这里的模式绑定为第一个按钮，

66
00:03:13,720 --> 00:03:17,260
用于选择存储的资源，

67
00:03:17,260 --> 00:03:19,740
并检查选定的选项卡，

68
00:03:19,740 --> 00:03:23,030
等于存储资源。

69
00:03:23,030 --> 00:03:26,200
如果是的话，我想用default 按钮样式。

70
00:03:26,200 --> 00:03:28,120
那么我将模式设置为null，

71
00:03:28,120 --> 00:03:31,110
并且根本不通过任何音符模式，

72
00:03:31,110 --> 00:03:33,430
但否则我会将其设置为平坦的。

73
00:03:33,430 --> 00:03:35,700
这样如果选择了另一个选项卡，

74
00:03:35,700 --> 00:03:37,973
这第一个按钮具有平面样式。

75
00:03:39,830 --> 00:03:41,660
因为这里有所有的逻辑

76
00:03:41,660 --> 00:03:43,380
在模板中有点难看，

77
00:03:43,380 --> 00:03:45,350
虽然也不可怕，

78
00:03:45,350 --> 00:03:46,790
但既然我不想在这里拥有它，

79
00:03:46,790 --> 00:03:50,340
我会抓住它，然后添加一个计算属性。

80
00:03:50,340 --> 00:03:55,210
所以在这里，我将添加计算，计算选项，

81
00:03:55,210 --> 00:03:57,953
并添加storedResButtonMode，

82
00:03:59,950 --> 00:04:02,460
并在此处返回此结果。

83
00:04:02,460 --> 00:04:05,633
现在当然是指这个选定的选项卡。

84
00:04:07,220 --> 00:04:10,510
我们也可以添加 addResButtonMode，

85
00:04:12,260 --> 00:04:15,110
在这里返回这个选定的选项卡，

86
00:04:15,110 --> 00:04:18,490
检查它是否等于添加资源。

87
00:04:18,490 --> 00:04:20,269
如果是，我们将其设置为空，

88
00:04:20,269 --> 00:04:22,373
否则我们将使用这种平面模式。

89
00:04:23,770 --> 00:04:26,203
现在我们有了这两个计算属性。

90
00:04:27,580 --> 00:04:30,570
我们现在可以在模板中使用它们来绑定模式。

91
00:04:30,570 --> 00:04:34,690
所以这里的mode绑定到storedResButtonMode，

92
00:04:36,176 --> 00:04:37,203
在另一个按钮上，

93
00:04:37,203 --> 00:04:40,280
模式绑定到 addResButtonMode。

94
00:04:40,280 --> 00:04:42,923
因此，对于其他计算属性。

95
00:04:45,040 --> 00:04:49,670
现在有了它，这看起来好多了。

96
00:04:49,670 --> 00:04:53,190
所以接下来让我们在这个添加资源屏幕上工作，

97
00:04:53,190 --> 00:04:56,193
并确保我们可以添加资源。