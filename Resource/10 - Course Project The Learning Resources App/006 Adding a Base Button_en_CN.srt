1
00:00:02,180 --> 00:00:04,530
所以让我们添加一个默认按钮，

2
00:00:04,530 --> 00:00:08,230
我们可以使用它，这将是另一个基础组件。

3
00:00:08,230 --> 00:00:10,430
所以我将它添加到 UI 文件夹中。

4
00:00:10,430 --> 00:00:13,683
我将把文件命名为 BaseButton.vue。

5
00:00:14,710 --> 00:00:16,890
现在在那里，当然我们会有一个模板

6
00:00:16,890 --> 00:00:19,280
那里有我的按钮元素，

7
00:00:19,280 --> 00:00:21,140
默认按钮元素，

8
00:00:21,140 --> 00:00:23,940
但现在一切都是为了拥有一些默认样式

9
00:00:23,940 --> 00:00:25,450
按钮。

10
00:00:25,450 --> 00:00:29,440
因此，我将在此处添加我的样式标签

11
00:00:30,300 --> 00:00:32,400
当然还有范围。

12
00:00:32,400 --> 00:00:35,470
我提供了一些你可以采用的默认样式

13
00:00:35,470 --> 00:00:39,120
附在本次讲座的按钮点 CSS 文件中。

14
00:00:39,120 --> 00:00:42,010
我完全知道这可能不是样式

15
00:00:42,010 --> 00:00:45,330
你想出了，但你现在可以使用它。

16
00:00:45,330 --> 00:00:47,917
这设置了一个通用的按钮样式，

17
00:00:47,917 --> 00:00:50,840
当它悬停或活动时也是如此。

18
00:00:50,840 --> 00:00:52,840
但是我也有一个 CSS 类，

19
00:00:52,840 --> 00:00:55,670
我们可以有条件地添加它

20
00:00:55,670 --> 00:00:59,080
一个替代的外观，这样我们就可以真正拥有

21
00:00:59,080 --> 00:01:01,058
一个基本按钮组件，

22
00:01:01,058 --> 00:01:04,440
可以配置为看起来不同

23
00:01:04,440 --> 00:01:08,170
它应该可以使用道具进行配置。

24
00:01:08,170 --> 00:01:11,130
所以为此我还要在这里添加一个脚本标签

25
00:01:11,130 --> 00:01:13,090
并添加道具选项。

26
00:01:13,090 --> 00:01:17,020
我想在这里接受的道具是类型道具

27
00:01:17,020 --> 00:01:19,700
这样我们就可以设置按钮的类型

28
00:01:19,700 --> 00:01:23,618
并将默认类型属性绑定到此类型道具，

29
00:01:23,618 --> 00:01:26,570
但我会一直接受 mode 道具，

30
00:01:26,570 --> 00:01:30,290
我想在这里设置为 CSS 类，

31
00:01:30,290 --> 00:01:34,763
所以我将类属性绑定到这个模式道具值。

32
00:01:36,230 --> 00:01:41,230
我的想法是你可以使用这个基本按钮

33
00:01:42,220 --> 00:01:47,220
稍后使用 flat 模式，当然在另一个组件中。

34
00:01:47,280 --> 00:01:51,100
如果你这样做，这个平面文本在这里

35
00:01:51,100 --> 00:01:53,430
将作为 CSS 类添加。

36
00:01:53,430 --> 00:01:56,550
我们确实有这个类的选择器

37
00:01:56,550 --> 00:01:59,063
给这个按钮一个不同的外观。

38
00:02:00,370 --> 00:02:02,650
当然我们可以添加更多的类

39
00:02:02,650 --> 00:02:05,163
支持更多替代外观。

40
00:02:06,340 --> 00:02:09,750
现在差不多了，但是缺少一件重要的事情。

41
00:02:09,750 --> 00:02:12,590
那是另一个插槽，因为当然

42
00:02:12,590 --> 00:02:16,240
按钮内部的内容，例如文本，

43
00:02:16,240 --> 00:02:18,853
应该从外面传入。

44
00:02:20,090 --> 00:02:23,230
我们也可以为此接受另一个道具，例如，

45
00:02:23,230 --> 00:02:26,698
一个带标题的道具并使用它。

46
00:02:26,698 --> 00:02:29,950
但是通过使用一个插槽，我们给用户，

47
00:02:29,950 --> 00:02:33,810
开发人员使用我们的按钮更加灵活

48
00:02:33,810 --> 00:02:36,590
因为现在你不能只输入文本，

49
00:02:36,590 --> 00:02:39,460
但你也可以传入一个图标，

50
00:02:39,460 --> 00:02:42,673
SVG 图标或您选择的任何标记。

51
00:02:44,080 --> 00:02:47,420
现在这是基本按钮，就像基本卡一样，

52
00:02:47,420 --> 00:02:50,650
我将在全球范围内注册它以便我们可以使用它

53
00:02:50,650 --> 00:02:53,160
此应用程序中的任何位置。

54
00:02:53,160 --> 00:02:56,144
所以在主 JS 中，我从组件中导入它，

55
00:02:56,144 --> 00:02:58,473
UI BaseButton.vue。

56
00:02:59,780 --> 00:03:03,420
我会在这里用组件方法注册它

57
00:03:03,420 --> 00:03:06,750
基于此导入的破折号按钮点

58
00:03:06,750 --> 00:03:08,503
基本按钮，像这样。

59
00:03:11,040 --> 00:03:13,170
现在我们已经设置了这个空间按钮。

60
00:03:13,170 --> 00:03:15,450
我们可以回到学习资源

61
00:03:15,450 --> 00:03:20,163
我在哪里使用按钮并替换该默认按钮

62
00:03:20,163 --> 00:03:22,783
与基本按钮。

63
00:03:24,160 --> 00:03:28,180
如果我们确实有这个，我们应该在这里看到我们的新按钮。

64
00:03:28,180 --> 00:03:29,630
现在这是默认外观。

65
00:03:29,630 --> 00:03:33,900
我在很多地方都喜欢这种外观，但不是在这里。

66
00:03:33,900 --> 00:03:36,170
这里我要使用另一种外观

67
00:03:36,170 --> 00:03:39,090
我们可以通过添加 mode 属性来实现

68
00:03:39,090 --> 00:03:41,110
并将其设置为平坦，

69
00:03:41,110 --> 00:03:44,070
在这种情况下，这是唯一受支持的模式，当然，

70
00:03:44,070 --> 00:03:46,080
除了默认外观。

71
00:03:46,080 --> 00:03:48,297
但是有了这个，我们现在有了这个扁平的外观，

72
00:03:48,297 --> 00:03:50,930
希望这也能给你一个想法

73
00:03:50,930 --> 00:03:53,250
你可以用组件做什么。

74
00:03:53,250 --> 00:03:57,060
我们现在正在构建一个可以轻松配置的按钮

75
00:03:57,060 --> 00:04:00,920
通过一些道具，通过一些你可以说的属性，

76
00:04:00,920 --> 00:04:04,040
而且我们不需要在这里编写复杂的样式。

77
00:04:04,040 --> 00:04:06,970
相反，样式都在按钮内部

78
00:04:06,970 --> 00:04:09,860
然后谁使用我们的按钮代码

79
00:04:09,860 --> 00:04:12,620
只需要设置这些道具。

80
00:04:12,620 --> 00:04:15,860
如果你在一个更大的团队中从事一个更大的项目，

81
00:04:15,860 --> 00:04:19,630
像这样写组件，当然是超级强大

82
00:04:19,630 --> 00:04:22,770
因为只需要一个人来创建组件

83
00:04:22,770 --> 00:04:26,240
和样式，然后整个团队都可以使用它

84
00:04:26,240 --> 00:04:28,360
并且可以通过道具来计算。

85
00:04:28,360 --> 00:04:31,520
所以通过属性到底。

86
00:04:31,520 --> 00:04:34,190
这也是为什么我要给你看这样的东西

87
00:04:34,190 --> 00:04:36,760
在本课程中，因为您需要能够

88
00:04:36,760 --> 00:04:39,320
做这样的事情，你应该意识到

89
00:04:39,320 --> 00:04:41,533
类似的模式和方法。

90
00:04:42,630 --> 00:04:44,300
嗯，这就是我们的按钮。

91
00:04:44,300 --> 00:04:46,927
那是添加的下一个组件。

92
00:04:46,927 --> 00:04:50,835
有了这个，我们花了足够的时间在视觉组件上，

93
00:04:50,835 --> 00:04:53,820
让我们回到添加一些逻辑。

94
00:04:53,820 --> 00:04:56,200
目前，我们有一个资源列表，

95
00:04:56,200 --> 00:04:58,720
但我们仍在处理所有虚拟资源

96
00:04:58,720 --> 00:05:00,010
我们开始了。

97
00:05:00,010 --> 00:05:03,300
所以下一步，让我们确保我们允许用户

98
00:05:03,300 --> 00:05:08,140
去添加这样的数据的资源表单

99
00:05:08,140 --> 00:05:10,460
可以输入到表单输入中

100
00:05:10,460 --> 00:05:13,850
以及最终可以在哪里添加新资源

101
00:05:13,850 --> 00:05:17,133
由我们的网络应用程序的用户到这个数组。