1
00:00:02,220 --> 00:00:05,090
现在为了使用该输入数据，

2
00:00:05,090 --> 00:00:07,310
并在 Firebase 上创建一个用户，

3
00:00:07,310 --> 00:00:09,470
或者得到这样的令牌。

4
00:00:09,470 --> 00:00:11,350
我们需要去 Firebase 控制台

5
00:00:11,350 --> 00:00:13,223
并在那里进行身份验证。

6
00:00:14,440 --> 00:00:17,010
在这里您需要设置一个登录方法。

7
00:00:17,010 --> 00:00:20,620
您也可以在此处的符号和方法点击下执行此操作。

8
00:00:20,620 --> 00:00:23,320
在这里我们要使用电子邮件密码

9
00:00:23,320 --> 00:00:27,430
并仅启用此第一个单击保存

10
00:00:27,430 --> 00:00:30,260
现在 Firebase 支持创建用户

11
00:00:30,260 --> 00:00:31,580
带有电子邮件密码。

12
00:00:31,580 --> 00:00:33,980
当然，它也支持登录。

13
00:00:35,370 --> 00:00:38,770
现在，如果您使用 Google for Firebase 关闭逮捕 API，

14
00:00:38,770 --> 00:00:40,560
您还可以找到 Firebase 文档

15
00:00:40,560 --> 00:00:43,450
其余 API 日优惠

16
00:00:43,450 --> 00:00:46,620
用于创建用户和登录用户

17
00:00:46,620 --> 00:00:48,930
这里的两个端点很有趣

18
00:00:48,930 --> 00:00:50,640
使用电子邮件密码注册

19
00:00:50,640 --> 00:00:52,840
使用电子邮件密码登录。

20
00:00:52,840 --> 00:00:54,730
这仅在您启用后才有效

21
00:00:54,730 --> 00:00:56,753
不过，在您的项目中进行身份验证。

22
00:00:57,720 --> 00:00:59,360
所以这些是终点

23
00:00:59,360 --> 00:01:02,020
我们现在要向其发送请求

24
00:01:02,020 --> 00:01:04,970
从我们的视图应用程序内部创建一个用户

25
00:01:04,970 --> 00:01:08,000
并获取令牌或登录用户。

26
00:01:08,000 --> 00:01:09,880
在我们发送之前，虽然

27
00:01:09,880 --> 00:01:11,280
我们可以在这里写一些代码

28
00:01:11,280 --> 00:01:13,230
因为我不想发送请求

29
00:01:13,230 --> 00:01:14,910
从这个组件内部。

30
00:01:14,910 --> 00:01:17,170
但同样，我想使用 view UX，

31
00:01:17,170 --> 00:01:19,480
因为它也将是 UX

32
00:01:19,480 --> 00:01:22,090
我们稍后需要在其中存储该令牌

33
00:01:22,090 --> 00:01:24,150
并存储信息

34
00:01:24,150 --> 00:01:26,420
无论用户是否登录，

35
00:01:26,420 --> 00:01:29,670
因为爸爸登录我们的模式，

36
00:01:29,670 --> 00:01:32,740
会影响我们这里要在页面上显示的内容，

37
00:01:32,740 --> 00:01:34,560
例如，在导航中。

38
00:01:34,560 --> 00:01:37,363
所以我们需要它作为应用程序的白色状态。

39
00:01:39,270 --> 00:01:42,160
现在为此，我们可以创建一个新模块，

40
00:01:42,160 --> 00:01:43,910
关闭模块，

41
00:01:43,910 --> 00:01:46,640
或者我们作为根状态进行管理

42
00:01:46,640 --> 00:01:49,150
在我们的主要商店对象中。

43
00:01:49,150 --> 00:01:50,450
可以这么说，

44
00:01:50,450 --> 00:01:52,760
现在我将选择一个单独的模块。

45
00:01:52,760 --> 00:01:54,430
认证模块

46
00:01:54,430 --> 00:01:58,430
并在他们的 Eta index.jS 中下降了 mutation.js

47
00:01:58,430 --> 00:02:01,970
actions.JS 和 getters.js

48
00:02:01,970 --> 00:02:04,110
所以我们之前也做过，

49
00:02:04,110 --> 00:02:08,419
在我们这里的主要商店模块中，

50
00:02:08,419 --> 00:02:11,910
然后我将导入 auth 模块

51
00:02:11,910 --> 00:02:16,490
来自 index.js 中的思想斜线模块

52
00:02:17,790 --> 00:02:21,463
并将其添加到 auth 密钥下。

53
00:02:22,950 --> 00:02:25,180
现在这是我不会做的一件事。

54
00:02:25,180 --> 00:02:28,490
我不会命名身份验证模块

55
00:02:28,490 --> 00:02:29,850
一个简单的原因

56
00:02:29,850 --> 00:02:32,490
因为过去我在这里管理我的用户 ID

57
00:02:32,490 --> 00:02:33,980
作为一个全球国家。

58
00:02:33,980 --> 00:02:35,830
而且我不想更改所有代码

59
00:02:35,830 --> 00:02:37,440
整个应用程序

60
00:02:37,440 --> 00:02:41,060
例如，我在其中使用此用户 ID 获取器。

61
00:02:41,060 --> 00:02:43,200
所以我现在将使用那个吸气剂

62
00:02:43,200 --> 00:02:44,700
并从这里删除，

63
00:02:44,700 --> 00:02:47,460
但不是命名空间这个模块，

64
00:02:47,460 --> 00:02:50,400
当该模块添加到我们的根存储时，

65
00:02:50,400 --> 00:02:54,360
所有收集者等仍然可以像以前一样访问，

66
00:02:54,360 --> 00:02:57,513
因此我们不需要更改任何 ABRA 代码。

67
00:02:58,710 --> 00:02:59,770
因此，然而，

68
00:02:59,770 --> 00:03:02,290
我将在这里抓取这个 getter 对象，

69
00:03:02,290 --> 00:03:04,930
删除它并在此处删除一起键

70
00:03:04,930 --> 00:03:08,100
并转到您文件夹中的我的 gatters.js 文件

71
00:03:08,100 --> 00:03:09,880
并导出该对象

72
00:03:11,900 --> 00:03:14,050
并抓住这里的状态，

73
00:03:14,050 --> 00:03:17,610
这个圣吃了，其实这整个状态。

74
00:03:17,610 --> 00:03:18,750
剪下来也一样。

75
00:03:18,750 --> 00:03:21,010
并将其添加到 index.js

76
00:03:21,010 --> 00:03:23,680
在这里我导出一个默认对象

77
00:03:24,530 --> 00:03:26,363
在这里，我将带入那种状态。

78
00:03:27,800 --> 00:03:30,220
然后在这里我们还导入突变

79
00:03:30,220 --> 00:03:33,070
来自突变.js

80
00:03:34,200 --> 00:03:38,910
从 actions.js 导入动作

81
00:03:38,910 --> 00:03:43,310
当然还有来自 getters.js 的所有导入 getter

82
00:03:45,700 --> 00:03:49,560
并将所有这些东西添加到这个关闭模块对象中。

83
00:03:49,560 --> 00:03:51,410
所以添加突变

84
00:03:51,410 --> 00:03:52,340
行动，

85
00:03:52,340 --> 00:03:53,180
和吸气剂。

86
00:03:53,180 --> 00:03:55,150
使用这些 JavaScript 缩短

87
00:03:57,380 --> 00:04:01,500
现在我们只需要导出空对象

88
00:04:01,500 --> 00:04:05,330
在行动和突变。

89
00:04:05,330 --> 00:04:07,260
我们得到了我们的吸气剂和吸气剂。

90
00:04:07,260 --> 00:04:11,130
有了这个，我们现在正在使用那个关闭模块。

91
00:04:11,130 --> 00:04:13,720
在这里，我现在想定义动作

92
00:04:13,720 --> 00:04:15,910
用于登录和注册。

93
00:04:15,910 --> 00:04:17,610
当然，所有的突变

94
00:04:17,610 --> 00:04:20,023
一旦成功，这将被承诺。