1
00:00:02,220 --> 00:00:05,110
So let's start with logging the user out

2
00:00:05,110 --> 00:00:06,490
and clearing the data.

3
00:00:06,490 --> 00:00:11,000
For that and the log out action besides committing this,

4
00:00:11,000 --> 00:00:13,740
we should also reach out to local storage

5
00:00:13,740 --> 00:00:18,740
and remove the token and all the remove the user ID.

6
00:00:20,380 --> 00:00:22,250
Now that was the easy part.

7
00:00:22,250 --> 00:00:26,130
The more tricky part is that we wanna log the user out

8
00:00:26,130 --> 00:00:28,483
automatically if the token expired.

9
00:00:29,350 --> 00:00:31,580
And for that got this token expiration,

10
00:00:31,580 --> 00:00:34,863
which we aren't really using at the moment though.

11
00:00:35,810 --> 00:00:37,440
Now when we do log in

12
00:00:39,350 --> 00:00:41,970
here like this,

13
00:00:41,970 --> 00:00:45,410
in the data which we get back from Firebase,

14
00:00:45,410 --> 00:00:49,130
as you see in their docs, we also get the expires in field,

15
00:00:49,130 --> 00:00:52,690
which is a text, but actually holds the number of seconds

16
00:00:52,690 --> 00:00:55,350
in which the ID token expires.

17
00:00:55,350 --> 00:00:59,280
I can tell you by default, that will be 3,600 seconds,

18
00:00:59,280 --> 00:01:00,483
which is an hour.

19
00:01:01,380 --> 00:01:04,200
Now we wanna store that expiration date,

20
00:01:04,200 --> 00:01:07,090
not the duration because that doesn't help us,

21
00:01:07,090 --> 00:01:08,610
but the expiration date

22
00:01:08,610 --> 00:01:11,560
in the future when the token becomes invalid,

23
00:01:11,560 --> 00:01:14,720
whenever we do log the user in.

24
00:01:14,720 --> 00:01:19,720
So here in our off action, where we sent the request,

25
00:01:20,520 --> 00:01:23,270
when we store that data in local storage,

26
00:01:23,270 --> 00:01:28,270
we now also wanna derive the expiration date,

27
00:01:28,440 --> 00:01:31,690
which has a date in the future, which is the current date,

28
00:01:31,690 --> 00:01:35,363
plus the amount of seconds until the token expires.

29
00:01:36,610 --> 00:01:40,280
So for that we can get the current date by calling new date

30
00:01:40,280 --> 00:01:42,700
that gives us the current timestamp.

31
00:01:42,700 --> 00:01:47,490
But now I wanna add something here and actually for that

32
00:01:47,490 --> 00:01:49,300
I will call get time

33
00:01:49,300 --> 00:01:53,321
to get the current timestamp in milliseconds

34
00:01:53,321 --> 00:01:55,930
and I wanna add the expiration time,

35
00:01:55,930 --> 00:01:58,710
the expiration duration in milliseconds.

36
00:01:58,710 --> 00:02:00,970
So for that I'll add expires in

37
00:02:02,790 --> 00:02:07,790
and get that from responseData.expiresIn times 1,000

38
00:02:10,335 --> 00:02:12,680
and ensure that this is converted to a number

39
00:02:12,680 --> 00:02:14,770
by adding a plus here.

40
00:02:14,770 --> 00:02:17,010
So that is then converting the string to a number

41
00:02:17,010 --> 00:02:20,980
then since this is in seconds, I multiplied with 1,000

42
00:02:20,980 --> 00:02:22,810
to have it in milliseconds

43
00:02:22,810 --> 00:02:27,610
and then I can add expires in here to expiration dates,

44
00:02:27,610 --> 00:02:32,330
to have a new expiration timestamp in milliseconds,

45
00:02:32,330 --> 00:02:33,850
which will be in the future.

46
00:02:33,850 --> 00:02:36,293
Current time plus that duration.

47
00:02:37,860 --> 00:02:39,670
And it's this expiration date,

48
00:02:39,670 --> 00:02:43,460
which now also has to be stored in local storage.

49
00:02:43,460 --> 00:02:48,460
So here I set a new item, which is the expiration,

50
00:02:49,040 --> 00:02:51,350
which is called token expiration,

51
00:02:51,350 --> 00:02:54,543
which is that expiration date.

52
00:02:58,200 --> 00:03:03,200
And here we now also store data in UX the expiration date.

53
00:03:04,920 --> 00:03:07,800
Actually, we don't even need it in UX

54
00:03:07,800 --> 00:03:09,820
because local storage is enough.

55
00:03:09,820 --> 00:03:12,970
It only matters to us when we reload the page.

56
00:03:12,970 --> 00:03:16,330
So we don't need to commit it here and then in mutation,

57
00:03:16,330 --> 00:03:18,290
we can actually also get rid of it here

58
00:03:21,900 --> 00:03:26,253
And in try log in we also don't need to set this anymore.

59
00:03:27,400 --> 00:03:30,430
Instead now we store it in local storage,

60
00:03:30,430 --> 00:03:33,530
but I wanna do one other key thing.

61
00:03:33,530 --> 00:03:37,230
I wanna set a timer whenever the user is logged in

62
00:03:37,230 --> 00:03:39,550
so that we automatically log user out

63
00:03:39,550 --> 00:03:42,020
if that timer expires.

64
00:03:42,020 --> 00:03:43,810
And that's something that we'll also do here

65
00:03:43,810 --> 00:03:45,453
in the auth actions.

66
00:03:46,300 --> 00:03:51,300
I will set a new time out here where I have my expires in

67
00:03:51,980 --> 00:03:55,470
so this time in milliseconds as a duration,

68
00:03:55,470 --> 00:03:59,690
and after that duration, this function will execute.

69
00:03:59,690 --> 00:04:01,253
And in this function,

70
00:04:02,450 --> 00:04:05,620
I will simply dispatch the log out action,

71
00:04:05,620 --> 00:04:09,363
because that's what I wanna do if the token expires.

72
00:04:10,730 --> 00:04:15,070
I also wanna make sure that I only have one timer active

73
00:04:15,070 --> 00:04:20,070
at a time so I will actually add a global variable here,

74
00:04:20,370 --> 00:04:25,370
timer, which I use to hold my timer like this,

75
00:04:28,850 --> 00:04:30,700
and then we can use this timer variable

76
00:04:30,700 --> 00:04:33,760
from anywhere in this file to clear the timer.

77
00:04:33,760 --> 00:04:36,000
And I wanna clear it whenever we log out.

78
00:04:36,000 --> 00:04:39,230
When we log out, I wanna call clear timeout

79
00:04:39,230 --> 00:04:41,440
and pass this timer variable to it,

80
00:04:41,440 --> 00:04:43,770
to clear the ongoing timer.

81
00:04:43,770 --> 00:04:47,230
For example, if we manually clicked the log out button,

82
00:04:47,230 --> 00:04:50,223
then I also wanna clear the log out timer.

83
00:04:51,220 --> 00:04:56,220
I also of course, wanna remove the token expiration item

84
00:04:57,610 --> 00:05:00,503
from local storage if we do log out.

85
00:05:03,150 --> 00:05:05,470
And also not commit to this anymore

86
00:05:05,470 --> 00:05:09,083
because we don't store token expiration in Vuex anymore.

87
00:05:10,810 --> 00:05:15,033
So now we've got this timer set whenever we logged in here,

88
00:05:16,930 --> 00:05:20,920
we also need to set this timer when we automatically log in,

89
00:05:20,920 --> 00:05:25,030
then we need to check how much expiration time is left

90
00:05:25,030 --> 00:05:28,260
and set a new timer to that time.

91
00:05:28,260 --> 00:05:31,700
So that's why I'm storing token expiration in local storage.

92
00:05:31,700 --> 00:05:34,260
So here I can get my token expiration

93
00:05:34,260 --> 00:05:39,260
by accessing local storage get item token expiration,

94
00:05:40,750 --> 00:05:44,060
and that will now be a timestamp in the future.

95
00:05:44,060 --> 00:05:45,810
So we now need to get to the difference

96
00:05:45,810 --> 00:05:48,583
between that timestamp and the current time,

97
00:05:50,420 --> 00:05:54,083
which I'll again store in a constant named expiresIn

98
00:05:55,330 --> 00:05:59,630
which is that token expiration converted to a number

99
00:05:59,630 --> 00:06:04,630
by adding a plus minus to current time

100
00:06:04,750 --> 00:06:07,740
as a timestamp in milliseconds.

101
00:06:07,740 --> 00:06:10,340
So that will then be the difference in milliseconds

102
00:06:10,340 --> 00:06:13,250
between this time and a future when the token expires

103
00:06:13,250 --> 00:06:14,403
and the current time.

104
00:06:16,250 --> 00:06:20,840
And of course, if expires in, should be negative here,

105
00:06:20,840 --> 00:06:23,180
then we don't even need to log the user in.

106
00:06:23,180 --> 00:06:27,630
We could even argue that if it's smaller than let's say

107
00:06:27,630 --> 00:06:30,940
10,000 so smaller than 10 seconds,

108
00:06:30,940 --> 00:06:34,640
that even then logging the user in makes no sense.

109
00:06:34,640 --> 00:06:37,280
But I will go with smaller zero here.

110
00:06:37,280 --> 00:06:39,790
And if expires in a smaller than that,

111
00:06:39,790 --> 00:06:42,960
then the token is definitely invalid

112
00:06:42,960 --> 00:06:46,600
so then in that case, I will just return here

113
00:06:46,600 --> 00:06:50,150
and not continue with logging the user in

114
00:06:50,150 --> 00:06:52,110
because the timer expired,

115
00:06:52,110 --> 00:06:54,948
there is no need to continue here.

116
00:06:54,948 --> 00:06:58,280
Otherwise though, if the timer is positive,

117
00:06:58,280 --> 00:07:02,360
if we have enough time left, if the token is still valid,

118
00:07:02,360 --> 00:07:07,360
I again will set a timer here with expiresIn as a duration

119
00:07:07,950 --> 00:07:10,890
and just as on my average timer in this function,

120
00:07:10,890 --> 00:07:15,490
I'll call context dispatch log out

121
00:07:15,490 --> 00:07:18,143
and store that timer in the timer variable.

122
00:07:21,270 --> 00:07:25,010
Okay, so theoretically that should work.

123
00:07:25,010 --> 00:07:27,070
In order to test it,

124
00:07:27,070 --> 00:07:30,750
I will manually tweak this expiration time a bit

125
00:07:30,750 --> 00:07:32,160
and when we log in,

126
00:07:32,160 --> 00:07:37,160
I will not set it to the actual exploration duration

127
00:07:37,710 --> 00:07:38,690
which we have.

128
00:07:38,690 --> 00:07:40,190
But instead I'll duplicate this

129
00:07:40,190 --> 00:07:41,940
and comment out to the correct one

130
00:07:41,940 --> 00:07:45,190
and just set it to five seconds.

131
00:07:45,190 --> 00:07:47,883
So now after five seconds, we should be logged out.

132
00:07:49,860 --> 00:07:53,773
So if we give this a try and reload and log in here,

133
00:07:57,080 --> 00:07:59,780
that works, but after five seconds

134
00:07:59,780 --> 00:08:02,370
we shouldn't be logged in anymore.

135
00:08:02,370 --> 00:08:03,530
And that looks good.

136
00:08:03,530 --> 00:08:06,433
The UI switched to not logged in state.

137
00:08:07,330 --> 00:08:10,663
That should also work if I reload the page in between.

138
00:08:11,910 --> 00:08:14,250
So if I reload, I'm still logged in,

139
00:08:14,250 --> 00:08:18,173
but still this should then update and it does.

140
00:08:19,140 --> 00:08:22,170
Now one problem we have with this solution

141
00:08:22,170 --> 00:08:27,170
can be seen if I visit a protected page like requests,

142
00:08:27,820 --> 00:08:31,870
if I'm logged out, I now stay on this page.

143
00:08:31,870 --> 00:08:34,630
So we should ensure that we redirect the user

144
00:08:34,630 --> 00:08:37,683
if we automatically log the user out.

145
00:08:38,600 --> 00:08:42,860
And to achieve this redirecting upon auto log out,

146
00:08:42,860 --> 00:08:47,357
I will add a new action, which I name autoLogout

147
00:08:49,820 --> 00:08:52,100
where I get my context

148
00:08:52,100 --> 00:08:56,253
and where I will dispatch the regular log out,

149
00:08:57,220 --> 00:09:00,110
but where in addition,

150
00:09:00,110 --> 00:09:04,980
I will also commit and never a mutation,

151
00:09:04,980 --> 00:09:08,497
which we have yet to add, which I'll name didLogout.

152
00:09:10,610 --> 00:09:15,610
And in this mutation did log out, I'll set a new state

153
00:09:19,250 --> 00:09:22,573
did log out to true,

154
00:09:23,410 --> 00:09:26,930
and that's some state we first of all wanna add to our

155
00:09:26,930 --> 00:09:30,890
main state here in the auth index JS fall

156
00:09:30,890 --> 00:09:33,113
did log out initially is false,

157
00:09:34,370 --> 00:09:38,010
maybe name it did auto log out to be clearer,

158
00:09:38,010 --> 00:09:41,620
I will also name it did auto log out here when I update it

159
00:09:41,620 --> 00:09:46,033
and named a mutation, did auto log out.

160
00:09:46,890 --> 00:09:49,850
Maybe also the name it set auto log out to be in line

161
00:09:49,850 --> 00:09:53,580
with the other mutation and then in actions dispatch

162
00:09:53,580 --> 00:09:54,913
set auto log out.

163
00:09:55,760 --> 00:09:58,710
Now what's my idea here with that auto log out thing,

164
00:09:58,710 --> 00:09:59,713
which I now is set?

165
00:10:00,608 --> 00:10:01,441
That should be set

166
00:10:01,441 --> 00:10:04,460
when the auto log out action is dispatched.

167
00:10:04,460 --> 00:10:08,710
So now in the timer, I wanna dispatch all the log out

168
00:10:08,710 --> 00:10:12,163
here and also in the other place where I create the timer.

169
00:10:13,320 --> 00:10:18,320
And the idea is that now in App View, we can add a watcher

170
00:10:18,490 --> 00:10:22,210
and watch this all the log out.

171
00:10:22,210 --> 00:10:24,380
For that, we just need to add a getter

172
00:10:25,620 --> 00:10:29,560
did auto log out, we get our state

173
00:10:29,560 --> 00:10:32,463
where return state.didAutoLogout.

174
00:10:35,870 --> 00:10:38,550
So that state which I'm setting in this mutation

175
00:10:38,550 --> 00:10:41,490
returned by this getter and in App View,

176
00:10:41,490 --> 00:10:46,490
we can then add a compute property, did auto log out

177
00:10:47,970 --> 00:10:52,970
where I returned this store.getters.didAutoLogout,

178
00:10:55,930 --> 00:11:00,830
and then we can watch this, didAutoLogout computed property

179
00:11:00,830 --> 00:11:05,830
received a new value or the current value and the old value.

180
00:11:06,120 --> 00:11:10,320
And we can now check if current value is true.

181
00:11:10,320 --> 00:11:11,820
So if we did auto log out

182
00:11:11,820 --> 00:11:15,610
and current value is not the same as the previous value.

183
00:11:15,610 --> 00:11:18,530
So it did change and it is now true,

184
00:11:18,530 --> 00:11:20,690
then we can use the router

185
00:11:20,690 --> 00:11:23,563
to redirect to slash coaches let's say.

186
00:11:24,690 --> 00:11:27,550
With that when we automatically log the user out,

187
00:11:27,550 --> 00:11:29,520
we redirect to coaches.

188
00:11:29,520 --> 00:11:34,520
So if we now give us a try and we are on slash requests,

189
00:11:37,870 --> 00:11:40,170
we are redirected to coaches.

190
00:11:40,170 --> 00:11:41,060
So now with that,

191
00:11:41,060 --> 00:11:43,590
that would be one way I can think of that

192
00:11:43,590 --> 00:11:46,083
should help us redirect the user here.

193
00:11:47,210 --> 00:11:51,270
Now with that auto log out approach and this mutation

194
00:11:51,270 --> 00:11:53,670
where I changed did auto log out,

195
00:11:53,670 --> 00:11:56,970
I also wanna make sure that I changed if we log in again.

196
00:11:56,970 --> 00:11:58,760
So if we set a user again,

197
00:11:58,760 --> 00:12:02,360
then did auto log out is set to false again

198
00:12:02,360 --> 00:12:05,320
so that the next time it switches to true,

199
00:12:05,320 --> 00:12:07,683
we also triggered as watcher again.

200
00:12:08,580 --> 00:12:11,670
This watcher will then run if it's true and changed

201
00:12:11,670 --> 00:12:14,240
and therefore we need to change it back.

202
00:12:14,240 --> 00:12:17,170
Otherwise it would never change again.

203
00:12:17,170 --> 00:12:19,730
I also noticed that, of course now here

204
00:12:19,730 --> 00:12:22,620
in index.js of module,

205
00:12:22,620 --> 00:12:24,950
we can get rid of the token expiration here

206
00:12:24,950 --> 00:12:28,650
because we're not really using it in our Vuex state,

207
00:12:28,650 --> 00:12:30,870
but that's just a side note.

208
00:12:30,870 --> 00:12:33,790
With it we get the auto log out functionality added

209
00:12:33,790 --> 00:12:35,910
and therefore in the auth actions,

210
00:12:35,910 --> 00:12:40,910
I wanna switch back that expires in time to the real time,

211
00:12:41,320 --> 00:12:44,480
which is of course longer than five seconds.

212
00:12:44,480 --> 00:12:46,363
So that now if we log in,

213
00:12:48,520 --> 00:12:50,870
we actually should stay logged in

214
00:12:50,870 --> 00:12:53,640
and we can interact with this application.

215
00:12:53,640 --> 00:12:56,640
And for example, send a message

216
00:12:59,560 --> 00:13:04,393
to a number or a coach, or also send a message to ourselves,

217
00:13:08,890 --> 00:13:13,890
hi there, which we now can also see under requests.

218
00:13:15,530 --> 00:13:17,640
So that's now all auto log in

219
00:13:19,180 --> 00:13:21,230
so that we can reload and stay logged in

220
00:13:21,230 --> 00:13:25,900
and auto log out added to this application.

221
00:13:25,900 --> 00:13:29,160
And therefore we now added all the key building blocks

222
00:13:29,160 --> 00:13:32,593
which you need to add authentication to a View App.

