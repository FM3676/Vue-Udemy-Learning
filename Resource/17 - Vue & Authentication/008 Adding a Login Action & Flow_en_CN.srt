1
00:00:02,090 --> 00:00:03,880
因此，要使“登录”工作，

2
00:00:03,880 --> 00:00:06,200
我们可以回到我们的 Vuex 操作。

3
00:00:06,200 --> 00:00:08,720
在这里，“登录”动作。

4
00:00:08,720 --> 00:00:10,120
我们已经可以添加“异步”。

5
00:00:10,120 --> 00:00:13,030
因为，我们肯定也会发送那个 HTTP 请求

6
00:00:13,030 --> 00:00:14,140
在这里。

7
00:00:14,140 --> 00:00:16,940
我们可以从“注册”中复制此代码。

8
00:00:16,940 --> 00:00:19,400
因为，我们发送了相同类型的数据。

9
00:00:19,400 --> 00:00:21,140
我们还发送一个帖子请求。

10
00:00:21,140 --> 00:00:23,890
但是，URL 会有所不同。

11
00:00:23,890 --> 00:00:27,650
如果我们查看 Firebase Auth REST API 文档。

12
00:00:27,650 --> 00:00:30,480
在这里，在“登录”下；这是“登录”。

13
00:00:30,480 --> 00:00:33,073
这是我们现在需要的这个 URL。

14
00:00:35,210 --> 00:00:38,150
不过，它具有相同的请求正文有效负载。

15
00:00:38,150 --> 00:00:41,373
所以，抓住这个 URL 并替换它。

16
00:00:42,840 --> 00:00:45,883
在这里，取决于您的 API 密钥。这是一样的。

17
00:00:46,910 --> 00:00:49,360
有了这个，这应该工作。

18
00:00:49,360 --> 00:00:52,760
当然，你也可以将它重构为一些函数，

19
00:00:52,760 --> 00:00:54,700
减少代码重复。

20
00:00:54,700 --> 00:00:56,430
但是，我喜欢在这里明确。

21
00:00:56,430 --> 00:00:57,913
所以我会保持这样。

22
00:00:59,020 --> 00:01:02,000
现在，我们仍然想得到响应数据，

23
00:01:02,000 --> 00:01:05,110
检查错误，并在最后提交一些操作。

24
00:01:05,110 --> 00:01:07,183
所以，我们也可以复制所有这些。

25
00:01:09,280 --> 00:01:11,900
有了这个，我们应该很好！

26
00:01:11,900 --> 00:01:14,180
我们也可以提交相同的突变，

27
00:01:14,180 --> 00:01:16,110
因为我们得到了相同的数据。

28
00:01:16,110 --> 00:01:18,720
实际上只是 URL 不同。

29
00:01:18,720 --> 00:01:21,250
那，然后，确保我们正在登录，

30
00:01:21,250 --> 00:01:22,360
而不是注册。

31
00:01:22,360 --> 00:01:26,170
但是，除此之外，我们正在做完全相同的事情。

32
00:01:26,170 --> 00:01:28,160
因此，再一次，如果你想，

33
00:01:28,160 --> 00:01:32,859
您也绝对可以将其重构为一项操作，

34
00:01:32,859 --> 00:01:36,830
例如，我们使用有效负载控制 URL。

35
00:01:36,830 --> 00:01:40,463
或者，类似的东西。但我会在这里采取两个行动。

36
00:01:41,470 --> 00:01:44,760
当然，还可以获得我的“上下文和有效负载”。

37
00:01:44,760 --> 00:01:48,993
在这里，关于“登录操作”。完成后，

38
00:01:49,880 --> 00:01:52,400
我们现在，可以调度这个动作。

39
00:01:52,400 --> 00:01:54,077
所以回到“UserAuth”。

40
00:01:59,910 --> 00:02:00,743
这里，

41
00:02:01,900 --> 00:02:04,367
我想：“等待这个。

42
00:02:04,367 --> 00:02:05,320
$商店。

43
00:02:05,320 --> 00:02:07,874
派遣/

44
00:02:07,874 --> 00:02:11,933
('login')" 并发送与以前相同的有效负载。

45
00:02:14,440 --> 00:02:16,680
现在，我们当然也可以重构它。

46
00:02:16,680 --> 00:02:17,933
例如：

47
00:02:19,300 --> 00:02:21,770
创建一个“ActionPayload”常量，

48
00:02:21,770 --> 00:02:23,720
它持有这个对象。

49
00:02:23,720 --> 00:02:25,450
然后简单地使用这个对象，

50
00:02:25,450 --> 00:02:26,283
这里

51
00:02:27,270 --> 00:02:28,113
和这里。

52
00:02:29,040 --> 00:02:31,740
所以，我们至少重用了一点代码。

53
00:02:32,950 --> 00:02:35,330
所以，现在我们正在调度这些动作。

54
00:02:35,330 --> 00:02:37,560
我们在等他们。我们正在显示反馈。

55
00:02:37,560 --> 00:02:39,060
如果我们试一试

56
00:02:39,060 --> 00:02:40,490
并保存，

57
00:02:40,490 --> 00:02:42,260
回到我们的

58
00:02:42,260 --> 00:02:43,820
在这里申请。

59
00:02:43,820 --> 00:02:47,930
如果我使用电子邮件地址和有效密码，

60
00:02:47,930 --> 00:02:51,830
然后我点击“登录”，这看起来像是一个成功的响应。

61
00:02:51,830 --> 00:02:54,703
如果我使用无效密码，我会收到错误消息。

62
00:02:56,850 --> 00:02:58,480
所以，看起来不错！

63
00:02:58,480 --> 00:02:59,950
接着就，随即，

64
00:02:59,950 --> 00:03:02,910
我们现在可以开始使用该令牌。

65
00:03:02,910 --> 00:03:05,930
并将其附加到传出请求上。

66
00:03:05,930 --> 00:03:09,380
所以，那，我们又可以注册为教练了

67
00:03:09,380 --> 00:03:10,720
并查看请求。

68
00:03:10,720 --> 00:03:13,120
因为目前，这当然失败了。