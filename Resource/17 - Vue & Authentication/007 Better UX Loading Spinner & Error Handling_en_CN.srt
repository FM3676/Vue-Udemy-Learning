1
00:00:02,180 --> 00:00:03,580
所以让我们处理反馈，

2
00:00:03,580 --> 00:00:05,330
我们提供给用户

3
00:00:05,330 --> 00:00:06,980
在错误情况下

4
00:00:06,980 --> 00:00:08,660
以及我们在

5
00:00:08,660 --> 00:00:10,723
等待发送请求。

6
00:00:11,710 --> 00:00:13,160
现在在我们的行动中，

7
00:00:13,160 --> 00:00:14,160
注册操作，

8
00:00:14,160 --> 00:00:15,420
我正在使用异步等待，

9
00:00:15,420 --> 00:00:17,230
因此，正如你已经学到的，

10
00:00:17,230 --> 00:00:19,920
这总是返回一个承诺。

11
00:00:19,920 --> 00:00:22,300
有时它会返回一个失败的承诺，

12
00:00:22,300 --> 00:00:25,003
例如，如果我们抛出这个手动错误。

13
00:00:26,410 --> 00:00:29,120
因此，我们可以回到 UserAuth

14
00:00:29,120 --> 00:00:31,510
并在那里添加两个新键

15
00:00:31,510 --> 00:00:33,040
到我们在这里管理的数据。

16
00:00:33,040 --> 00:00:36,380
isLoading，最初为假

17
00:00:36,380 --> 00:00:38,800
和最初为空的错误

18
00:00:40,610 --> 00:00:42,323
并在提交表格中，

19
00:00:43,310 --> 00:00:45,830
如果我们通过了验证步骤，

20
00:00:45,830 --> 00:00:48,010
我将这个 isLoading 设置为 true

21
00:00:48,920 --> 00:00:51,740
然后一旦我们在这里完成调度，

22
00:00:51,740 --> 00:00:55,260
我会将此 isLoading 设置为 false。

23
00:00:55,260 --> 00:00:57,270
现在我们需要等待这个动作

24
00:00:57,270 --> 00:00:58,520
不过要完成，

25
00:00:58,520 --> 00:01:01,590
否则我们立即将其设置为 false，

26
00:01:01,590 --> 00:01:03,040
在这个被发送之后

27
00:01:03,040 --> 00:01:04,879
无需等待响应

28
00:01:04,879 --> 00:01:09,210
因此我也会把它变成一个异步函数，

29
00:01:09,210 --> 00:01:11,439
异步方法 submitForm

30
00:01:11,439 --> 00:01:14,893
然后我们可以等待这个调度动作。

31
00:01:16,920 --> 00:01:20,050
另外，我们可以把这一切都包起来

32
00:01:20,050 --> 00:01:22,230
尝试捕捉，

33
00:01:22,230 --> 00:01:23,850
如果在这里阻塞，

34
00:01:23,850 --> 00:01:25,640
以便我们捕捉到任何错误

35
00:01:25,640 --> 00:01:26,800
可能会被抛出

36
00:01:27,700 --> 00:01:31,650
然后我们可以将此错误设置为等于error.message

37
00:01:31,650 --> 00:01:34,820
或回退消息

38
00:01:34,820 --> 00:01:38,580
验证失败，稍后再试，

39
00:01:38,580 --> 00:01:39,530
任何类似的东西。

40
00:01:42,210 --> 00:01:43,070
你当然可以

41
00:01:43,070 --> 00:01:46,310
还可以微调您在此处抛出的错误消息

42
00:01:46,310 --> 00:01:47,573
在你的行动中。

43
00:01:49,270 --> 00:01:52,620
检查您的登录数据，例如

44
00:01:52,620 --> 00:01:54,220
但你也可以更具体

45
00:01:54,220 --> 00:01:56,800
例如通过钻入该响应对象

46
00:01:56,800 --> 00:01:58,760
你从 Firebase 回来。

47
00:01:58,760 --> 00:02:00,410
在这里你真的可以微调这个

48
00:02:00,410 --> 00:02:01,940
根据您的要求

49
00:02:03,150 --> 00:02:05,430
但是在那个后退和用户关闭的情况下，

50
00:02:05,430 --> 00:02:06,710
我们试着抓住这个，

51
00:02:06,710 --> 00:02:07,960
我们设置了错误。

52
00:02:07,960 --> 00:02:10,590
现在我们只需要反映加载状态

53
00:02:10,590 --> 00:02:13,990
以及用户界面上的错误

54
00:02:13,990 --> 00:02:18,613
我将在我的基本对话框的帮助下做到这一点。

55
00:02:19,900 --> 00:02:21,410
我将在这里添加一个基本对话框

56
00:02:21,410 --> 00:02:23,230
并将这一切包装成一个div

57
00:02:23,230 --> 00:02:26,610
这样我们就没有多个根级组件

58
00:02:26,610 --> 00:02:27,640
因为正如你所学，

59
00:02:27,640 --> 00:02:32,640
这不是过渡组件想要的

60
00:02:33,150 --> 00:02:35,370
但是我在这里有一个基本对话框，

61
00:02:35,370 --> 00:02:38,450
我实际上想展示一个加载微调器

62
00:02:38,450 --> 00:02:40,750
因此我会使用这个固定的道具，

63
00:02:40,750 --> 00:02:44,350
我们在基础对话框中也有，

64
00:02:44,350 --> 00:02:45,330
你可能记得

65
00:02:45,330 --> 00:02:46,720
我谈到了那个

66
00:02:46,720 --> 00:02:49,660
当我添加基本对话框组件时。

67
00:02:49,660 --> 00:02:53,680
它确保对话框不会被关闭

68
00:02:53,680 --> 00:02:56,520
我会将 show 绑定到 isLoading，

69
00:02:56,520 --> 00:02:57,920
只要我们正在加载

70
00:02:57,920 --> 00:02:59,690
将显示此对话框

71
00:02:59,690 --> 00:03:01,890
在那个对话框里面，

72
00:03:01,890 --> 00:03:03,410
然后我有一段，

73
00:03:03,410 --> 00:03:08,230
我说身份验证的地方

74
00:03:10,610 --> 00:03:13,470
在下面我展示了我的基础微调器

75
00:03:15,090 --> 00:03:17,130
我将添加另一个基本对话，

76
00:03:17,130 --> 00:03:19,193
我想在错误情况下显示。

77
00:03:20,810 --> 00:03:22,430
顺便说一句，在另一个对话框中，

78
00:03:22,430 --> 00:03:25,580
我首先还要设置一个标题，

79
00:03:25,580 --> 00:03:27,653
我还说身份验证，

80
00:03:29,230 --> 00:03:31,910
我想我们可以摆脱这个段落。

81
00:03:31,910 --> 00:03:33,020
所以让我们摆脱它，

82
00:03:33,020 --> 00:03:33,980
只显示微调器

83
00:03:33,980 --> 00:03:35,730
并在标题中说 Authenticating

84
00:03:36,670 --> 00:03:39,950
但现在回到这里的另一个对话框。

85
00:03:39,950 --> 00:03:43,990
如果我们确实有错误，我想显示这个，

86
00:03:43,990 --> 00:03:46,080
所以有了这个双感叹号技巧，

87
00:03:46,080 --> 00:03:49,560
我确保这个真假值

88
00:03:49,560 --> 00:03:51,343
转换为布尔值。

89
00:03:52,720 --> 00:03:54,280
可以在这里设置标题

90
00:03:54,280 --> 00:03:56,090
发生错误

91
00:03:59,270 --> 00:04:01,490
然后在那段对话中，

92
00:04:01,490 --> 00:04:02,880
我加一段

93
00:04:02,880 --> 00:04:06,133
我在哪里输出这样的错误消息。

94
00:04:07,970 --> 00:04:08,803
加上这个，

95
00:04:08,803 --> 00:04:10,400
如果我们全部保存

96
00:04:10,400 --> 00:04:11,610
然后回去，

97
00:04:11,610 --> 00:04:13,480
进入注册模式

98
00:04:13,480 --> 00:04:16,950
我输入了和以前一样的电子邮件地址

99
00:04:18,310 --> 00:04:19,142
然后我点击注册，

100
00:04:19,142 --> 00:04:19,976
我们看到那个微调器

101
00:04:19,976 --> 00:04:22,142
然后是那个错误对话框。

102
00:04:23,560 --> 00:04:26,330
如我所见，目前解雇不起作用，

103
00:04:26,330 --> 00:04:28,610
因为显然我们应该听

104
00:04:28,610 --> 00:04:32,650
到错误对话框上的关闭事件，

105
00:04:32,650 --> 00:04:33,483
不是在另一个上，

106
00:04:33,483 --> 00:04:36,860
因为加载对话框会自动关闭

107
00:04:36,860 --> 00:04:39,660
但是错误对话框应该被我们关闭

108
00:04:39,660 --> 00:04:41,690
使用句柄错误方法，

109
00:04:41,690 --> 00:04:43,430
我们应该补充，

110
00:04:43,430 --> 00:04:46,990
在其中我们只需重置我们的错误数据属性。

111
00:04:46,990 --> 00:04:48,800
所以在这里我将添加handleError

112
00:04:48,800 --> 00:04:50,440
在这个组件的方法中

113
00:04:50,440 --> 00:04:53,090
并将此错误设置回 null。

114
00:04:53,090 --> 00:04:54,840
有了它，这是一个错误的值

115
00:04:54,840 --> 00:04:58,073
然后这将不再显示对话框。

116
00:04:58,930 --> 00:05:00,120
因此，

117
00:05:00,120 --> 00:05:01,610
回到应用程序，

118
00:05:01,610 --> 00:05:05,433
如果我再次使用我已经使用过的电子邮件尝试此操作，我们会失败，

119
00:05:07,690 --> 00:05:09,693
如果我使用有效的电子邮件，

120
00:05:10,780 --> 00:05:12,963
注册我们成功了。

121
00:05:13,810 --> 00:05:14,930
所以现在有效，

122
00:05:14,930 --> 00:05:16,800
我们得到了视觉反馈。

123
00:05:16,800 --> 00:05:19,700
之后我们可能还想重定向用户

124
00:05:19,700 --> 00:05:22,580
但这也是我稍后会关注的事情

125
00:05:22,580 --> 00:05:24,420
因为我此刻想做的，

126
00:05:24,420 --> 00:05:26,730
也是让登录工作

127
00:05:26,730 --> 00:05:28,853
然后用令牌做一些事情。