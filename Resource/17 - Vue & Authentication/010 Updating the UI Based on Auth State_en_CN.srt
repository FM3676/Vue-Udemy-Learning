1
00:00:02,040 --> 00:00:03,240
所以为了更新 UI，

2
00:00:03,240 --> 00:00:05,140
我有两个主要领域。

3
00:00:05,140 --> 00:00:07,280
这就是注册为教练按钮，

4
00:00:07,280 --> 00:00:09,900
如果我们没有登录，我想替换它。

5
00:00:09,900 --> 00:00:12,650
并且请求也不应该在这里可见

6
00:00:12,650 --> 00:00:13,850
如果我们没有登录。

7
00:00:13,850 --> 00:00:17,053
相反，也许我们想显示一个登录按钮。

8
00:00:18,450 --> 00:00:20,790
为此，我将从我的吸气剂开始

9
00:00:20,790 --> 00:00:23,650
虽然在 auth 模块中。

10
00:00:23,650 --> 00:00:25,530
所以，有吸气剂。

11
00:00:25,530 --> 00:00:28,273
我将添加一个新的 getter isAuthenticated。

12
00:00:29,980 --> 00:00:34,580
在这里，我想检查我们是否经过身份验证。

13
00:00:34,580 --> 00:00:38,230
我们如何判断我们是否通过了身份验证？

14
00:00:38,230 --> 00:00:42,030
好吧，如果我们得到一个令牌，那么我们就通过了身份验证。

15
00:00:42,030 --> 00:00:44,360
因为我们一开始就没有，

16
00:00:44,360 --> 00:00:46,410
我稍后会重置它

17
00:00:46,410 --> 00:00:48,890
一旦我们添加了注销功能。

18
00:00:48,890 --> 00:00:52,180
所以，如果我们有一个令牌，我们就通过了身份验证。

19
00:00:52,180 --> 00:00:54,870
所以，我将返回 state.token；

20
00:00:54,870 --> 00:00:57,340
并将其转换为真正的布尔值

21
00:00:57,340 --> 00:00:59,573
再次添加双感叹号。

22
00:01:01,490 --> 00:01:04,110
现在，我们可以使用 isAuthenticated getter

23
00:01:04,110 --> 00:01:05,890
进入这个应用程序的不同部分。

24
00:01:05,890 --> 00:01:08,810
例如，在教练名单下。

25
00:01:08,810 --> 00:01:11,770
在这里，我们有这个注册作为教练按钮，

26
00:01:11,770 --> 00:01:15,550
如果我们甚至没有登录，那应该是不可见的。

27
00:01:15,550 --> 00:01:20,240
相反，我想显示一个登录按钮或链接。

28
00:01:20,240 --> 00:01:22,670
因此，我们可以添加一个新的计算属性

29
00:01:22,670 --> 00:01:26,049
这里是教练的名单，

30
00:01:26,049 --> 00:01:31,049
isLoggedIn 计算属性，例如，

31
00:01:32,220 --> 00:01:37,220
我在哪里返回 this.$store.getters.isAuthenticated;

32
00:01:38,930 --> 00:01:41,420
由于这个模块没有命名空间，

33
00:01:41,420 --> 00:01:43,573
我们可以像这样访问getter。

34
00:01:44,860 --> 00:01:46,240
现在，我们可以使用 isLoggedIn

35
00:01:47,090 --> 00:01:50,470
并且仅将此注册显示为教练按钮

36
00:01:50,470 --> 00:01:52,090
如果我们不是教练，

37
00:01:52,090 --> 00:01:56,730
我们没有加载，我们已经登录。

38
00:01:56,730 --> 00:01:59,550
所以，如果我们已经登录并且我们不是教练

39
00:01:59,550 --> 00:02:00,780
我们没有加载，

40
00:02:00,780 --> 00:02:02,500
然后我想显示这个按钮。

41
00:02:02,500 --> 00:02:04,330
而且，当然，你也可以把这一切

42
00:02:04,330 --> 00:02:06,180
到一个计算属性

43
00:02:06,180 --> 00:02:08,613
将此逻辑从模板中取出。

44
00:02:09,770 --> 00:02:12,710
现在，我将在这里添加一个新的基本按钮，

45
00:02:12,710 --> 00:02:15,723
这将充当指向="/auth" 的链接

46
00:02:19,300 --> 00:02:24,300
如果我们没有登录，我说登录。

47
00:02:24,890 --> 00:02:29,750
所以，如果我们没有登录，

48
00:02:29,750 --> 00:02:31,010
如果我们没有登录，

49
00:02:31,010 --> 00:02:32,363
将显示此按钮。

50
00:02:33,980 --> 00:02:35,450
现在，有了这个保存，

51
00:02:35,450 --> 00:02:37,560
在这里我们看到登录按钮。

52
00:02:37,560 --> 00:02:38,410
我们点击它，

53
00:02:38,410 --> 00:02:40,780
我们进入登录页面。

54
00:02:40,780 --> 00:02:43,430
现在，对于导航栏，

55
00:02:43,430 --> 00:02:47,633
那是组件下布局文件夹中的TheHeader。

56
00:02:48,630 --> 00:02:51,560
在这里，我们现在还需要添加一个脚本，

57
00:02:51,560 --> 00:02:53,110
添加计算属性

58
00:02:53,110 --> 00:02:54,913
访问我们的吸气剂。

59
00:02:56,870 --> 00:02:59,390
我还将添加一个 isLoggedIn getter

60
00:02:59,390 --> 00:03:01,720
在我们这里的计算属性

61
00:03:01,720 --> 00:03:06,720
并返回 this.$store.getters.isAuthenticated;

62
00:03:06,920 --> 00:03:09,343
我们几分钟前添加的那个吸气剂。

63
00:03:11,260 --> 00:03:13,370
我只会显示这个列表项

64
00:03:13,370 --> 00:03:17,310
如果我们已登录，请使用请求链接。

65
00:03:17,310 --> 00:03:22,310
否则，我将显示不同的列表项

66
00:03:22,450 --> 00:03:26,393
带有 <router-link to="/auth"

67
00:03:28,640 --> 00:03:32,003
我说登录的地方。

68
00:03:33,420 --> 00:03:35,010
有了这个，如果我们保存这个，

69
00:03:35,010 --> 00:03:39,850
我们现在将此处的登录视为导航项。

70
00:03:39,850 --> 00:03:44,850
如果我登录，你会看到，

71
00:03:45,030 --> 00:03:47,310
我们有请求，

72
00:03:47,310 --> 00:03:48,620
在所有教练身上，

73
00:03:48,620 --> 00:03:51,090
我们会看到注册为教练按钮

74
00:03:51,090 --> 00:03:53,920
如果我们还没有注册的话。

75
00:03:53,920 --> 00:03:56,090
所以，现在让我们也添加一个注销按钮

76
00:03:56,090 --> 00:03:58,120
和注销功能

77
00:03:58,120 --> 00:04:00,340
并检查我们可以做的其他几件事

78
00:04:00,340 --> 00:04:02,073
在我们的前端。