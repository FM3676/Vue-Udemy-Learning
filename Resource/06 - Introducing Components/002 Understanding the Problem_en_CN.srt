1
00:00:02,090 --> 00:00:04,610
现在，再次附上寻找一个启动项目，

2
00:00:04,610 --> 00:00:07,570
它本质上为您提供了此页面，

3
00:00:07,570 --> 00:00:09,610
这是一个小虚拟应用程序

4
00:00:09,610 --> 00:00:12,590
您可以在其中保留您朋友的列表

5
00:00:12,590 --> 00:00:15,130
并存储电话号码和电子邮件地址

6
00:00:15,130 --> 00:00:16,309
你的朋友。

7
00:00:16,309 --> 00:00:18,780
这只是一个虚拟应用程序，

8
00:00:18,780 --> 00:00:23,240
但它会让我们探索组件的概念。

9
00:00:23,240 --> 00:00:25,290
现在，如果我们检查这个代码，

10
00:00:25,290 --> 00:00:29,340
我们得到一个带有一些标记的索引 HTML 文件，

11
00:00:29,340 --> 00:00:31,500
准确地说是无序列表

12
00:00:31,500 --> 00:00:34,700
包含两个朋友列表项。

13
00:00:34,700 --> 00:00:36,510
所以每个朋友一个列表项

14
00:00:36,510 --> 00:00:39,170
然后我们在每个朋友中都有一个嵌套列表

15
00:00:39,170 --> 00:00:41,200
与电话和电子邮件号码。

16
00:00:41,200 --> 00:00:42,820
我们有名字，我们有一个按钮

17
00:00:42,820 --> 00:00:45,020
目前什么都不做

18
00:00:45,020 --> 00:00:48,650
重要的是，我们还有一个空的 app.js 文件。

19
00:00:48,650 --> 00:00:50,990
所以根本没有查看应用程序

20
00:00:52,290 --> 00:00:55,630
现在这并非完全不现实

21
00:00:55,630 --> 00:00:58,690
这应该作为一个应用程序进行管理

22
00:00:58,690 --> 00:01:02,560
我们可能不想对这个朋友数据进行编码

23
00:01:02,560 --> 00:01:04,599
进入 HTML 代码。

24
00:01:04,599 --> 00:01:07,520
但相反，我们想保留朋友数据

25
00:01:07,520 --> 00:01:11,980
在我们的视图代码中，在我们的视图应用程序中

26
00:01:11,980 --> 00:01:15,410
我们不想硬编码那些列表项

27
00:01:15,410 --> 00:01:18,440
进入 HTML 代码，但我们要渲染

28
00:01:18,440 --> 00:01:21,820
那些使用 view.js 动态列出的项目

29
00:01:23,290 --> 00:01:27,370
事实证明，凭借我们迄今为止获得的知识，

30
00:01:27,370 --> 00:01:29,340
这是可能的，

31
00:01:29,340 --> 00:01:32,860
但实际上有一些棘手的元素。

32
00:01:32,860 --> 00:01:34,710
但是让我们尝试实现这个

33
00:01:34,710 --> 00:01:37,130
到目前为止我们学到的东西。

34
00:01:37,130 --> 00:01:41,040
所以在 app.js 文件中，我将创建一个新的视图应用程序

35
00:01:41,040 --> 00:01:43,450
与视图创建应用程序

36
00:01:43,450 --> 00:01:45,430
当然，我们要安装这个

37
00:01:45,430 --> 00:01:48,350
用它来控制 Dom 的一部分

38
00:01:48,350 --> 00:01:50,730
在这里我想控制这个部分，

39
00:01:50,730 --> 00:01:53,170
它有一个应用程序的想法。

40
00:01:53,170 --> 00:01:58,170
所以让我们在这里用这个 ID 选择器来定位它

41
00:01:58,570 --> 00:02:01,480
现在假设我们要实现这个

42
00:02:01,480 --> 00:02:03,210
通过在此处添加一些数据

43
00:02:04,130 --> 00:02:08,889
实际上在这里，我们有我们朋友的财产，

44
00:02:08,889 --> 00:02:13,150
这应该是一个充满关于我们朋友的数据的数组

45
00:02:13,150 --> 00:02:16,550
每个朋友都可以用一个对象来表示

46
00:02:16,550 --> 00:02:21,470
例如，我们有一个 ID 手册，例如，

47
00:02:21,470 --> 00:02:26,470
然后是我的朋友 Manuel 的名字字段 Manuel Lorenz，

48
00:02:27,220 --> 00:02:31,260
具有该虚构电话号码的电话字段

49
00:02:31,260 --> 00:02:32,731
你可以尝试调用它。

50
00:02:32,731 --> 00:02:36,970
也许你能找到人，但我只是编造了那个数字

51
00:02:36,970 --> 00:02:41,370
和电子邮件地址，当然也是虚构的

52
00:02:41,370 --> 00:02:43,500
所以让我们也存储它

53
00:02:43,500 --> 00:02:46,940
这样我们就有了 Manuel 的条目。

54
00:02:46,940 --> 00:02:49,470
现在让我们为朱莉添加第二个，

55
00:02:49,470 --> 00:02:53,430
所以这里有朱莉琼斯，

56
00:02:53,430 --> 00:02:56,940
我们可以抓住她假想的电话号码

57
00:02:56,940 --> 00:02:58,640
并将其存储在这里

58
00:02:58,640 --> 00:03:02,600
并抓住她想象中的电子邮件地址

59
00:03:02,600 --> 00:03:03,800
并将其存储在这里

60
00:03:04,770 --> 00:03:07,580
现在我们在 Java 脚本中管理了这些数据

61
00:03:07,580 --> 00:03:10,260
和之前的课程一样，数据是一个场景

62
00:03:10,260 --> 00:03:11,720
你通常会有。

63
00:03:11,720 --> 00:03:14,970
那可能是您从数据库中获取的数据，

64
00:03:14,970 --> 00:03:18,090
它可能是用户输入的数据。

65
00:03:18,090 --> 00:03:22,140
您将很少有硬编码的网站

66
00:03:22,140 --> 00:03:24,670
像这样的数据到 HTML 代码中。

67
00:03:24,670 --> 00:03:28,230
这就是我们最初在这里采用的这种方法的原因

68
00:03:28,230--> 00:03:29,950
不太现实

69
00:03:29,950 --> 00:03:32,733
以及为什么我们可能想要使用 vue。

70
00:03:34,370 --> 00:03:37,320
也可以让这个按钮工作

71
00:03:37,320 --> 00:03:40,680
并确保我们只在此处显示我们的详细信息

72
00:03:40,680 --> 00:03:42,570
带有电话号码和电子邮件，

73
00:03:42,570 --> 00:03:44,033
如果按下按钮。

74
00:03:45,430 --> 00:03:47,890
所以现在我们有了这些数据

75
00:03:47,890 --> 00:03:52,325
使用该数据，我们可以删除两个列表项之一

76
00:03:52,325 --> 00:03:56,290
然后在这里使用我们学到的 for

77
00:03:56,290 --> 00:03:58,310
通过所有的朋友

78
00:03:58,310 --> 00:04:00,633
在这个朋友的数据属性中。

79
00:04:02,500 --> 00:04:06,170
所以在这个包含这个数组的数据属性中，

80
00:04:06,170 --> 00:04:10,710
所以我们现在遍历这两个数组元素，

81
00:04:10,710 --> 00:04:13,370
因此现在在这个列表项中

82
00:04:13,370 --> 00:04:18,370
在 we-for 我们现在可以插入friend.name

83
00:04:18,500 --> 00:04:22,480
例如，这里是电话号码

84
00:04:22,480 --> 00:04:27,480
我们可以输出双花括号，friend.phone

85
00:04:28,350 --> 00:04:33,220
而不是电子邮件地址，我们可以输出friend.email

86
00:04:35,110 --> 00:04:37,960
我们也可以在这里分配一个键

87
00:04:37,960 --> 00:04:41,250
并将其动态绑定到friend.id

88
00:04:41,250 --> 00:04:45,500
因为我们在每个朋友条目上都有那个 ID 字段

89
00:04:47,250 --> 00:04:50,320
有了这个，如果我们保存所有这些并重新加载，

90
00:04:50,320 --> 00:04:52,030
我们和以前一样，

91
00:04:52,030 --> 00:04:55,893
但现在利用视图的 HTML 代码更少了。

92
00:04:57,010 --> 00:04:59,580
但是显示详细信息按钮不起作用

93
00:04:59,580 --> 00:05:03,880
这就是它变得棘手的部分。

94
00:05:03,880 --> 00:05:07,110
当然我们可以在这里添加方法

95
00:05:07,110 --> 00:05:11,490
然后添加一个我们可以称为切换详细信息的方法，

96
00:05:11,490 --> 00:05:14,290
应该连接到按钮

97
00:05:14,290 --> 00:05:16,010
我们想展示细节

98
00:05:16,010 --> 00:05:17,620
如果它们当前不可见

99
00:05:17,620 --> 00:05:20,290
并在它们可见时隐藏它们。

100
00:05:20,290 --> 00:05:22,950
所以我们可以添加第二个数据属性

101
00:05:22,950 --> 00:05:27,470
细节是可见的，最初假设是错误的

102
00:05:27,470 --> 00:05:28,970
最初不向他们展示

103
00:05:29,940 --> 00:05:32,450
然后在切换详细信息中，

104
00:05:32,450 --> 00:05:36,330
我们设置的细节对他们目前不可见的内容可见

105
00:05:36,330 --> 00:05:38,400
基本上反转值

106
00:05:38,400 --> 00:05:40,770
就像我们之前做过很多次一样

107
00:05:42,040 --> 00:05:46,040
有了这个，我们可以回到 HTML 代码

108
00:05:46,040 --> 00:05:47,930
并连接该按钮。

109
00:05:47,930 --> 00:05:52,040
单击后，我想触发切换详细信息

110
00:05:53,220 --> 00:05:56,960
所以我想在这里执行这个新添加的方法

111
00:05:56,960 --> 00:06:00,220
然后我们得到详细的可见属性，

112
00:06:00,220 --> 00:06:03,330
我们可以在这个无序列表上使用 v-if

113
00:06:03,330 --> 00:06:05,600
控制是否应显示该列表。

114
00:06:05,600 --> 00:06:08,743
所以不管是不是应该加入Dom，

115
00:06:09,990 --> 00:06:12,590
然后我们甚至可以替换这个标签

116
00:06:12,590 --> 00:06:14,240
在按钮上动态

117
00:06:14,240 --> 00:06:16,490
通过检查细节是否可见

118
00:06:16,490 --> 00:06:19,870
如果他们是按钮应该说隐藏细节

119
00:06:19,870 --> 00:06:23,580
只有另外说显示细节

120
00:06:23,580 --> 00:06:26,460
当然，我们也可以在这里使用计算属性，

121
00:06:26,460 --> 00:06:28,900
但我想保持简单明了

122
00:06:28,900 --> 00:06:30,603
所以我不会在这里做。

123
00:06:31,780 --> 00:06:34,840
如果我们现在重新加载，我们会得到按钮，

124
00:06:34,840 --> 00:06:36,850
但问题是没关系

125
00:06:36,850 --> 00:06:39,260
我们按下哪个朋友的按钮，

126
00:06:39,260 --> 00:06:41,320
我们总是展示一个细节

127
00:06:41,320 --> 00:06:45,010
或隐藏所有朋友的详细信息

128
00:06:45,010 --> 00:06:47,980
并且应该很明显为什么会发生这种情况

129
00:06:47,980 --> 00:06:52,180
用 v-for 我们在这里输出多个列表项，

130
00:06:52,180 --> 00:06:54,280
给每一位朋友，

131
00:06:54,280 --> 00:06:57,780
但按钮总是指向同一个方法。

132
00:06:57,780 --> 00:06:59,970
所以每个朋友的每个按钮

133
00:06:59,970 --> 00:07:04,660
获取它指向相同方法的相同事件处理程序。

134
00:07:04,660 --> 00:07:07,780
儿子无论我们按下哪个朋友的哪个按钮，

135
00:07:07,780 --> 00:07:10,210
我们总是调用相同的方法

136
00:07:10,210 --> 00:07:13,150
我们只是在这里可以看到细节，

137
00:07:13,150 --> 00:07:15,730
这只是控制的一个属性

138
00:07:15,730 --> 00:07:19,033
两个联系人中详细信息的可见性。

139
00:07:20,650 --> 00:07:24,840
现在会有解决方法，我们可以在这里传递 ID

140
00:07:24,840 --> 00:07:27,130
切换详细信息。

141
00:07:27,130 --> 00:07:30,540
我们可以转发朋友 ID 以切换详细信息

142
00:07:31,820 --> 00:07:36,370
然后在切换详细信息中，我们可以预期该 ID

143
00:07:36,370 --> 00:07:38,860
现在管理两个属性。

144
00:07:38,860 --> 00:07:42,510
细节可见 A，细节可见 B

145
00:07:42,510 --> 00:07:45,840
我们可以尝试让它与这样的属性一起工作，

146
00:07:45,840 --> 00:07:48,730
但是还是会很麻烦，

147
00:07:48,730 --> 00:07:51,890
我不确定我们如何使它与 v-if 一起使用

148
00:07:51,890 --> 00:07:54,740
找出我们在这里的哪个朋友。

149
00:07:54,740 --> 00:07:58,290
所以最终这不是我们想要做的，

150
00:07:58,290 --> 00:08:00,160
我什至不想开始

151
00:08:00,160 --> 00:08:03,660
有一个 ABC 和任何一个在这里

152
00:08:03,660 --> 00:08:07,170
因为这个列表可能会动态增长。

153
00:08:07,170 --> 00:08:10,450
它不在此应用程序中，因为它是一个简单的应用程序

154
00:08:10,450 --> 00:08:13,070
但如果你允许用户添加新朋友，

155
00:08:13,070 --> 00:08:16,890
你无法预测你需要多少房产

156
00:08:16,890 --> 00:08:19,430
切换细节的可见性。

157
00:08:19,430 --> 00:08:21,220
所以这将一事无成

158
00:08:21,220 --> 00:08:23,560
因此我会在这里恢复这个，

159
00:08:23,560 --> 00:08:25,513
这不是我想解决的问题。

160
00:08:26,920 --> 00:08:30,230
相反，这正是问题所在

161
00:08:30,230 --> 00:08:32,429
我们可以用组件来解决。

162
00:08:32,429 --> 00:08:34,850
那么让我们看看什么是组件，

163
00:08:34,850 --> 00:08:37,283
我们如何创建它们以及我们如何与它们一起工作。