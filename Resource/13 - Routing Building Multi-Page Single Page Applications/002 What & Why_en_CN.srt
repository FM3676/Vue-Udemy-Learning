1
00:00:02,290 --> 00:00:04,480
那么路由是关于什么的呢？

2
00:00:04,480 --> 00:00:07,900
附上你找到另一个开始的项目，

3
00:00:07,900 --> 00:00:11,220
当你启动服务器时

4
00:00:11,220 --> 00:00:14,910
在屏幕上为您提供这个简单的应用程序。

5
00:00:14,910 --> 00:00:16,079
这是一个视图应用程序

6
00:00:16,079 --> 00:00:18,570
我们有两个主要领域，

7
00:00:18,570 --> 00:00:20,460
团队和用户，

8
00:00:20,460 --> 00:00:21,750
我们可以在它们之间切换

9
00:00:21,750 --> 00:00:22,610
对于每个团队，

10
00:00:22,610 --> 00:00:25,020
我们也可以点击查看会员，

11
00:00:25,020 --> 00:00:25,930
虽然此刻，

12
00:00:25,930 --> 00:00:28,090
当我们这样做时，什么都不会发生。

13
00:00:28,090 --> 00:00:30,980
这是一个非常简单的启动应用程序

14
00:00:30,980 --> 00:00:34,020
如果我们看看这个应用程序，

15
00:00:34,020 --> 00:00:37,940
看起来如果我们在这里有两页，对，

16
00:00:37,940 --> 00:00:40,360
导航中有两个链接，

17
00:00:40,360 --> 00:00:43,120
团队和用户链接。

18
00:00:43,120 --> 00:00:45,270
但你会注意到的是

19
00:00:45,270 --> 00:00:47,780
当我点击这些链接时，

20
00:00:47,780 --> 00:00:50,700
我们在屏幕上看到的变化，

21
00:00:50,700 --> 00:00:53,610
但 URL 不会改变。

22
00:00:53,610 --> 00:00:56,040
它始终是相同的 URL。

23
00:00:56,040 --> 00:00:57,050
这就是最后

24
00:00:57,050 --> 00:00:58,990
路由将是什么。

25
00:00:58,990 --> 00:01:00,960
我们使用 View 构建

26
00:01:00,960 --> 00:01:05,239
JavaScript 驱动的客户端 Web 应用程序。

27
00:01:05,239 --> 00:01:07,080
所以网络应用

28
00:01:07,080 --> 00:01:09,430
用户看到的地方，

29
00:01:09,430 --> 00:01:11,290
被完全控制

30
00:01:11,290 --> 00:01:14,290
通过在浏览器中运行的 JavaScript。

31
00:01:14,290 --> 00:01:16,253
这就是 View 的全部意义所在。

32
00:01:17,100 --> 00:01:19,010
我们也基本上建立了一个

33
00:01:19,010 --> 00:01:22,080
所谓的单页应用程序，

34
00:01:22,080 --> 00:01:23,090
这意味着我们有

35
00:01:23,090 --> 00:01:25,370
一个 HTML 文件，

36
00:01:25,370 --> 00:01:26,720
正在提取的，

37
00:01:26,720 --> 00:01:29,560
并且该文件包括对的导入，

38
00:01:29,560 --> 00:01:32,910
到脚本到所有 JavaScript 代码

39
00:01:32,910 --> 00:01:34,770
我们最后写到这里，

40
00:01:34,770 --> 00:01:37,070
不是我们在这里写的代码，

41
00:01:37,070 --> 00:01:39,010
但要稍微改造一下

42
00:01:39,010 --> 00:01:40,800
和该代码的优化版本。

43
00:01:40,800 --> 00:01:43,240
CLI 正在处理所有这些

44
00:01:43,240 --> 00:01:44,970
在幕后。

45
00:01:44,970 --> 00:01:47,470
但最终都是那些 JavaScript 代码，

46
00:01:47,470 --> 00:01:48,930
在浏览器中运行，

47
00:01:48,930 --> 00:01:51,100
这对我们所看到的负责

48
00:01:51,100 --> 00:01:52,260
在这里的屏幕上。

49
00:01:52,260 --> 00:01:54,250
这就是为什么我们称这种应用程序

50
00:01:54,250 --> 00:01:56,053
单页应用程序。

51
00:01:57,190 --> 00:01:58,540
所以我们想要

52
00:01:58,540 --> 00:02:00,420
一个 HTML 文件

53
00:02:00,420 --> 00:02:03,650
然后我们的 JavaScript 代码控制我们所看到的

54
00:02:03,650 --> 00:02:05,090
屏幕上。

55
00:02:05,090 --> 00:02:06,620
但是通过这种方法，

56
00:02:06,620 --> 00:02:08,340
我们有一个问题，

57
00:02:08,340 --> 00:02:11,270
我们有相同的网址

58
00:02:11,270 --> 00:02:12,940
适用于所有领域

59
00:02:12,940 --> 00:02:14,290
我们的页面。

60
00:02:14,290 --> 00:02:17,480
这意味着如果我想分享

61
00:02:17,480 --> 00:02:18,970
此用户的页面

62
00:02:18,970 --> 00:02:21,240
与另一个用户，

63
00:02:21,240 --> 00:02:24,630
好吧，我可以分享这个常规网址，

64
00:02:24,630 --> 00:02:26,680
在这种情况下，这只是我们的域名，

65
00:02:26,680 --> 00:02:27,860
然后什么都没有。

66
00:02:27,860 --> 00:02:28,890
如果你输入这个

67
00:02:28,890 --> 00:02:30,030
然后按 Enter，

68
00:02:30,030 --> 00:02:32,430
你总是在起始页上结束。

69
00:02:32,430 --> 00:02:34,970
所以我不能分享其他任何东西

70
00:02:34,970 --> 00:02:38,150
比此应用程序的起始页。

71
00:02:38,150 --> 00:02:41,330
因为当我点击这个按钮时发生的变化

72
00:02:41,330 --> 00:02:43,520
由 JavaScript 驱动

73
00:02:43,520 --> 00:02:46,360
并且与 URL 无关。

74
00:02:46,360 --> 00:02:48,970
它只是发生在按钮上，点击这里。

75
00:02:48,970 --> 00:02:50,867
虽然这有效，

76
00:02:50,867 --> 00:02:52,870
这个应用程序有效，

77
00:02:52,870 --> 00:02:56,740
实际上，您需要应用程序

78
00:02:56,740 --> 00:02:58,230由你驱动
79

00:02:58,230 --> 00:03:01,700
并由该客户端的 JavaScript 代码提供支持，

80
00:03:01,700 --> 00:03:04,820
仍然与 URL 交互

81
00:03:04,820 --> 00:03:07,570
这样 URL 代表

82
00:03:07,570 --> 00:03:09,780
我们在页面上的哪个位置

83
00:03:09,780 --> 00:03:13,330
我们得到了一个可共享的 URL，

84
00:03:13,330 --> 00:03:16,070
我们可以与我们的用户分享，

85
00:03:16,070 --> 00:03:17,570
这样我就可以分享

86
00:03:17,570 --> 00:03:19,200
指向此用户页面的链接

87
00:03:19,200 --> 00:03:20,520
与我们的用户

88
00:03:20,520 --> 00:03:22,053
这个网络应用程序的。

89
00:03:24,360 --> 00:03:26,190
当然，我们可以尝试使这项工作

90
00:03:26,190 --> 00:03:28,870
通过拥有多个 HTML 文件，

91
00:03:28,870 --> 00:03:32,290
然后在这里指向一个不同的 HTML 文件，

92
00:03:32,290 --> 00:03:34,510
像用户 HTML。

93
00:03:34,510 --> 00:03:36,640
但这不是它的工作方式。

94
00:03:36,640 --> 00:03:39,820
这不是您构建此类视图应用程序的方式。

95
00:03:39,820 --> 00:03:41,460
如果你这样做，

96
00:03:41,460 --> 00:03:42,740
加载的脚本代码

97
00:03:42,740 --> 00:03:44,980
通过那个额外的 HTML 文件

98
00:03:44,980 --> 00:03:46,740
将完全无关

99
00:03:46,740 --> 00:03:48,330
到您的其他脚本代码，

100
00:03:48,330 --> 00:03:51,650
这可能也不是你想要的。

101
00:03:51,650 --> 00:03:54,090
这就是路由问题

102
00:03:54,090 --> 00:03:55,640
将为我们解决。

103
00:03:55,640 --> 00:03:56,930
因为事实证明

104
00:03:56,930 --> 00:03:59,000
有一个工具

105
00:03:59,000 --> 00:04:00,160
一个额外的包裹

106
00:04:00,160 --> 00:04:01,600
我们可以安装，

107
00:04:01,600 --> 00:04:05,010
这使我们能够处理 URL 更改

108
00:04:05,010 --> 00:04:07,530
在浏览器中使用 JavaScript，

109
00:04:07,530 --> 00:04:10,050
然后在屏幕上加载不同的东西

110
00:04:10,050 --> 00:04:12,590
在同一个单页应用程序中

111
00:04:12,590 --> 00:04:14,620
当该 URL 更改时

112
00:04:14,620 --> 00:04:16,930
或基于该 URL。

113
00:04:16,930 --> 00:04:18,450
和同一个包裹

114
00:04:18,450 --> 00:04:21,329
还将帮助我们更改 URL

115
00:04:21,329 --> 00:04:24,410
当我们在这个应用程序的其他地方导航时，

116
00:04:24,410 --> 00:04:27,110
以便 URL 反映该地点

117
00:04:27,110 --> 00:04:28,210
我们在哪里

118
00:04:28,210 --> 00:04:29,200
在应用程序中。

119
00:04:29,200 --> 00:04:31,560
这就是路由的全部意义所在

120
00:04:31,560 --> 00:04:33,270
以及为什么我们可能想要它。

121
00:04:33,270 --> 00:04:35,660
所以现在让我们安装那个额外的包

122
00:04:35,660 --> 00:04:37,543
开始使用路由。