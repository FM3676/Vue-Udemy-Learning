1
00:00:02,260 --> 00:00:03,130
现在暂时，

2
00:00:03,130 --> 00:00:06,630
导航就是这样

3
00:00:06,630 --> 00:00:09,310
并建立这两个价值观

4
00:00:09,310 --> 00:00:12,130
就像这里带有查询参数的对象一样。

5
00:00:12,130 --> 00:00:14,240
我现在想转到另一个功能，

6
00:00:14,240 --> 00:00:17,080
这在某些应用程序中可能很有用。

7
00:00:17,080 --> 00:00:21,453
这将是同一级别上的多个路由器视图。

8
00:00:22,330 --> 00:00:25,900
在这个演示应用程序中，我们已经有多个路由器视图。

9
00:00:25,900 --> 00:00:27,780
我们在 App vue 中有一个

10
00:00:27,780 --> 00:00:30,660
我们在团队的列表组件中有一个

11
00:00:30,660 --> 00:00:32,761
对于属于该路由的嵌套路由

12
00:00:32,761 --> 00:00:35,323
加载团队的列表组件。

13
00:00:36,420 --> 00:00:37,530
但你也可以拥有

14
00:00:37,530 --> 00:00:40,330
同一级别的多个路由器视图。

15
00:00:40,330 --> 00:00:42,850
所以对于同一组路线，

16
00:00:42,850 --> 00:00:45,003
例如，在 App vue 中，

17
00:00:46,110 --> 00:00:50,440
我们可以有一个页脚元素让我们看看，

18
00:00:50,440 --> 00:00:51,920
但这不是强制性的。

19
00:00:51,920 --> 00:00:55,080
但是在那里我们可以有另一个路由器视图。

20
00:00:55,080 --> 00:00:58,400
现在，当然，在同一级别上有两个路由器视图，

21
00:00:58,400 --> 00:01:00,640
用于处理相同的路线

22
00:01:00,640 --> 00:01:03,790
那样不会太有帮助。

23
00:01:03,790 --> 00:01:06,690
如果我保存了那个

24
00:01:06,690 --> 00:01:07,523
我重新加载，

25
00:01:07,523 --> 00:01:11,170
我们现在只看到每个页面都加载了两次。

26
00:01:11,170 --> 00:01:13,820
当然，因为我们有两个路由器视图。

27
00:01:13,820 --> 00:01:16,543
这可能不是您想要的行为。

28
00:01:17,660 --> 00:01:20,420
但取而代之的是同一级别的多个路由器视图，

29
00:01:20,420 --> 00:01:23,690
允许您添加另一个很酷的功能。

30
00:01:23,690 --> 00:01:27,240
您可以为每条路线加载多个组件，

31
00:01:27,240 --> 00:01:31,060
然后将它们发送到不同的路由器视图。

32
00:01:31,060 --> 00:01:32,600
现在让我们说，

33
00:01:32,600 --> 00:01:37,430
我们有一个 TeamsFooter.vue 组件，

34
00:01:37,430 --> 00:01:41,290
它有一个简单的模板，上面写着 Teams 页脚，

35
00:01:41,290 --> 00:01:43,123
只是为了让我们能够识别它。

36
00:01:44,010 --> 00:01:46,290
然后我把它复制到用户文件夹，

37
00:01:46,290 --> 00:01:47,983
但将其命名为 UsersFooter。

38
00:01:48,960 --> 00:01:52,653
在那里，它当然应该说用户页脚。

39
00:01:53,560 --> 00:01:56,850
现在实际上，您将拥有更多内容，而不仅仅是文本。

40
00:01:56,850 --> 00:02:00,180
但主要的是你有两个不同的组件

41
00:02:00,180 --> 00:02:03,050
应该作为页脚加载，

42
00:02:03,050 --> 00:02:05,470
取决于你是否在团队区域

43
00:02:05,470 --> 00:02:07,783
或页面的用户区域。

44
00:02:08,870 --> 00:02:11,100
这绝对是一个要求

45
00:02:11,100 --> 00:02:12,390
你有你的应用程序。

46
00:02:12,390 --> 00:02:13,480
使用视图路由器，

47
00:02:13,480 --> 00:02:15,530
这很容易实现。

48
00:02:15,530 --> 00:02:17,400
在您的路线配置中，

49
00:02:17,400 --> 00:02:20,365
您可以为每条路线注册多个组件。

50
00:02:20,365 --> 00:02:22,780
例如，在团队中，

51
00:02:22,780 --> 00:02:25,930
而不是这里只有一个组件，

52
00:02:25,930 --> 00:02:28,683
我们可以添加组件。

53
00:02:29,590 --> 00:02:33,670
如此复数。这现在需要一个对象。

54
00:02:33,670 --> 00:02:35,290
而在这个对象中，

55
00:02:35,290 --> 00:02:39,800
您现在可以定义键值码头，其中键

56
00:02:39,800 --> 00:02:42,150
识别不同的路由器视图，

57
00:02:42,150 --> 00:02:44,150
并且值是组件

58
00:02:44,150 --> 00:02:47,040
应该加载到这个路由器视图中。

59
00:02:47,040 --> 00:02:50,742
如果你给这些路由器视图起名字，现在就可以了，

60
00:02:50,742 --> 00:02:54,260
就像你可以给插槽命名一样。

61
00:02:54,260 --> 00:02:56,920
我们可以在页脚中给出这个路由器视图，

62
00:02:56,920 --> 00:02:59,843
页脚的名称，但名称取决于您。

63
00:03:00,720 --> 00:03:03,130
我们也可以给这个路由器视图一个名字，

64
00:03:03,130 --> 00:03:04,830
但就像我们有插槽一样，

65
00:03:04,830 --> 00:03:09,110
您可以拥有一个未命名的路由器视图

66
00:03:09,110 --> 00:03:10,250
在同一水平上，

67
00:03:10,250 --> 00:03:12,403
这将是默认的路由器视图。

68
00:03:13,900 --> 00:03:17,100
所以现在你回到了我们的路线配置。

69
00:03:17,100 --> 00:03:19,760
我们可以添加一键关闭默认值

70
00:03:19,760 --> 00:03:22,930
指向这个未命名的路由器视图

71
00:03:22,930 --> 00:03:26,120
并设置应该进入该默认值的组件，

72
00:03:26,120 --> 00:03:27,920
在这种情况下是 TeamsList。

73
00:03:29,122 --> 00:03:32,260
但是我们也可以在这里添加一个页脚键

74
00:03:32,260 --> 00:03:35,840
指向名为页脚的路由器视图

75
00:03:35,840 --> 00:03:37,210
并设置组件

76
00:03:37,210 --> 00:03:39,980
应该在这个路由器视图中呈现。

77
00:03:39,980 --> 00:03:43,010
这是我尚未导入的组件。

78
00:03:43,010 --> 00:03:46,420
那将是团队的页脚组件，

79
00:03:46,420 --> 00:03:47,253
这是进口的

80
00:03:47,253 --> 00:03:51,863
来自组件/团队/TeamsFooter.vue。

81
00:03:52,720 --> 00:03:54,710
当我们已经在进口东西时，

82
00:03:54,710 --> 00:03:57,663
我也可以导入 UsersFooter

83
00:03:57,663 --> 00:03:59,563
来自组件/用户/UsersFooter.vue。

84
00:04:03,690 --> 00:04:05,550
现在是球队的页脚，

85
00:04:05,550 --> 00:04:08,690
我想将其设置为页脚出口的值

86
00:04:08,690 --> 00:04:10,113
在我这里的组件上。

87
00:04:11,550 --> 00:04:12,900
现在我不需要改变任何东西

88
00:04:12,900 --> 00:04:15,140
关于这里的嵌套子路由。

89
00:04:15,140 --> 00:04:17,800
在这里我仍然只想加载一个组件，

90
00:04:17,800 --> 00:04:20,320
但是父母在这里有不止一个组件，

91
00:04:20,320 --> 00:04:21,283
如您所知。

92
00:04:22,700 --> 00:04:25,550
现在我们也可以在这里为用户做同样的事情。

93
00:04:25,550 --> 00:04:29,200
在用户路由上，而不是使用组件，

94
00:04:29,200 --> 00:04:31,410
我们可以使用组件，

95
00:04:31,410 --> 00:04:34,000
将默认设置为用户列表

96
00:04:34,000 --> 00:04:38,723
和 UserFooter 的页脚出口，UsersFooter，对不起。

97
00:04:39,890 --> 00:04:42,660
所以现在我们使用这些命名的路由器视图

98
00:04:42,660 --> 00:04:45,200
对于用户和团队。

99
00:04:45,200 --> 00:04:48,080
对于所有这样的路线，抓住所有路线

100
00:04:48,080 --> 00:04:49,960
我们只有一个组件，

101
00:04:49,960 --> 00:04:51,350
那一个组件

102
00:04:51,350 --> 00:04:55,070
将始终进入默认的未命名路由器视图。

103
00:04:55,070 --> 00:04:57,060
所以我们这里不需要设置组件

104
00:04:57,060 --> 00:05:00,323
如果我们只有一个路由器视图，我们想在这里支持。

105
00:05:01,370 --> 00:05:03,470
有了这个，我们可以拯救谁。

106
00:05:03,470 --> 00:05:06,840
现在你会看到我们的团队项目，我们的团队，

107
00:05:06,840 --> 00:05:09,720
然后是用户的团队页脚。

108
00:05:09,720 --> 00:05:13,840
当然，您会看到用户页脚和用户。

109
00:05:13,840 --> 00:05:17,470
如果我选择一个团队，我们会看到团队成员

110
00:05:17,470 --> 00:05:18,730
然后还是

111
00:05:18,730 --> 00:05:21,920
那里有两个不同的团队组成部分。

112
00:05:21,920 --> 00:05:24,630
如果我输入任何无效的内容，

113
00:05:24,630 --> 00:05:27,260
我们仍然只看到一条未找到的路线，

114
00:05:27,260 --> 00:05:28,360
因为正如我所说，

115
00:05:28,360 --> 00:05:32,563
然后进入默认的未命名路由器视图。

116
00:05:33,570 --> 00:05:36,050
因此命名的路由器视图可能会有所帮助

117
00:05:36,050 --> 00:05:40,210
允许您构建更复杂的用户界面

118
00:05:40,210 --> 00:05:42,710
您要加载多个组件的位置

119
00:05:42,710 --> 00:05:44,150
对于给定的路径。

120
00:05:44,150 --> 00:05:47,880
例如，不仅要有灵活的主页，

121
00:05:47,880 --> 00:05:49,963
但所有灵活的页脚。