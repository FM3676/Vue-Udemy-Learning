1
00:00:02,029 --> 00:00:03,320
这是另一个功能

2
00:00:03,320 --> 00:00:05,200
这可能很有用，

3
00:00:05,200 --> 00:00:07,740
特别是与

4
00:00:07,740 --> 00:00:09,610
导航卫士。

5
00:00:09,610 --> 00:00:12,770
那将是一个路由元字段。

6
00:00:12,770 --> 00:00:15,450
在您的路线配置中的任何给定路线上，

7
00:00:15,450 --> 00:00:17,320
你可以添加一个额外的属性，

8
00:00:17,320 --> 00:00:19,650
元属性。

9
00:00:19,650 --> 00:00:22,210
Meta 接受任何类型的值，

10
00:00:22,210 --> 00:00:24,090
例如一个物体，

11
00:00:24,090 --> 00:00:26,570
您可以在其中存储任何类型的值。

12
00:00:26,570 --> 00:00:27,693
例如，

13
00:00:28,573 --> 00:00:31,870
需要验证设置为真，

14
00:00:31,870 --> 00:00:34,100
但这完全取决于你。

15
00:00:34,100 --> 00:00:35,990
为什么这会有用？

16
00:00:35,990 --> 00:00:39,360
嗯，你可以在所有地方访问这个元字段

17
00:00:39,360 --> 00:00:40,970
路由对象在哪里，

18
00:00:40,970 --> 00:00:44,040
美元符号路由对象可用。

19
00:00:44,040 --> 00:00:46,130
这就是组件内部的情况

20
00:00:46,130 --> 00:00:48,500
这样你就可以传递数据

21
00:00:48,500 --> 00:00:51,480
到为此路线加载的组件中，

22
00:00:51,480 --> 00:00:54,950
但您也可以在导航守卫中使用它

23
00:00:54,950 --> 00:00:57,110
因为在那里你也可以访问

24
00:00:57,110 --> 00:00:59,860
往返路线对象。

25
00:00:59,860 --> 00:01:02,050
然后你可以例如添加元

26
00:01:02,050 --> 00:01:04,620
像这样表示这条路线

27
00:01:04,620 --> 00:01:06,630
需要认证，

28
00:01:06,630 --> 00:01:10,160
然后去 Global beforeEach 路线

29
00:01:10,160 --> 00:01:13,310
并检查你要去的路线

30
00:01:13,310 --> 00:01:17,653
在它的元字段需要验证，如果这是真的。

31
00:01:18,610 --> 00:01:20,300
然后在这里你可以检查是否

32
00:01:20,300 --> 00:01:21,920
用户已通过身份验证。

33
00:01:21,920 --> 00:01:24,270
目前我只记录需要身份验证！，

34
00:01:24,270 --> 00:01:25,560
但在这里你可以检查

35
00:01:25,560 --> 00:01:27,750
用户是否经过身份验证

36
00:01:27,750 --> 00:01:30,700
如果是这样，你确认这一点

37
00:01:30,700 --> 00:01:33,050
否则你否认这一点。

38
00:01:33,050 --> 00:01:36,260
有了它，您可以使用全局导航守卫

39
00:01:36,260 --> 00:01:38,340
为每条路线运行，然后

40
00:01:38,340 --> 00:01:41,520
仍然根据元数据做不同的事情

41
00:01:41,520 --> 00:01:43,563
附在不同的路线上。

42
00:01:44,460 --> 00:01:46,980
这也是

43
00:01:46,980 --> 00:01:49,210
可以用来优雅地设置

44
00:01:49,210 --> 00:01:51,620
一个全球导航卫士，仍然

45
00:01:51,620 --> 00:01:54,510
基于做不同的事情

46
00:01:54,510 --> 00:01:57,193
您附加到路线的元数据。

47
00:01:58,120 --> 00:02:00,430
这是一个先进的概念，你一定会

48
00:02:00,430 --> 00:02:02,900
不是一直需要它，而是拥有

49
00:02:02,900 --> 00:02:05,170
您可以传递的这些额外数据

50
00:02:05,170 --> 00:02:07,900
进入一个组件并进入这个路由对象

51
00:02:07,900 --> 00:02:10,830
更重要的是，当某个路由匹配时，

52
00:02:10,830 --> 00:02:12,823
有时会很有用。