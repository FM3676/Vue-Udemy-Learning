1
00:00:01,752 --> 00:00:05,587
这种描述位置的对象形式

2
00:00:05,587 --> 00:00:07,850
或链接的目的地

3
00:00:07,850 --> 00:00:09,840
也可以用于其他事情，

4
00:00:09,840 --> 00:00:13,310
不仅仅是为了使用名称和建立链接

5
00:00:13,310 --> 00:00:15,796
以一种更方便的方式，而不是构建一个长字符串。

6
00:00:15,796 --> 00:00:18,484
但也可能添加额外的信息

7
00:00:18,484 --> 00:00:19,687
你可能需要的。

8
00:00:19,687 --> 00:00:23,890
假设您要使用查询参数。

9
00:00:23,890 --> 00:00:25,550
如果你不确定那是什么，

10
00:00:25,550 --> 00:00:28,930
查询参数是您在某些路线中看到的东西

11
00:00:28,930 --> 00:00:32,040
以及问号后面的一些网址。

12
00:00:32,040 --> 00:00:34,404
比如，排序等于升序

13
00:00:34,404 --> 00:00:37,440
查询参数基本上是可选的

14
00:00:37,440 --> 00:00:40,990
不需要查找的路由参数

15
00:00:40,990 --> 00:00:43,386
并加载一个组件，但可以使用

16
00:00:43,386 --> 00:00:47,191
然后将额外的信息传递给该组件。

17
00:00:47,191 --> 00:00:49,666
它不是必须使用的，但它可能很有用

18
00:00:49,666 --> 00:00:52,469
在某些应用程序和某些页面中。

19
00:00:52,469 --> 00:00:56,030
现在您可以添加这样的查询参数。

20
00:00:56,030 --> 00:00:58,570
如果您手动构建链接

21
00:00:58,570 --> 00:01:01,660
只需将其添加到您的字符串中

22
00:01:01,660 --> 00:01:04,126
你正在建造的，像这样。

23
00:01:04,126 --> 00:01:07,766
但是如果你使用这种对象形式，那就更方便了。

24
00:01:07,766 --> 00:01:10,281
您可以添加查询属性。

25
00:01:10,281 --> 00:01:14,059
此配置对象的名称和父项旁边

26
00:01:14,059 --> 00:01:18,651
然后查询接受一个嵌套对象，就像父母所做的那样。

27
00:01:18,651 --> 00:01:21,650
在这里您可以添加任何查询参数

28
00:01:21,650 --> 00:01:25,050
您可能想要传递到要加载的页面，

29
00:01:25,050 --> 00:01:30,050
比如排序值为 asc 的字符串表示 asc。

30
00:01:30,502 --> 00:01:33,699
我将重新格式化以使其更易于阅读。

31
00:01:33,699 --> 00:01:37,010
你可以添加任何你想要的查询参数

32
00:01:37,010 --> 00:01:40,041
当然还有你的页面，你的组件支持。

33
00:01:40,041 --> 00:01:44,930
这些查询参数未在路由配置中定义，

34
00:01:44,930 --> 00:01:46,790
你不需要在这里添加任何东西

35
00:01:46,790 --> 00:01:49,860
因为它们本质上是可选的。

36
00:01:49,860 --> 00:01:53,110
但是现在如果我保存并重新加载。

37
00:01:53,110 --> 00:01:56,270
如果我单击查看成员，您会看到该查询参数

38
00:01:56,270 --> 00:01:59,730
会自动添加到 URL。

39
00:01:59,730 --> 00:02:01,855
现在我们没有对这里的参数做任何事情，

40
00:02:01,855 --> 00:02:03,682
但我们正在添加它。

41
00:02:03,682 --> 00:02:07,810
如果您想在组件中使用它

42
00:02:07,810 --> 00:02:10,630
通过该查询参数加载。

43
00:02:10,630 --> 00:02:13,679
所以在这种情况下，团队成员，你可以提取它

44
00:02:13,679 --> 00:02:16,793
在那里你可以访问你的查询参数。

45
00:02:17,700 --> 00:02:22,173
如果我通过此路由点查询进行控制台记录。

46
00:02:23,400 --> 00:02:25,940
查询属性保存信息

47
00:02:25,940 --> 00:02:27,880
关于您的查询参数。

48
00:02:27,880 --> 00:02:31,960
所以如果我保存它并重新加载并打开控制台，

49
00:02:31,960 --> 00:02:33,630
我们看到我们在这里得到了一个对象，

50
00:02:33,630 --> 00:02:36,813
其中有这个排序键和升序的值。

51
00:02:36,813 --> 00:02:40,228
这就是您访问查询参数的方式，

52
00:02:40,228 --> 00:02:44,203
您可能正在通过路由传递给组件。

53
00:02:46,550 --> 00:02:48,700
作为旁注查询参数

54
00:02:48,700 --> 00:02:50,700
不作为道具提供。

55
00:02:50,700 --> 00:02:52,594
如果我在这里记录这个点排序

56
00:02:52,594 --> 00:02:54,950
希望你得到一个剑道具。

57
00:02:54,950 --> 00:02:57,548
因为我们有一个源查询参数。

58
00:02:57,548 --> 00:02:59,100
你会看到这个值

59
00:02:59,100 --> 00:03:02,076
我到这里实际上是未定义的。

60
00:03:02,076 --> 00:03:05,030
它是未定义的，因为查询参数

61
00:03:05,030 --> 00:03:08,335
只能通过美元符号路线访问。

62
00:03:08,335 --> 00:03:10,790
不过应该问题不大

63
00:03:10,790 --> 00:03:14,060
因为无论如何查询参数都是可选的。

64
00:03:14,060 --> 00:03:17,921
所以如果你曾经以不同的方式使用你的组件，

65
00:03:17,921 --> 00:03:20,599
所以不是通过路由而是通过嵌入它

66
00:03:20,599 --> 00:03:22,532
在一些组件模板中。67
00:03:22,532 --> 00:03:25,365
您可能根本无法访问查询参数，

68
00:03:25,365 --> 00:03:27,281
但因为它是可选的，

69
00:03:27,281 --> 00:03:30,020
它也可能不会添加到 URL 中。

70
00:03:31,520 --> 00:03:33,930
您的代码应该准备好处理

71
00:03:33,930 --> 00:03:37,899
无论如何，此查询参数不存在。

72
00:03:37,899 --> 00:03:41,130
但这就是这里的查询参数，

73
00:03:41,130 --> 00:03:43,610
我想提出来，因为它很重要

74
00:03:43,610 --> 00:03:45,457
也能够与这些人一起工作。

75
00:03:45,457 --> 00:03:47,950
重要的是要知道视图路由器

76
00:03:47,950 --> 00:03:49,943
使添加和提取它们变得容易。

77
00:03:49,943 --> 00:03:53,648
这个虚拟应用程序不需要它们，

78
00:03:53,648 --> 00:03:57,493
但是您当然可能需要它们用于我们的应用程序。