1
00:00:02,090 --> 00:00:04,900
那么我们现在如何注册路由呢？

2
00:00:04,900 --> 00:00:07,070
当我们得到这个路由数组时，

3
00:00:07,070 --> 00:00:12,070
在这里我们现在传递 JavaScript 对象的导师数组，

4
00:00:12,320 --> 00:00:15,840
每个物体代表一条路线，

5
00:00:15,840 --> 00:00:18,100
并配置该路线。

6
00:00:18,100 --> 00:00:20,515
在这里，一个非常重要的选择，

7
00:00:20,515 --> 00:00:22,770
我们需要在每条路线上设置，

8
00:00:22,770 --> 00:00:25,120
是路径选项。

9
00:00:25,120 --> 00:00:28,880
这告诉路由器是哪条路径的一部分

10
00:00:28,880 --> 00:00:31,350
域后的 URL，

11
00:00:31,350 --> 00:00:33,580
应该加载某个组件。

12
00:00:33,580 --> 00:00:34,413
例如，

13
00:00:34,413 --> 00:00:36,210
我们要加载某个组件

14
00:00:36,210 --> 00:00:38,540
对于斜线队，

15
00:00:38,540 --> 00:00:43,280
这样如果我们的 domain.com/teams 已加载，

16
00:00:43,280 --> 00:00:45,790
加载了某个组件。

17
00:00:45,790 --> 00:00:48,000
这是我们要在这里设置的第二个选项。

18
00:00:48,000 --> 00:00:49,530
组件选项，

19
00:00:49,530 --> 00:00:52,790
在这里，我们然后定义应该加载哪些组件，

20
00:00:52,790 --> 00:00:56,990
当用户访问斜线团队时，由视图路由器。

21
00:00:56,990 --> 00:01:01,270
在我的情况下，这将是团队的列表组件。

22
00:01:01,270 --> 00:01:04,540
目前，我在这里加载团队的列表组件，

23
00:01:04,540 --> 00:01:08,530
在带有动态组件的应用程序视图中。

24
00:01:08,530 --> 00:01:10,370
我有我的导航，

25
00:01:10,370 --> 00:01:12,610
它发出一个设置页面事件，

26
00:01:12,610 --> 00:01:14,740
当两个按钮中的任何一个按钮时会发生这种情况

27
00:01:14,740 --> 00:01:16,080
在那里被点击。

28
00:01:16,080 --> 00:01:19,600
然后在将页面设置为活动页面时，

29
00:01:19,600 --> 00:01:22,830
数据属性更改为团队列表

30
00:01:22,830 --> 00:01:25,650
或到用户列表。

31
00:01:25,650 --> 00:01:27,960
这是我在这里的两个组成部分，

32
00:01:27,960 --> 00:01:28,827
团队列表和用户列表，

33
00:01:28,827 --> 00:01:29,660
在这里注册的两个组件，

34
00:01:29,660 --> 00:01:34,170
在我的应用程序组件中。

35
00:01:34,170 --> 00:01:37,940
这就是这两个组件之间的简单切换。

36
00:01:37,940 --> 00:01:38,812
这是一种方法，但它不会更新

37
00:01:38,812 --> 00:01:43,812
网址，它不可共享，

38
00:01:44,320 --> 00:01:46,150
但它是团队的列表组件，

39
00:01:46,150 --> 00:01:49,030
我想在这里为这条路线加载。

40
00:01:49,030 --> 00:01:52,290
所以，在这个主 JS 文件中，

41
00:01:52,290 --> 00:01:54,480
我们现在要导入团队的列表，

42
00:01:54,480 --> 00:01:59,230
从点斜线组件，团队列表点视图，

43
00:02:01,170 --> 00:02:05,820
然后在这里设置组件等于团队的列表告诉

44
00:02:05,820 --> 00:02:08,669
它是团队的列表组件的视图路由器。

45
00:02:08,669 --> 00:02:11,763
如果我们访问斜线团队，应该加载它。

46
00:02:13,230 --> 00:02:16,490
这不是我们想要加载的唯一路线。

47
00:02:16,490 --> 00:02:21,490
相反，我将在此处复制此配置，

48
00:02:23,000 --> 00:02:26,670
还注册斜杠用户路线。

49
00:02:26,670 --> 00:02:30,160
在这里我们要加载用户列表组件。

50
00:02:30,160 --> 00:02:34,170
所以我们现在也导入用户列表，

51
00:02:34,170 --> 00:02:39,170
从组件，用户列表点视图，

52
00:02:40,620 --> 00:02:44,423
并为此斜杠用户路线加载它。

53
00:02:45,560 --> 00:02:48,250
现在我们注册了这两条路线。

54
00:02:48,250 --> 00:02:50,030
现在路由配置好了，

55
00:02:50,030 --> 00:02:52,870
但是要完成这项工作，还缺少一些东西。

56
00:02:52,870 --> 00:02:54,430
就目前而言，

57
00:02:54,430 --> 00:02:57,540
路由器是否只存储在这个路由器常量中，

58
00:02:57,540 --> 00:03:00,270
但是我们没有做任何事情。

59
00:03:00,270 --> 00:03:03,700
我们需要让我们的视图应用程序知道这个路由器，

60
00:03:03,700 --> 00:03:05,350
它拥有这些路线。

61
00:03:05,350 --> 00:03:07,600
我们通过访问我们的应用程序来做到这一点，

62
00:03:07,600 --> 00:03:11,200
在这个应用程序上，我们必须使用方法。

63
00:03:11,200 --> 00:03:12,640
这是一个内置的方法，

64
00:03:12,640 --> 00:03:15,510
这最终允许我们连接我们的视图应用程序，

65
00:03:15,510 --> 00:03:17,570
使用第三方软件包，

66
00:03:17,570 --> 00:03:19,700
具有其他一些功能。

67
00:03:19,700 --> 00:03:23,570
而这里我们只是简单的通过路由器来使用。

68
00:03:23,570 --> 00:03:26,810
这使得视图应用程序知道这个路由器。

69
00:03:26,810 --> 00:03:28,480
现在这是第一步，

70
00:03:28,480 --> 00:03:31,200
但仍然缺少一件重要的东西。

71
00:03:31,200 --> 00:03:34,930
视图应用程序现在知道这些路线，

72
00:03:34,930 --> 00:03:37,890
多亏了视图路由器，理论上，

73
00:03:37,890 --> 00:03:39,730
视图路由器看到，

74
00:03:39,730 --> 00:03:42,810
如果我们访问我们的域名斜线团队，

75
00:03:42,810 --> 00:03:45,333
我们要加载这个组件，

76
00:03:46,240 --> 00:03:49,470
但它缺少一个重要的信息。

77
00:03:49,470 --> 00:03:50,334
它不知道在哪里加载

78
00:03:50,334 --> 00:03:53,400
这个组件到。

79
00:03:53,400 --> 00:03:56,280
目前我们根本没有给路由器任何提示，

80
00:03:56,280 --> 00:03:58,340
组件应该在哪里渲染，

81
00:03:58,340 --> 00:04:01,670
谢天谢地，它不只是采用组件，

82
00:04:01,670 --> 00:04:04,580
并用它替换屏幕上的所有内容。

83
00:04:04,580 --> 00:04:07,070
相反，我们需要使用一个特殊的组件，

84
00:04:07,070 --> 00:04:10,350
让视图路由器知道在哪里渲染它。

85
00:04:10,350 --> 00:04:13,010
我们可以替换这个动态组件

86
00:04:13,010 --> 00:04:15,340
有了这个新的特殊组件，

87
00:04:15,340 --> 00:04:19,290
因为无论如何我们都不会使用这种动态方法。

88
00:04:19,290 --> 00:04:21,730
因此，在应用程序视图中，

89
00:04:21,730 --> 00:04:24,050
假设不是这个主要元素，

90
00:04:24,050 --> 00:04:27,320
我想渲染选定的路由组件。

91
00:04:27,320 --> 00:04:29,730
为了让视图路由器知道这一点，

92
00:04:29,730 --> 00:04:31,440
我们可以使用多个组件，

93
00:04:31,440 --> 00:04:34,470
现在是内置的，我现在说，

94
00:04:34,470 --> 00:04:36,470
因为它内置在视图路由器中，

95
00:04:36,470 --> 00:04:38,790
那里只有一个 wadeble，因为我们正在使用

96
00:04:38,790 --> 00:04:40,710
此视图应用程序中的路由器。

97
00:04:40,710 --> 00:04:41,640
但既然我们这样做了，

98
00:04:41,640 --> 00:04:43,670
我们现在有了一个新的内置组件，

99
00:04:43,670 --> 00:04:46,193
这就是路由器视图组件。

100
00:04:47,040 --> 00:04:50,570
这就是占位符告诉视图路由器的结尾

101
00:04:50,570 --> 00:04:54,430
这是选择它的地方。

102
00:04:54,430 --> 00:04:58,133
路由到组件，应该加载。

103
00:04:59,210 --> 00:05:01,100
顺便说一句，我们现在可以全部摆脱

104
00:05:01,100 --> 00:05:03,420
这里的这两个进口，团队的名单，

105
00:05:03,420 --> 00:05:07,240
和应用程序视图中的用户列表且未注册

106
00:05:07,240 --> 00:05:08,900
它们不再作为组件，

107
00:05:08,900 --> 00:05:10,410
因为我们不需要这样做。

108
00:05:10,410 --> 00:05:13,130
我们没有在模板中使用这些组件，

109
00:05:13,130 --> 00:05:14,960
通过使用敢选择器。

110
00:05:14,960 --> 00:05:18,690
相反，我们在这里通过路由器选择它们。

111
00:05:18,690 --> 00:05:21,790
如果你这样做，如果你通过路由加载一个组件，

112
00:05:21,790 --> 00:05:24,350
你不需要注册这个组件。

113
00:05:24,350 --> 00:05:27,050
此外，作为全局或本地组件，

114
00:05:27,050 --> 00:05:28,423
你不需要这样做。

115
00:05:29,440 --> 00:05:31,880
因此，我们现在让路由器知道，

116
00:05:31,880 --> 00:05:33,250
在哪里加载。

117
00:05:33,250 --> 00:05:37,490
因此我们可以保存所有内容并重新加载，

118
00:05:37,490 --> 00:05:39,910
我们不会在屏幕上看到任何东西，

119
00:05:39,910 --> 00:05:41,490
因为此刻我们只是

120
00:05:41,490 --> 00:05:44,490
在我们的域斜线没有。

121
00:05:44,490 --> 00:05:48,460
现在我们注册的路线是斜线队，

122
00:05:48,460 --> 00:05:50,070
并削减用户。

123
00:05:50,070 --> 00:05:52,920
所以让我们试试这些，让我们输入，

124
00:05:52,920 --> 00:05:55,230
本地主机，80，80斜线队，

125
00:05:55,230 --> 00:05:57,270
我们看到了团队的页面。

126
00:05:57,270 --> 00:06:01,140
让我们试试用户，我们看到用户页面，

127
00:06:01,140 --> 00:06:03,970
现在我们有了可共享的链接，

128
00:06:03,970 --> 00:06:07,270
但当然我们的导航不再起作用了。

129
00:06:07,270 --> 00:06:09,490
债务绝对不是我们想要的。

130
00:06:09,490 --> 00:06:11,870
我们要确保我们仍然可以导航

131
00:06:11,870 --> 00:06:13,170
从页面内部，

132
00:06:13,170 --> 00:06:15,500
而且我们不必输入差异

133
00:06:15,500 --> 00:06:19,870
你 ELLs 手动，没有人使用这样的网页。

134
00:06:19,870 --> 00:06:23,150
那么让我们看看我们如何使用路线导航。