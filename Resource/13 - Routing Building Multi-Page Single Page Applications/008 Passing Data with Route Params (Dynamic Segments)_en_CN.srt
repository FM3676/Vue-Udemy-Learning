1
00:00:02,140 --> 00:00:04,860
所以现在添加了不同形式的导航，

2
00:00:04,860 --> 00:00:06,890
是时候探索更多的东西了

3
00:00:06,890 --> 00:00:10,200
我们可以在这里配置我们的路由配置。

4
00:00:10,200 --> 00:00:12,700
还有一个特别重要的特点，

5
00:00:12,700 --> 00:00:14,510
您在许多应用程序中都需要它，

6
00:00:14,510 --> 00:00:16,400
你要建造的。

7
00:00:16,400 --> 00:00:19,600
我们在这里得到这个团队成员组件，对吧？

8
00:00:19,600 --> 00:00:22,520
在这个团队成员组件中，

9
00:00:22,520 --> 00:00:24,490
我想渲染不同的成员

10
00:00:24,490 --> 00:00:27,020
我们选择的团队

11
00:00:27,020 --> 00:00:29,310
现在，这是一种虚拟组件，

12
00:00:29,310 --> 00:00:31,040
我们甚至没有使用。

13
00:00:31,040 --> 00:00:33,310
它有一些内置的虚拟数据

14
00:00:33,310 --> 00:00:36,240
我们不会在任何地方渲染这个组件。

15
00:00:36,240 --> 00:00:37,700
现在一个常见的场景，

16
00:00:37,700 --> 00:00:39,830
您在许多应用程序中拥有的是

17
00:00:39,830 --> 00:00:42,120
你可能在这里有另一条路线

18
00:00:43,430 --> 00:00:46,300
对于 /teams 的路径。

19
00:00:46,300 --> 00:00:48,450
但现在不只是那条路，

20
00:00:48,450 --> 00:00:50,110
我们已经有一条路线

21
00:00:50,110 --> 00:00:52,420
每条路径应该只有一条路径

22
00:00:52,420 --> 00:00:55,810
相反，我们使用 /teams/

23
00:00:55,810 --> 00:00:59,143
现在我们想在这里有一些动态ID。

24
00:01:00,500 --> 00:01:05,330
我们是否支持像 T1 团队这样的流行音乐，

25
00:01:05,330 --> 00:01:08,520
如果 T1 是团队 ID 或 T2

26
00:01:08,520 --> 00:01:12,700
我们会用不同的数据加载同一个组件

27
00:01:12,700 --> 00:01:14,830
对于这些不同的团队。

28
00:01:14,830 --> 00:01:19,830
所以我们需要一个带有所谓路由参数的动态路由，

29
00:01:20,700 --> 00:01:23,680
这是视图路由器支持的功能。

30
00:01:23,680 --> 00:01:28,470
您可以通过添加冒号来定义动态路径段，

31
00:01:28,470 --> 00:01:30,230
然后是您选择的任何名称。

32
00:01:30,230 --> 00:01:32,690
例如，团队 ID。

33
00:01:32,690 --> 00:01:35,770
现在这意味着这条路线将变得活跃

34
00:01:35,770 --> 00:01:40,770
如果用户输入 /teams 然后之后的任何内容，

35
00:01:41,490 --> 00:01:44,060
因此顺序很重要，

36
00:01:44,060 --> 00:01:48,930
如果您在这里/teams/new 有另一条路线，

37
00:01:48,930 --> 00:01:52,700
所以不是动态片段，而只是新的文本，

38
00:01:52,700 --> 00:01:56,760
你应该把它放在第一位，否则这条路在这里

39
00:01:56,760 --> 00:01:59,130
这条路线也将匹配这条路线，

40
00:01:59,130​​ --> 00:02:02,740
因为 new 将被解释为团队 ID。

41
00:02:02,740 --> 00:02:04,560
现在我们不需要这里的新路线。

42
00:02:04,560 --> 00:02:07,030
我只是想让你意识到这一点

43
00:02:07,030 --> 00:02:10,139
您知道如何解析这些不同的路由

44
00:02:10,139 --> 00:02:12,030
并优先考虑。

45
00:02:12,030 --> 00:02:13,690
不过这里我们不需要这条新路线，

46
00:02:13,690 --> 00:02:16,850
但我们想在这里设置这条动态路线

47
00:02:16,850 --> 00:02:19,600
使用动态路由参数。

48
00:02:19,600 --> 00:02:22,970
所以在这里我想加载一个组件和组件

49
00:02:22,970 --> 00:02:25,090
应该加载的是一个组件

50
00:02:25,090 --> 00:02:29,360
我们需要导入团队成员组件

51
00:02:29,360 --> 00:02:34,360
来自 /components/teams/teamMembers.Vue

52
00:02:36,310 --> 00:02:39,563
那就是应该在这里加载的组件。

53
00:02:41,580 --> 00:02:44,580
有了这个，如果我们现在保存这个，

54
00:02:44,580 --> 00:02:49,580
我们可以进入 teams/T1 并重新加载这个组件

55
00:02:49,950 --> 00:02:52,630
这里的任何东西都一样。

56
00:02:52,630 --> 00:02:53,990
它总是相同的组件，

57
00:02:53,990 --> 00:02:58,310
因为在 teams/ 之后的任何内容都会被解释

58
00:02:58,310 --> 00:03:01,373
作为此动态段的值。

59
00:03:02,350 --> 00:03:03,183
现在此刻，

60
00:03:03,183 --> 00:03:06,230
它始终是具有相同虚拟数据的相同组件，

61
00:03:06,230 --> 00:03:10,060
但现在我们可以改变这一点，因为我们将获得访问权

62
00:03:10,060 --> 00:03:11,890
到这个具体的值，

63
00:03:11,890 --> 00:03:14,890
用于此路由参数

64
00:03:14,890 --> 00:03:16,500
用于此处的置换器。

65
00:03:16,500 --> 00:03:18,850
我们可以获取具体值

66
00:03:18,850 --> 00:03:22,180
用户在组件内部输入

67
00:03:22,180 --> 00:03:23,380
正在加载。

68
00:03:23,380 --> 00:03:25,593
所以在团队成员内部，

69
00:03:26,600 --> 00:03:30,170
我不想在这里使用我的虚拟团队数据。

70
00:03:30,170 --> 00:03:33,160
相反，我们确实有虚拟团队数据

71
00:03:33,160 --> 00:03:35,930
让所有团队都能找到应用视图。

72
00:03:35,930 --> 00:03:40,170
在这里，我们有团队，也有用户。

73
00:03:40,170 --> 00:03:43,570
对于每个团队，我们都有一份成员名单。

74
00:03:43,570 --> 00:03:45,570
现在，我的想法很简单。

75
00:03:45,570 --> 00:03:49,680
当这些免费支持的团队 ID 之一

76
00:03:49,680 --> 00:03:51,350
正在这里输入

77
00:03:52,500 --> 00:03:57,380
在团队之后的 URL 中作为此路由参数的值，

78
00:03:57,380 --> 00:03:59,810
我想加载合适的团队，

79
00:03:59,810 --> 00:04:02,520
找出我们在那个团队中有哪些成员

80
00:04:02,520 --> 00:04:05,980
并加载适当的用户。

81
00:04:05,980 --> 00:04:08,300
现在我们已经在提供团队

82
00:04:08,300 --> 00:04:10,520
和应用程序视图中的用户。

83
00:04:10,520 --> 00:04:13,900
所以我们可以在团队成员中注入两者

84
00:04:13,900 --> 00:04:15,550
我们需要这样做。

85
00:04:15,550 --> 00:04:17,563
这样我们就可以访问该数据。

86
00:04:18,410 --> 00:04:23,410
所以在这里我将添加注入和注入用户和团队。

87
00:04:26,270 --> 00:04:29,570
现在我们只需要一种访问方式

88
00:04:29,570 --> 00:04:32,880
到这个动态段，用户输入。

89
00:04:32,880 --> 00:04:35,450
所以对于输入的具体值

90
00:04:35,450 --> 00:04:37,780
对于这个路由参数，

91
00:04:37,780 --> 00:04:42,630
我们可以像在创建的生命周期钩子中那样做。

92
00:04:42,630 --> 00:04:45,270
组件创建时调用

93
00:04:45,270 --> 00:04:47,040
在它显示在屏幕上之前。

94
00:04:47,040 --> 00:04:49,770
但一旦所有数据都可用，

95
00:04:49,770 --> 00:04:52,270
所以在这里创建，

96
00:04:52,270 --> 00:04:55,030
我们现在可以访问注入数据，

97
00:04:55,030 --> 00:04:59,690
而且，这对我们的路由数据来说也是一件好事。

98
00:04:59,690 --> 00:05:03,160
为此，我们获得了另一个特殊属性，

99
00:05:03,160 --> 00:05:04,530
这是可用的。

100
00:05:04,530 --> 00:05:08,900
我们看到了 $router，它使我们能够访问整个路由器。

101
00:05:08,900 --> 00:05:11,220
我们也有 $route。

102
00:05:11,220 --> 00:05:13,083
所以最后没有 r，

103
00:05:14,100 --> 00:05:17,380
路线在此组件中可用

104
00:05:17,380 --> 00:05:20,350
因为这个组件是通过路由器加载的，

105
00:05:20,350 --> 00:05:22,880
然后路由给了我们访问权限

106
00:05:22,880 --> 00:05:25,210
到各种信息。

107
00:05:25,210 --> 00:05:28,130
例如，到负责的路径

108
00:05:28,130 --> 00:05:29,550
用于加载此页面，

109
00:05:29,550 --> 00:05:33,420
在这种情况下，类似于 /teams

110
00:05:33,420 --> 00:05:35,053
然后是具体的团队ID。

111
00:05:36,070 --> 00:05:39,490
所以我们可以从那个路径解析团队ID，

112
00:05:39,490 --> 00:05:41,193
但我们甚至不必这样做。

113
00:05:42,330 --> 00:05:46,460
我们还有另一个可用的属性，即父级的属性。

114
00:05:46,460 --> 00:05:49,160
这包含所有路由参数

115
00:05:49,160 --> 00:05:52,200
用于访问此页面。

116
00:05:52,200 --> 00:05:56,010
在这种情况下，我们有一个用于该页面的路由参数。

117
00:05:56,010 --> 00:05:59,820
此处以冒号开头的所有内容都是路由参数。

118
00:05:59,820 --> 00:06:02,760
而你在这里选择的名字就是名字

119
00:06:02,760 --> 00:06:06,110
通过它您可以提取用户提供的值。

120
00:06:06,110 --> 00:06:08,310
所以在我的例子中，名字是teamId。

121
00:06:08,310 --> 00:06:09,870
因此，在团队成员中，

122
00:06:09,870 --> 00:06:11,763
我可以访问 params.teamId。

123
00:06:13,750 --> 00:06:16,940
如果您在此处的路由冲突中选择了不同的名称

124
00:06:16,940 --> 00:06:18,370
在结肠之后，

125
00:06:18,370 --> 00:06:20,893
您必须在这里使用相同的不同名称。

126
00:06:22,200 --> 00:06:23,033
因此，

127
00:06:23,033 --> 00:06:27,360
我们得到了我们的团队 ID，我将它存储在一个额外的常量中。

128
00:06:27,360 --> 00:06:31,130
我们现在可以使用团队 ID 来找到正确的团队

129
00:06:31,130 --> 00:06:33,420
在这注入队伍的阵法之中。

130
00:06:33,420 --> 00:06:37,470
所以在这里我得到了选定的团队，让我们说

131
00:06:37,470 --> 00:06:40,120
通过访问团队 this.teams。

132
00:06:40,120 --> 00:06:42,030
所以注入的团队排列，

133
00:06:42,030 --> 00:06:43,870
然后是他们定义的方法，

134
00:06:43,870 --> 00:06:45,860
这是一个内置的数组方法，

135
00:06:45,860 --> 00:06:49,253
它需要一个在每个数组元素上执行的函数，

136
00:06:50,190 --> 00:06:53,210
什么ich 获取当前正在运行的团队

137
00:06:53,210 --> 00:06:54,560
作为论据。

138
00:06:54,560 --> 00:06:56,680
它将适用于那里的所有团队

139
00:06:56,680 --> 00:06:58,550
并且应该返回 true

140
00:06:58,550 --> 00:07:00,330
如果这是我们正在寻找的团队。

141
00:07:00,330 --> 00:07:01,520
情况就是这样。

142
00:07:01,520 --> 00:07:05,480
如果团队 ID 等于我们到达这里的团队 ID。

143
00:07:05,480 --> 00:07:08,233
所以这有助于我们选择合适的团队。

144
00:07:09,290 --> 00:07:12,600
当然，我们可能输入了一个不存在的Id，

145
00:07:12,600 --> 00:07:14,760
但让我们暂时忽略这种情况。

146
00:07:14,760 --> 00:07:17,510
相反，一旦我们有了一个团队，

147
00:07:17,510 --> 00:07:19,820
找到里面的成员。

148
00:07:19,820 --> 00:07:22,180
现在为此，当然在每个团队中，

149
00:07:22,180 --> 00:07:23,890
我们有会员密钥，

150
00:07:23,890 --> 00:07:28,523
其中包含我们在用户中找到的成员的 ID。

151
00:07:30,290 --> 00:07:34,677
所以我们通过访问 selectedTeam.members 来获得我们的成员

152
00:07:36,070 --> 00:07:38,490
但现在我们想接触用户

153
00:07:38,490 --> 00:07:42,550
并找到这些成员的完整用户条目

154
00:07:42,550 --> 00:07:45,323
因为 members 只是一个充满 Id 的数组。

155
00:07:46,480 --> 00:07:48,960
为此，我将在这里编写一个简单的循环。

156
00:07:48,960 --> 00:07:51,740
我将在这里有我选定的成员，

157
00:07:51,740 --> 00:07:53,910
最初是一个空数组。

158
00:07:53,910 --> 00:07:58,550
然后我遍历所有成员

159
00:07:58,550 --> 00:08:02,703
我的成员数组，这是这个充满 Ids 的数组。

160
00:08:03,690 --> 00:08:07,220
然后它将与我的用户联系。

161
00:08:07,220 --> 00:08:09,080
所以要做一些检查用户的数组

162
00:08:09,080 --> 00:08:11,183
对于我得到的每个成员 ID。

163
00:08:13,260 --> 00:08:18,260
并找到用户ID等于member的用户。

164
00:08:18,870 --> 00:08:22,350
请记住，成员只是一个数字用户 ID

165
00:08:22,350 --> 00:08:25,903
因为我们在成员中有一堆用户ID。

166
00:08:29,430 --> 00:08:33,730
这就是我选择的用户，

167
00:08:33,730 --> 00:08:35,750
或至少一个选定的用户。

168
00:08:35,750 --> 00:08:39,490
所以我通过推添加了两个选定的成员

169
00:08:39,490 --> 00:08:44,490
它放到这个数组上，像这样。

170
00:08:45,740 --> 00:08:48,310
所以这会遍历所有成员 ID。

171
00:08:48,310 --> 00:08:49,890
我们得到了给定的团队。

172
00:08:49,890 --> 00:08:51,540
然后我们选择用户，

173
00:08:51,540 --> 00:08:53,790
每个用户 ID 的完整用户对象

174
00:08:53,790 --> 00:08:57,430
我们加入了我们的团队，然后我添加到选定的成员中。

175
00:08:57,430 --> 00:08:59,010
使选定的成员

176
00:08:59,010 --> 00:09:01,893
then 是一个充满完整用户对象的数组。

177
00:09:02,990 --> 00:09:04,280
好吧，那就是这样

178
00:09:04,280 --> 00:09:06,410
我想在这里存储一个数据属性

179
00:09:06,410 --> 00:09:08,060
因为我需要队名

180
00:09:08,060 --> 00:09:11,430
以及我的模板中的成员数据属性。

181
00:09:11,430 --> 00:09:13,180
因此，我们将在此处添加两者。

182
00:09:13,180 --> 00:09:15,090
团队名称最初是一个空数组

183
00:09:15,090 --> 00:09:16,530
我的意思是空字符串，

184
00:09:16,530 --> 00:09:19,320
和 members 是一个空数组。

185
00:09:19,320 --> 00:09:23,780
然后在这里创建，我设置了这个成员。

186
00:09:23,780 --> 00:09:27,667
所以我的数据属性等于我选择的成员

187
00:09:30,020 --> 00:09:30,853
我去那里。

188
00:09:30,853 --> 00:09:34,250
所以这个数组填充了具体的成员对象

189
00:09:34,250 --> 00:09:39,250
我将此团队名称设置为等于所选团队。

190
00:09:41,350 --> 00:09:44,750
然后在每个团队中，我们都有一个 name 属性。

191
00:09:44,750 --> 00:09:48,643
所以我可以在这里访问 .name 。

192
00:09:49,640 --> 00:09:51,820
有了这个，如果我们保存这个，

193
00:09:51,820 --> 00:09:55,350
如果我们输入类似 Teams T1 的内容，

194
00:09:55,350 --> 00:09:58,823
我什么也看不到，因为我在这里有一个错误。

195
00:09:59,980 --> 00:10:03,260
读取属性的种类，未定义的推送。

196
00:10:03,260 --> 00:10:06,920
是的，这不是这个 for 循环中选定的成员，

197
00:10:06,920 --> 00:10:08,390
这只是选定的成员

198
00:10:08,390 --> 00:10:12,210
因为这是一个局部常数，我的错。

199
00:10:12,210 --> 00:10:14,923
所以 selectedMembers.push 在这里是正确的。

200
00:10:16,500 --> 00:10:19,950
有了这个，如果你重新加载，这看起来会更好。

201
00:10:19,950 --> 00:10:22,550
现在我看到 Max Schwarz 和 Praveen Kumar

202
00:10:22,550 --> 00:10:26,420
对于 T1 团队 T2 我看到不同的成员

203
00:10:26,420 --> 00:10:29,960
对于 T3，I al所以看到不同的成员。

204
00:10:29,960 --> 00:10:33,690
所以现在这个工作现在当然很好

205
00:10:33,690 --> 00:10:37,320
如果我们不能通过手动输入 URL 来到达那里。

206
00:10:37,320 --> 00:10:38,210
但例如，

207
00:10:38,210 --> 00:10:41,620
通过单击团队页面上的这些按钮

208
00:10:41,620 --> 00:10:44,320
因此，这就是我们接下来要做的工作。