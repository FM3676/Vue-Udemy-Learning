1
00:00:02,160 --> 00:00:05,580
凭借我们在上次讲座中获得的所有知识，

2
00:00:05,580 --> 00:00:08,620
我们现在接近这个模块的结尾。

3
00:00:08,620 --> 00:00:11,840
您现在几乎了解所有关键功能

4
00:00:11,840 --> 00:00:14,560
你必须知道注册路线，

5
00:00:14,560 --> 00:00:17,590
加载组件和导航。

6
00:00:17,590 --> 00:00:20,150
但是还有另外两个不错的功能，

7
00:00:20,150 --> 00:00:22,570
这可以帮助您提供用户体验

8
00:00:22,570 --> 00:00:23,880
你想提供。

9
00:00:23,880 --> 00:00:27,280
这将控制滚动行为

10
00:00:27,280 --> 00:00:30,960
您的页面和导航守卫。

11
00:00:30,960 --> 00:00:34,190
让我们从控制滚动行为开始。

12
00:00:34,190 --> 00:00:35,800
我的意思是什么？

13
00:00:35,800 --> 00:00:38,660
好吧，假设我们在 Teams 页面上，

14
00:00:38,660 --> 00:00:41,300
我们在这里加载我们的团队，然后我向下滚动

15
00:00:41,300 --> 00:00:45,470
这样我就可以加载客户咨询团队。

16
00:00:45,470 --> 00:00:48,220
如果我点击那个，当然你的组件更新，

17
00:00:48,220 --> 00:00:50,923
但我必须向上滚动才能看到。

18
00:00:51,970 --> 00:00:55,840
也许我们想自动向上滚动，

19
00:00:55,840 --> 00:00:58,320
当我们在这里切换路线时。

20
00:00:58,320 --> 00:01:00,740
这可能是我们想做的事情，

21
00:01:00,740 --> 00:01:02,490
一般来说，也许。

22
00:01:02,490 --> 00:01:04,920
每当我们切换路线时，

23
00:01:04,920 --> 00:01:08,550
我们想滚动到顶部，以便用户始终看到

24
00:01:08,550 --> 00:01:13,330
完整的新页面，并没有卡在页面下方的某个地方。

25
00:01:13,330 --> 00:01:16,190
这就是我们可以用 vue 路由器添加的东西。

26
00:01:16,190 --> 00:01:19,220
在我们创建路由器的主 js 中，

27
00:01:19,220 --> 00:01:21,840
除了注册所有这些路线

28
00:01:21,840 --> 00:01:23,740
然后设置一些全局冲突

29
00:01:23,740 --> 00:01:25,800
像链接活动类。

30
00:01:25,800 --> 00:01:29,330
您还可以添加滚动行为

31
00:01:29,330 --> 00:01:30,173
财产。

32
00:01:31,420 --> 00:01:35,070
该滚动行为属性实际上

33
00:01:35,070 --> 00:01:37,130
是一种方法。

34
00:01:37,130 --> 00:01:40,440
一个将被 vue 路由器调用的方法，

35
00:01:40,440 --> 00:01:42,653
每当您的页面更改时。

36
00:01:45,000 --> 00:01:48,170
然后这个漫步行为方法会收到

37
00:01:48,170 --> 00:01:51,290
自由参数，自动。

38
00:01:51,290 --> 00:01:52,310
一个到，

39
00:01:52,310 --> 00:01:53,380
来自

40
00:01:53,380 --> 00:01:55,330
和一个保存的位置

41
00:01:55,330 --> 00:01:56,163
争论。

42
00:01:57,157 --> 00:01:58,660
您可以随意命名它们，

43
00:01:58,660 --> 00:02:00,830
但这就是那里的内容。

44
00:02:00,830 --> 00:02:03,393
但是什么是从和保存的位置？

45
00:02:04,400 --> 00:02:05,540
让我们简单

46
00:02:05,540 --> 00:02:06,740
锁定这个。

47
00:02:06,740 --> 00:02:08,840
让我们锁定，

48
00:02:08,840 --> 00:02:09,860
从

49
00:02:09,860 --> 00:02:11,263
并保存位置，

50
00:02:12,210 --> 00:02:13,960
并保存这个。

51
00:02:13,960 --> 00:02:15,340
现在我重新加载

52
00:02:15,340 --> 00:02:16,640
我点击

53
00:02:16,640 --> 00:02:18,430
在此处的链接上，

54
00:02:18,430 --> 00:02:21,070
你会看到我把它锁定在控制台上，

55
00:02:21,070 --> 00:02:25,170
实际上，当我第一次加载此页面时，我们已经得到了它。

56
00:02:25,170 --> 00:02:29,070
Q 和 from 最后是路由对象。

57
00:02:29,070 --> 00:02:33,630
Q 和 from 基本上是你也可以通过这条路线得到的

58
00:02:33,630 --> 00:02:35,370
组件内部。

59
00:02:35,370 --> 00:02:36,520
向和从，

60
00:02:36,520 --> 00:02:38,580
是我们要去的页面

61
00:02:38,580 --> 00:02:39,803
我们来自。

62
00:02:40,840 --> 00:02:42,660
当我第一次加载这个页面时，

63
00:02:42,660 --> 00:02:46,940
我们要去的页面有这个完整的路径，

64
00:02:46,940 --> 00:02:50,720
其中这条路径不带查询参数等等。

65
00:02:50,720 --> 00:02:53,850
它有这个参数对象，查询对象，

66
00:02:53,850 --> 00:02:56,710
这正是你会得到的对象

67
00:02:56,710 --> 00:02:58,800
有了这条美元签名的路线，

68
00:02:58,800 --> 00:03:01,860
在加载的组件内部。

69
00:03:01,860 --> 00:03:04,230
而我们来自这条道路，

70
00:03:04,230 --> 00:03:07,440
它几乎都是空的，因为我刚刚加载了页面。

71
00:03:07,440 --> 00:03:10,020
如果我清除控制台并单击链接，

72
00:03:10,020 --> 00:03:11,460
你会看到这看起来不同。

73
00:03:11,460 --> 00:03:13,985
现在我们要走这条路，

74
00:03:13,985 --> 00:03:16,370
参数为 t2，

75
00:03:16,370 --> 00:03:20,823
我们来自的路线的参数为 t1。

76
00:03:22,320 --> 00:03:24,353
并且保存的位置在这里是空的，

77
00:03:24,353 --> 00:03:28,180
因为只设置了保存的位置，

78
00:03:28,180 --> 00:03:30,340
如果您使用后退按钮。

79
00:03:30,340 --> 00:03:34,030
然后你看到保存的位置实际上是一个对象

80
00:03:34,030 --> 00:03:36,700
具有 left 和 top 属性，

81
00:03:36,700 --> 00:03:40,110
描述用户滚动到的位置，

82
00:03:40,110 --> 00:03:44,960
当这个页面时，你只是回到了剩下的东西。

83
00:03:44,960 --> 00:03:45,793
例如，

84
00:03:45,793 --> 00:03:47,260
如果我一直向下滚动，

85
00:03:47,260 --> 00:03:49,100
他们转到不同的页面，

86
00:03:49,100 --> 00:03:50,660
我回去，

87
00:03:50,660 --> 00:03:51,960
那么这个

88
00:03:51,960 --> 00:03:53,190
滚动

89
00:03:53,190 --> 00:03:54,023
位置，

90
00:03:54,023 --> 00:03:56,890
这里保存的是我的滚动位置

91
00:03:56,890 --> 00:04:00,453
当我在单击后退按钮之前离开此页面时。

92
00:04:02,050 --> 00:04:03,943
这一切怎么会有用？

93
00:04:05,120 --> 00:04:09,450
此滚动行为方法应返回

94
00:04:09,450 --> 00:04:14,120
描述浏览器应该滚动到哪里的对象，

95
00:04:14,120 --> 00:04:15,670
在页面更改上。

96
00:04:15,670 --> 00:04:17,870
在这里你返回的对象，

97
00:04:17,870 --> 00:04:21,293
应该有一个 left 和 top 属性。

98
00:04:22,200 --> 00:04:24,540
就像安全的位置一样，

99
00:04:24,540 --> 00:04:26,870
当它可用时。

100
00:04:26,870 --> 00:04:29,470
如果你，例如，说左到零，

101
00:04:29,470 --> 00:04:31,010
并从零开始，

102
00:04:31,010 --> 00:04:32,930
这意味着你想滚动，

103
00:04:32,930 --> 00:04:34,943
一直到页面顶部。

104
00:04:35,960 --> 00:04:38,350
如果我总是退回这个，

105
00:04:38,350 --> 00:04:41,990
我现在仍然控制台登录，从

106
00:04:41,990 --> 00:04:45,840
并保存位置，以便我的 IDE 不会抱怨

107
00:04:45,840 --> 00:04:48,310
关于这些未被使用。

108
00:04:48,310 --> 00:04:49,710
如果我锁定了那个，

109
00:04:49,710 --> 00:04:51,960
但我们总是返回这个对象，

110
00:04:51,960 --> 00:04:55,050
效果是，如果我向下滚动

111
00:04:55,050 --> 00:04:56,960
并切换到不同的页面，

112
00:04:56,960 --> 00:04:58,720
我们跳到顶部

113
00:04:58,720 --> 00:05:01,133
这正是我想要的行为。

114
00:05:02,490 --> 00:05:05,010
当然，另一方面，如果我们回去，

115
00:05:05,010 --> 00:05:07,760
我可能想回到这里

116
00:05:07,760 --> 00:05:09,620
以至于我真的回去了，

117
00:05:09,620 --> 00:05:12,750
不仅仅是我们来自的页面，

118
00:05:12,750 --> 00:05:16,810
还要到我们所在页面上的位置。

119
00:05:16,810 --> 00:05:19,630
这就是现在保存的位置派上用场的地方

120
00:05:19,630 --> 00:05:23,843
因为这保存了我们滚动到的确切位置。

121
00:05:24,690 --> 00:05:29,660
我们可以调整它并检查保存的位置是否存在，

122
00:05:29,660 --> 00:05:32,210
如果不是现在，如果是这样的话

123
00:05:32,210 --> 00:05:34,860
我们回到保存的位置。

124
00:05:34,860 --> 00:05:37,360
例如，如果我们返回，

125
00:05:37,360 --> 00:05:41,220
我们使用保存的位置而不是跳到顶部。

126
00:05:41,220 --> 00:05:45,053
但是如果保存的位置不存在，我们会跳到顶部。

127
00:05:46,800 --> 00:05:50,430
有了这个建议，保存并重新加载。

128
00:05:50,430 --> 00:05:52,743
我可以去我的团队，

129
00:05:53,710 --> 00:05:55,220
加载一个团队，

130
00:05:55,220 --> 00:05:56,690
向下滚动，

131
00:05:56,690 --> 00:05:58,170
跳到顶部。

132
00:05:58,170 --> 00:06:01,710
但是，如果我现在单击返回，我将再次向下滚动。

133
00:06:01,710 --> 00:06:04,420
这当然可以增强用户体验

134
00:06:04,420 --> 00:06:07,970
因为现在我们将用户滚动到该位置

135
00:06:07,970 --> 00:06:12,420
他或她能够准确地看到内容的地方，

136
00:06:12,420 --> 00:06:15,053
我们现在想要呈现的。