1
00:00:02,200 --> 00:00:04,300
安装此路由包

2
00:00:04,300 --> 00:00:06,410
退出这个正在运行的开发服务器

3
00:00:06,410 --> 00:00:08,890
通过按控制看这里，

4
00:00:08,890 --> 00:00:13,890
然后运行 ​​npm install -- save, Vue-router.

5
00:00:14,370 --> 00:00:18,320
这是 vue 官方团队开发的另一个包。

6
00:00:18,320 --> 00:00:20,120
所以它是一个官方包，

7
00:00:20,120 --> 00:00:22,770
您可以将其添加到您的 Vue 项目中

8
00:00:22,770 --> 00:00:25,563
添加此路由功能。

9
00:00:27,070 --> 00:00:28,620
现在这将安装这个包

10
00:00:28,620 --> 00:00:30,900
一旦你完成安装，

11
00:00:30,900 --> 00:00:34,720
您可以使用 NPM run serve 重新启动您的开发服务器

12
00:00:34,720 --> 00:00:38,853
但现在我们将能够向该应用程序添加路由。

13
00:00:39,880 --> 00:00:42,680
这意味着添加路由是什么意思？

14
00:00:42,680 --> 00:00:45,130
好了，现在我们可以去主 JS

15
00:00:45,130 --> 00:00:49,020
我们在其中创建我们的主 Vue 应用程序这个单一的应用程序，

16
00:00:49,020 --> 00:00:50,350
我们到底在这里。

17
00:00:50,350 --> 00:00:54,910
在这个应用程序上，我们现在可以注册这个路由器，

18
00:00:54,910 --> 00:00:56,360
我们刚刚安装的

19
00:00:56,360 --> 00:00:58,210
更重要的是，

20
00:00:58,210 --> 00:01:00,630
我们想要在这个项目中拥有的路线。

21
00:01:00,630 --> 00:01:04,462
所以只是我们想要支持的不同 URL。

22
00:01:05,850 --> 00:01:08,710
为此，我们需要导入一些东西

23
00:01:08,710 --> 00:01:10,540
来自 Vue 路由器

24
00:01:10,540 --> 00:01:13,500
所以从这个新安装的包

25
00:01:13,500 --> 00:01:18,500
这东西是一个函数 create Router

26
00:01:19,100 --> 00:01:22,460
所以我们从 Vue 创建应用程序来创建一个 Vue 应用程序。

27
00:01:22,460 --> 00:01:25,670
我们已经从 Vue 路由器创建路由器来创建路由器

28
00:01:25,670 --> 00:01:26,743
对于这样的应用程序。

29
00:01:28,040 --> 00:01:30,720
例如，我们现在可以在这里创建路由器，

30
00:01:30,720 --> 00:01:33,650
只需创建一个新的常量路由器，

31
00:01:33,650 --> 00:01:36,680
听起来像一个合适的名字和调用创建路由器

32
00:01:36,680 --> 00:01:41,210
并将调用的结果存储在这个常量中，

33
00:01:41,210 --> 00:01:43,760
但是创建路由器需要一些配置

34
00:01:43,760 --> 00:01:46,810
现在它需要知道哪些不同的路线

35
00:01:46,810 --> 00:01:49,800
所以我们想要支持哪些不同的 URL

36
00:01:49,800 --> 00:01:52,160
我们还可以设置更多的东西。

37
00:01:52,160 --> 00:01:56,590
因此，为此，您传递一个 JavaScript 对象来创建路由器

38
00:01:56,590 --> 00:02:00,890
在那个对象中，我们现在有两个重要的选择，

39
00:02:01,860 --> 00:02:06,180
我们可以设置明显的重要选项是

40
00:02:06,180 --> 00:02:07,500
路线选项。

41
00:02:07,500 --> 00:02:11,370
在这里我们注册所有的路线，不同的路径，

42
00:02:11,370 --> 00:02:15,850
您可以说出您想要支持的不同 URL

43
00:02:15,850 --> 00:02:17,900
这将是一个数组，因为通常

44
00:02:17,900 --> 00:02:20,950
这不仅仅是您希望在您的应用程序中拥有的一条路线

45
00:02:20,950 --> 00:02:23,560
如果是这样的话，你不需要路由器

46
00:02:23,560 --> 00:02:25,650
所以我们将在这里有一个充满路线的数组

47
00:02:25,650 --> 00:02:27,580
我会回到这条路线冲突

48
00:02:27,580 --> 00:02:28,793
就在一秒钟内，

49
00:02:29,670 --> 00:02:32,510
但是您还应该设置另一个选项。

50
00:02:32,510 --> 00:02:35,030
这就是历史选项。

51
00:02:35,030 --> 00:02:37,816
现在这基本上是告诉路由器

52
00:02:37,816 --> 00:02:42,816
如何在这个应用程序中管理路由历史

53
00:02:43,320 --> 00:02:46,960
因此，当用户点击某处转到不同的页面时，

54
00:02:46,960 --> 00:02:51,080
然后这个新页面被添加到浏览历史中

55
00:02:51,080 --> 00:02:54,240
你可以说，如果用户然后点击后退按钮，

56
00:02:54,240 --> 00:02:56,750
历史确保了这一点，

57
00:02:56,750 --> 00:03:00,210
路由器知道最后一页是什么。

58
00:03:00,210 --> 00:03:03,550
有两种不同的历史

59
00:03:03,550 --> 00:03:04,820
你可以在这里使用。

60
00:03:04,820 --> 00:03:09,020
我们想在这里从你的路由器导入另一个功能

61
00:03:09,020 --> 00:03:12,120
还有那个棒子，创建网页历史功能，

62
00:03:12,120 --> 00:03:15,340
然后我们将其称为历史选项。

63
00:03:15,340 --> 00:03:16,980
现在这听起来可能令人困惑，

64
00:03:16,980 --> 00:03:19,810
但历史上浏览器中的 Java 脚本，

65
00:03:19,810 --> 00:03:24,810
并不总是能够操纵浏览器的内存

66
00:03:24,880 --> 00:03:26,780
用户在哪个页面上

67
00:03:26,780 --> 00:03:28,500
以及用户来自哪里。

68
00:03:28,500 --> 00:03:31,410
因此，历史上的路由器

69
00:03:31,410 --> 00:03:34,910
不得不模仿这种行为，你可以说，

70
00:03:34,910 --> 00:03:38,580
而且我们没有使用内置的浏览器历史记录，

71
00:03:38,580 --> 00:03:41,060
但是几年后，这没问题吗

72
00:03:41,060 --> 00:03:44,690
并通过调用此函数创建网络历史记录，

73
00:03:44,690 --> 00:03:45,830
我们告诉路由器，

74
00:03:45,830 --> 00:03:49,060
嘿，只需使用内置机制的浏览器

75
00:03:49,060 --> 00:03:52,570
记住用户来自哪里等等。

76
00:03:52,570 --> 00:03:54,840
这就是我们在这里告诉路由器的内容

77
00:03:54,840 --> 00:03:58,143
使用内置浏览器支持很简单。

78
00:03:59,200 --> 00:04:01,900
现在这就是我们要做的与此相关的所有事情。

79
00:04:01,900 --> 00:04:04,480
现在我们可以专注于那些路线

80
00:04:04,480 --> 00:04:06,750
因为那是路由器的核心

81
00:04:06,750 --> 00:04:10,110
在这里我们可以告诉路由器

82
00:04:10,110 --> 00:04:13,100
应该加载哪个 Vue 组件

83
00:04:13,100 --> 00:04:17,220
对于哪个 URL，因为最终这将是我们的目标。

84
00:04:17,220 --> 00:04:19,339
我们想加载团队的组件，

85
00:04:19,339 --> 00:04:23,470
假设我们在域斜杠团队中

86
00:04:23,470 --> 00:04:25,730
我们想加载到用户组件，

87
00:04:25,730 --> 00:04:30,260
假设当我们在我们的域斜杠用户上时，

88
00:04:30,260 --> 00:04:34,483
所以让我们继续注册路线并加载它们。