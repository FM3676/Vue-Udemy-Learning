1
00:00:02,300 --> 00:00:04,456
现在在这个演示应用程序中，

2
00:00:04,456 --> 00:00:05,980
到目前为止，我们一直在努力，

3
00:00:05,980 --> 00:00:07,697
我们实际上有一个问题。

4
00:00:07,697 --> 00:00:10,300
“团队”作品，“用户”作品，

5
00:00:10,300 --> 00:00:13,080
我们可以查看我们团队的成员。

6
00:00:13,080 --> 00:00:17,330
但实际上大多数用户可能会访问此页面

7
00:00:17,330 --> 00:00:19,490
只需输入您的域。

8
00:00:19,490 --> 00:00:22,440
如果你这样做，你就没有错误，

9
00:00:22,440 --> 00:00:24,763
但您也看不到屏幕上的任何内容。

10
00:00:26,220 --> 00:00:29,620
其原因实际上可以在控制台中看到。

11
00:00:29,620 --> 00:00:32,180
路由器找不到任何匹配的路由

12
00:00:32,180 --> 00:00:33,860
对于“不削减任何东西”。

13
00:00:33,860 --> 00:00:37,530
所以，对于我们的域名来说，“什么都不做”。

14
00:00:37,530 --> 00:00:39,430
这不是技术错误

15
00:00:39,430 --> 00:00:42,070
但这可能不是您想要的。

16
00:00:42,070 --> 00:00:43,760
你肯定想处理这个

17
00:00:43,760 --> 00:00:46,190
并在屏幕上显示一些东西。

18
00:00:46,190 --> 00:00:49,030
现在，这当然取决于您正在构建的应用程序类型

19
00:00:49,030 --> 00:00:50,540
以及您想要的路线。

20
00:00:50,540 --> 00:00:53,870
也许你会有一些你想在这里展示的组件。

21
00:00:53,870 --> 00:00:57,530
也许您只是想显示团队的列表

22
00:00:57,530 --> 00:01:00,110
如果用户输入“无斜线”。

23
00:01:00,110 --> 00:01:03,300
但在这里我想在 URL 中有“斜线团队”

24
00:01:03,300 --> 00:01:04,920
当显示团队列表时。

25
00:01:04,920 --> 00:01:08,700
只是为了有一个富有表现力的 URL

26
00:01:08,700 --> 00:01:11,220
这是所有描述类型

27
00:01:11,220 --> 00:01:13,153
我们在页面上看到的内容。

28
00:01:14,060 --> 00:01:17,010
当然我还是想在这里增加一条新的路线，

29
00:01:17,010 --> 00:01:18,510
作为第一条路线。

30
00:01:18,510 --> 00:01:21,370
这是“路径斜线没有”。

31
00:01:21,370 --> 00:01:23,810
应该由哪个负责

32
00:01:23,810 --> 00:01:25,763
也用于加载团队的列表。

33
00:01:26,790 --> 00:01:31,623
现在正如我刚才所说，我们可以在这里卸载团队的列表。

34
00:01:33,110 --> 00:01:35,710
保存这个，现在看看我们的团队

35
00:01:35,710 --> 00:01:37,500
当我们访问“slash nothing”时。

36
00:01:37,500 --> 00:01:39,290
一切都会奏效

37
00:01:39,290 --> 00:01:42,610
但我总是想在 URL 中有“斜线团队”

38
00:01:42,610 --> 00:01:46,600
而不仅仅是“削减任何东西”来加载团队的列表。

39
00:01:46,600 --> 00:01:48,920
因此，实际上我想在这里做什么，

40
00:01:48,920 --> 00:01:52,723
是我不想加载团队的列表组件。

41
00:01:53,860 --> 00:01:57,030
相反，我想重定向到这条路线。

42
00:01:57,030 --> 00:01:59,010
路由器可以做到这一点。

43
00:01:59,010 --> 00:02:02,190
在路线冲突中，您还有另一种选择

44
00:02:02,190 --> 00:02:03,850
您可以在路线上设置。

45
00:02:03,850 --> 00:02:06,860
这就是重定向属性。

46
00:02:06,860 --> 00:02:11,263
您可以将其设置为您想要重定向到的路径。

47
00:02:12,120 --> 00:02:14,940
这样如果输入“slash nothing”，

48
00:02:14,940 --> 00:02:16,823
我们重定向到团队。

49
00:02:17,700 --> 00:02:21,440
当然，您可以重定向到您想要的任何路径。

50
00:02:21,440 --> 00:02:23,020
如果我保存这个

51
00:02:24,560 --> 00:02:28,330
我现在输入我的域“无斜线”

52
00:02:28,330 --> 00:02:31,700
如果我输入了，您会看到它变为“斜线团队”

53
00:02:31,700 --> 00:02:36,163
我们通过视图路由器将其重定向到此页面。

54
00:02:37,040 --> 00:02:38,890
所以这是一个非常好的功能。

55
00:02:38,890 --> 00:02:40,150
能够重定向。

56
00:02:40,150 --> 00:02:42,650
这是您可能非常需要的东西

57
00:02:42,650 --> 00:02:44,283
在您的应用程序中。

58
00:02:45,370 --> 00:02:48,530
还有一种替代重定向的方法。

59
00:02:48,530 --> 00:02:51,923
您还可以设置别名选项。

60
00:02:52,990 --> 00:02:56,930
好吧，你实际上不会在这里设置它，

61
00:02:56,930 --> 00:02:58,860
相反，你会删除这条路线

62
00:02:58,860 --> 00:03:00,810
去你想加载的路线

63
00:03:00,810 --> 00:03:02,680
当这条路线被加载时。

64
00:03:02,680 --> 00:03:04,440
然后为其添加别名。

65
00:03:04,440 --> 00:03:07,510
因此，在这种情况下，“斜线团队”路线。

66
00:03:07,510 --> 00:03:10,070
然后在这里添加别名路径，

67
00:03:10,070 --> 00:03:12,540
这导致相同的组件。

68
00:03:12,540 --> 00:03:14,860
所以，这里的“slash nothing”将是一个别名

69
00:03:14,860 --> 00:03:16,800
对于“斜线队”。

70
00:03:16,800--> 00:03:19,400
如果你这样做并输入“slash nothing”，

71
00:03:19,400 --> 00:03:21,970
我们仍然加载“团队成员”组件。

72
00:03:21,970 --> 00:03:25,020
所以，这有点像定义“无斜线”

73
00:03:25,020 --> 00:03:26,620
与组件团队的列表，

74
00:03:26,620 --> 00:03:28,940
正如我们几分钟前所做的那样。

75
00:03:28,940 --> 00:03:31,533
使用别名，您可以在较短的论坛上写这个。

76
00:03:32,430 --> 00:03:34,850
但当然，不利的一面，我不想在这里

77
00:03:34,850 --> 00:03:38,720
在这个用例中，是 URL 没有改变。

78
00:03:38,720 --> 00:03:40,810
这就是重定向的区别。

79
00:03:40,810 --> 00:03:43,720
通过重定向，URL 会改变。

80
00:03:43,720 --> 00:03:47,470
你真的被重定向到不同的路径。

81
00:03:47,470 --> 00:03:51,140
使用别名，URL 不会改变。

82
00:03:51,140 --> 00:03:55,100
您只需在不同的路线上加载相同的组件。

83
00:03:55,100 --> 00:03:58,210
这取决于您的要求和您的应用程序，

84
00:03:58,210 --> 00:04:00,150
你想要哪种行为。

85
00:04:00,150 --> 00:04:03,290
我不想在这里使用别名。

86
00:04:03,290 --> 00:04:07,370
相反，我想像以前一样重定向。

87
00:04:07,370 --> 00:04:09,600
我想用“斜线团队”重定向

88
00:04:09,600 --> 00:04:12,060
保存所有内容，因此请确保

89
00:04:12,060 --> 00:04:15,567
当我什么都不输入时，我最终会成为“斜线队”。

90
00:04:17,053 --> 00:04:20,160
在这个演示中我们没有处理的另一件事，

91
00:04:20,160 --> 00:04:24,210
是用户进入任意路线的用例

92
00:04:24,210 --> 00:04:25,570
不支持。

93
00:04:25,570 --> 00:04:27,910
所以，这里“削减一些东西”。

94
00:04:27,910 --> 00:04:30,090
如果我再次输入，我们什么也看不到。

95
00:04:30,090 --> 00:04:33,400
因为我们没有为此定义路由。

96
00:04:33,400 --> 00:04:38,120
现在当然我们不能为所有可能的值定义路由

97
00:04:38,120 --> 00:04:39,430
可以在这里输入。

98
00:04:39,430 --> 00:04:43,283
用户可以输入的路径是无限的。

99
00:04:44,330 --> 00:04:48,850
这就是为什么您可以定义“捕获所有”路线的原因。

100
00:04:48,850 --> 00:04:51,360
所以在这里我将在最后添加一条新路线，

101
00:04:51,360 --> 00:04:53,860
因为它应该具有最低优先级

102
00:04:53,860 --> 00:04:57,920
并且仅在没有其他路线处理此问题时才开始。

103
00:04:57,920 --> 00:05:02,290
但是这里的路径应该是斜线，然后是一些东西

104
00:05:02,290 --> 00:05:03,550
它告诉路由器

105
00:05:03,550 --> 00:05:06,053
任何东西都应该匹配这条路线。

106
00:05:07,090 --> 00:05:09,370
为此，您添加了一个动态细分，

107
00:05:09,370 --> 00:05:12,990
然后是您选择的任何名称，例如“未找到”

108
00:05:12,990 --> 00:05:15,870
或“抓住一切”，随心所欲。

109
00:05:15,870 --> 00:05:17,820
我会选择“未找到”。

110
00:05:17,820 --> 00:05:21,717
然后是括号，括号中的“点星”。

111
00:05:22,630 --> 00:05:26,190
这当然看起来很奇怪，但最终这意味着，

112
00:05:26,190 --> 00:05:28,300
这是一个动态部分。

113
00:05:28,300 --> 00:05:31,370
这实际上是一个正则表达式。

114
00:05:31,370 --> 00:05:33,860
视图路由器支持此文本。

115
00:05:33,860 --> 00:05:37,990
它只是意味着任何字符组合

116
00:05:37,990 --> 00:05:40,450
在这里被用作一个值，

117
00:05:40,450 --> 00:05:43,500
应该在句柄中导致这条路线被加载。

118
00:05:43,500 --> 00:05:45,660
这就是为什么这需要放在最后。

119
00:05:45,660 --> 00:05:48,810
否则它也会覆盖其他路线

120
00:05:48,810 --> 00:05:49,860
你想要的。

121
00:05:50,780 --> 00:05:55,130
但是如果这些路由都没有处理入口路径，

122
00:05:55,130 --> 00:05:57,210
这条路线应该开始。

123
00:05:57,210 --> 00:06:00,200
在这里你可以定义应该加载哪个组件

124
00:06:00,200 --> 00:06:01,280
在这种情况下。

125
00:06:01,280 --> 00:06:03,020
或者，如果您想重定向。

126
00:06:03,020 --> 00:06:06,230
例如，我们可以重定向到“slash teams”

127
00:06:06,230 --> 00:06:08,980
对于正在输入的任何无效值。

128
00:06:08,980 --> 00:06:12,423
所以，如果我保存了这个并输入了一些东西，

129
00:06:13,710 --> 00:06:16,350
我被重定向到“斜线团队”。

130
00:06:16,350 --> 00:06:21,350
或者，您创建一个“未找到”组件。

131
00:06:23,060 --> 00:06:25,540
假设在 Nav 文件夹中。

132
00:06:25,540 --> 00:06:29,493
使用一个简单的模板，我说“找不到页面。

133
00:06:31,527 --> 00:06:34,973
“也许查看我们的”，然后是路由器链接，

134
00:06:37,497 --> 00:06:41,890
“teams”，然后关闭“h2”标签

135
00:06:41,890 --> 00:06:45,080
然后这里指向“斜线团队”。

136
00:06:45,080 --> 00:06:47,330
那可能是我们的“未找到”页面。

137
00:06:47,330 --> 00:06:49,550
现在我们可以加载这个组件，

138
00:06:49,550 --> 00:06:52,520
这只是一个模板，因为它不需要更多，

139
00:06:52,520 --> 00:06:54,880
你可以添加样式，但我想保持简单。

140
00:06:54,880 --> 00:06:57,470
我们现在可以加载这个组件

141
00:06:57,470 --> 00:07:00,557
通过在此处将其导入到我们的主 JSK 文件中，

142
00:07:00,557 --> 00:07:05,557
“未从组件中找到，导航，未找到，点 vue。”

143
00:07:07,090 --> 00:07:12,090
并在此“未找到”路线上指向该组件。

144
00:07:12,780 --> 00:07:13,673
像这样。

145
00:07:14,690 --> 00:07:17,680
如果你这样做并保存一切，

146
00:07:17,680 --> 00:07:21,690
如果我在这里输入一些不受支持的路径，

147
00:07:21,690 --> 00:07:23,630
我们看到我们的“未找到”页面，

148
00:07:23,630 --> 00:07:25,910
我们可以回到“团队”。

149
00:07:25,910 --> 00:07:28,800
所以，这就是你可以处理任何

150
00:07:28,800 --> 00:07:32,700
用户可能提供的无效输入。

151
00:07:32,700 --> 00:07:33,980
它应该排在最后

152
00:07:33,980 --> 00:07:36,640
这样它就不会覆盖您的其他路线

153
00:07:36,640 --> 00:07:38,490
但它真的很有用。

154
00:07:38,490 --> 00:07:40,750
连同重定向功能，

155
00:07:40,750 --> 00:07:43,630
这使您可以完全控制

156
00:07:43,630 --> 00:07:46,730
你网站的用户要去哪里

157
00:07:46,730 --> 00:07:48,743
在什么情况下。