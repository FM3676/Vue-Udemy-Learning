1
00:00:02,066 --> 00:00:03,900
- [旁白] 所以为了切换到 Vue，

2
00:00:03,900 --> 00:00:06,433
我会标记所有的代码，

3
00:00:06,433 --> 00:00:07,966
并将其注释掉。

4
00:00:07,966 --> 00:00:09,933
你可以通过选择这一切来做

5
00:00:09,933 --> 00:00:11,300
然后去编辑，

6
00:00:11,300 --> 00:00:14,333
然后切换行或块注释。

7
00:00:14,333 --> 00:00:16,600
我在这里使用了行注释。

8
00:00:16,600 --> 00:00:19,666
所以现在这段代码不会
有任何影响了。

9
00:00:19,666 --> 00:00:21,033
我不删除它

10
00:00:21,033 --> 00:00:23,633
这样我们仍然可以
看看它并比较它。

11
00:00:23,633 --> 00:00:26,033
因为现在我想使用 Vue。

12
00:00:26,033 --> 00:00:28,533
为此，我们首先需要添加 Vue。

13
00:00:28,533 --> 00:00:30,833
我们需要导入 Vue。

14
00:00:30,833 --> 00:00:35,233
我们可以
从 vuejs.org 和此页面上执行此操作，

15
00:00:35,233 --> 00:00:38,400
有这个“安装”链接
您可以点击它，

16
00:00:38,966 --> 00:00:41,133
带你去
到官方文档

17
00:00:41,400 --> 00:00:44,966
在哪里可以找到说明
关于如何创建 Vue 项目。

18
00:00:45,733 --> 00:00:49,000
顺便说一句，总的来说，
官方文档真的很好。

19
00:00:49,233 --> 00:00:53,366
所以除了参加这门课程，
我只能建议你也潜水

20
00:00:53,366 --> 00:00:57,133
进入官方文档
完成这门课程后

21
00:00:57,366 --> 00:01:00,166
潜得更深
或刷新某些概念。

22
00:01:00,500 --> 00:01:03,833
但是当谈到建立一个项目时
开始，

23
00:01:04,099 --> 00:01:06,233
我们在快速入门部分

24
00:01:06,233 --> 00:01:09,400
你会发现不同的方式
创建一个 Vue 项目。

25
00:01:09,766 --> 00:01:13,133
我们将学习不同的方式
在整个课程中，

26
00:01:13,400 --> 00:01:18,500
但最简单的方法是不安装
包，正如这里提到的。

27
00:01:18,533 --> 00:01:22,533
我们稍后会这样做，
而是最简单的开始方式

28
00:01:22,800 --> 00:01:26,333
是通过简单地添加
对 Vue 包的导入

29
00:01:26,333 --> 00:01:28,933
从 CDN 到您的页面。

30
00:01:29,600 --> 00:01:32,500
而为此，
我们可以在这里获取这个脚本标签，

31
00:01:32,500 --> 00:01:37,400
你在
没有内置工具部分并复制它。

32
00:01:38,733 --> 00:01:39,900
然后有了这个

33
00:01:39,900 --> 00:01:43,666
复制了
我们将它添加到我们的 index.html 文件中，

34
00:01:43,966 --> 00:01:46,800
你应该确保
这里的链接

35
00:01:46,800 --> 00:01:49,600
- 这个导入链接 - 以 vue@3 结尾

36
00:01:50,866 --> 00:01:55,500
或 vue@next，
这也为您提供了版本 3。

37
00:01:55,766 --> 00:01:56,066
所以让我们抓住它，

38
00:01:56,066 --> 00:02:00,733
转到索引 HTML 并添加
在你的脚本之前。

39
00:02:00,733 --> 00:02:04,300
所以在我们执行app.js之前，

40
00:02:04,300 --> 00:02:09,300
用 Vue 添加这个脚本
CDN 上面你自己的脚本。

41
00:02:10,566 --> 00:02:13,800
这将允许您的脚本使用 Vue。

42
00:02:13,800 --> 00:02:16,700
所以现在让我们保存这个文件。

43
00:02:16,700 --> 00:02:19,166
在 app.js 中我们可以使用 Vue。

44
00:02:19,166 --> 00:02:22,133
现在使用 Vue 是什么意思？

45
00:02:22,133 --> 00:02:25,733
使用 Vue，我们可以解决同样的问题，

46
00:02:25,733 --> 00:02:27,233
如果你想这样称呼它，

47
00:02:27,233 --> 00:02:29,400
以完全不同的方式。

48
00:02:29,400 --> 00:02:31,433
在常规 Java 脚本中，

49
00:02:31,433 --> 00:02:32,866
我们之前用过的，

50
00:02:32,866 --> 00:02:35,500
我们使用了所谓的命令式方法。

51
00:02:35,500 --> 00:02:39,700
这意味着我们定义了每一步，

52
00:02:39,700 --> 00:02:41,333
一步步，

53
00:02:41,333 --> 00:02:44,033
这应该由浏览器执行。

54
00:02:44,033 --> 00:02:45,433
访问按钮，

55
00:02:45,433 --> 00:02:46,966
访问输入元素，

56
00:02:46,966 --> 00:02:48,866
访问列表元素，

57
00:02:48,866 --> 00:02:50,466
创建一个函数，

58
00:02:50,466 --> 00:02:53,400
向按钮添加点击事件处理程序

59
00:02:53,400 --> 00:02:56,366
并执行此功能
的点击发生。

60
00:02:56,366 --> 00:02:57,933
在那个函数中，

61
00:02:57,933 --> 00:02:59,600
访问输入的值，

62
00:02:59,600 --> 00:03:01,266
创建一个列表项元素，

63
00:03:01,266 --> 00:03:02,866
添加文本内容，

64
00:03:02,866 --> 00:03:04,466
附加此列表项，

65
00:03:04,466 --> 00:03:06,000
清除值。

66
00:03:06,000 --> 00:03:06,966
你看到一个模式了吗？

67
00:03:06,966 --> 00:03:09,366
我们定义每一步。

68
00:03:09,366 --> 00:03:12,266
使用 Vue，我们有一个
完全不同的方法。

69
00:03:12,266 --> 00:03:16,766
在那里，我们定义了期望的最终结果lt,

70
00:03:16,766 --> 00:03:20,133
以及我们在 Vue 应用程序中需要的数据，

71
00:03:20,133 --> 00:03:23,166
我们将离开它
由 Vue 来解决

72
00:03:23,166 --> 00:03:27,200
需要创建什么或
在 Dom 中添加或更改

73
00:03:27,200 --> 00:03:28,666
在哪个时间点。

74
00:03:29,566 --> 00:03:31,900
为此，我们需要
创建一个视图应用程序，

75
00:03:31,900 --> 00:03:35,233
它控制了我们的 HTML 代码。

76
00:03:35,233 --> 00:03:37,333
我们通过调用 Vue 来做到这一点，

77
00:03:37,333 --> 00:03:40,366
这是一个全局对象
这是可用的，

78
00:03:40,366 --> 00:03:42,433
感谢我们的视图 CDN 导入，

79
00:03:43,333 --> 00:03:44,400
Vue.createApp。

80
00:03:46,533 --> 00:03:48,800
所以这个全局的 Vue 对象，

81
00:03:48,800 --> 00:03:50,566
我们可以调用createApp。

82
00:03:51,733 --> 00:03:54,833
CreateApp 需要一个对象，
一个 JavaScript 对象，

83
00:03:54,833 --> 00:03:58,100
我们在哪里配置这个 Vue 应用程序。

84
00:03:58,100 --> 00:03:59,733
当我说配置时，

85
00:03:59,733 --> 00:04:02,700
我的意思是设置
up 什么样的数据

86
00:04:02,700 --> 00:04:04,733
我们将在我们的 Vue 应用程序中使用。

87
00:04:04,733 --> 00:04:06,500
例如，在这个演示中，

88
00:04:06,500 --> 00:04:09,366
我计划使用目标列表。

89
00:04:09,366 --> 00:04:13,500
因此，我们将获得一份数据
需要的是目标清单。

90
00:04:13,500 --> 00:04:15,466
我们需要的另一条数据

91
00:04:15,466 --> 00:04:17,666
是用户在此处输入的内容。

92
00:04:17,666 --> 00:04:22,166
我们定义这些数据
通过添加数据属性

93
00:04:22,166 --> 00:04:25,033
给我们传递给createApp的这个对象，

94
00:04:25,033 --> 00:04:27,266
这必须称为数据。

95
00:04:28,100 --> 00:04:31,100
它实际上持有一个函数作为一个值

96
00:04:31,100 --> 00:04:33,266
因此在现代 JavaScript 中，

97
00:04:33,266 --> 00:04:34,966
我们也可以这样写，

98
00:04:34,966 --> 00:04:36,566
这是完全相同的。

99
00:04:36,566 --> 00:04:38,266
一个名为 data 的属性，

100
00:04:38,266 --> 00:04:40,866
它具有作为值的功能。

101
00:04:40,866 --> 00:04:43,866
此函数必须返回一个对象。

102
00:04:43,866 --> 00:04:44,966
而在这个对象中，

103
00:04:44,966 --> 00:04:48,400
然后我们可以定义数据
我们的 Vue 应用程序应该知道。

104
00:04:48,400 --> 00:04:49,533
作为旁注，

105
00:04:49,533 --> 00:04:51,633
如果这对你来说有点太快了，

106
00:04:51,633 --> 00:04:52,466
不用担心。

107
00:04:52,466 --> 00:04:55,500
我们将遍历所有
更深入的基础知识

108
00:04:55,500 --> 00:04:57,033
在下一个模块中。

109
00:04:57,033 --> 00:04:59,066
今年只是一个快速的概述，

110
00:04:59,066 --> 00:05:01,133
这就是为什么我没有潜水超深

111
00:05:01,133 --> 00:05:03,133
目前进入所有这些概念。

112
00:05:03,133 --> 00:05:06,666
我们一定会这样做
不过在下一节中。

113
00:05:06,666 --> 00:05:08,500
所以我们需要在这里返回一个对象。

114
00:05:08,500 --> 00:05:09,633
在这里，我们可以简单地

115
00:05:09,633 --> 00:05:12,333
在这个应用程序中添加我们想要管理的数据。

116
00:05:12,333 --> 00:05:13,666
这将是一个目标数组，

117
00:05:13,666 --> 00:05:17,033
最初是空的
作为键值对，

118
00:05:17,033 --> 00:05:18,600
和输入的值，

119
00:05:18,600 --> 00:05:20,366
最初是一个空字符串。

120
00:05:21,300 --> 00:05:23,333
而现在这两条数据

121
00:05:23,333 --> 00:05:27,533
是 Vue 知道的数据片段。

122
00:05:27,533 --> 00:05:30,166
这将在以后变得重要。

123
00:05:30,166 --> 00:05:33,300
现在我们可以连接这个输入的值

124
00:05:33,300 --> 00:05:34,966
有了这个输入

125
00:05:34,966 --> 00:05:39,800
通过添加一个特殊的所谓
输入指令，

126
00:05:39,800 --> 00:05:42,300
一个特殊的 HTML 属性。

127
00:05:42,300 --> 00:05:46,666
这就是 V-model 属性。

128
00:05:46,666 --> 00:05:50,633
这不是默认属性，
这是由 HTML 支持的。

129
00:05:50,633 --> 00:05:53,500
这只有 Vue 才能理解。

130
00:05:53,500 --> 00:05:55,033
作为一个价值，

131
00:05:55,033 --> 00:05:57,600
我们重复这个属性的名称，

132
00:05:57,600 --> 00:05:58,633
输入的值。

133
00:05:59,833 --> 00:06:01,600
这将建立一个连接

134
00:06:01,600 --> 00:06:04,766
这个输入和之间
在那里输入的值，

135
00:06:04,766 --> 00:06:06,700
和这个数据属性。

136
00:06:06,700 --> 00:06:08,800
Vue 会为我们管理这个。

137
00:06:08,800 --> 00:06:11,666
它会自动收听
用户输入的内容

138
00:06:11,666 --> 00:06:14,366
它会自动
更新此输入

139
00:06:14,366 --> 00:06:18,400
每当我们改变输入
例如，代码中的值。

140
00:06:18,400 --> 00:06:20,233
这当然是莫名其妙的e 方便，

141
00:06:20,233 --> 00:06:22,600
而不是手动接触输入

142
00:06:22,600 --> 00:06:24,500
并管理所有这些。

143
00:06:24,500 --> 00:06:27,033
但这只是第一步。

144
00:06:27,033 --> 00:06:28,466
现在按一下按钮，

145
00:06:28,466 --> 00:06:30,100
我们想确保我们

146
00:06:30,100 --> 00:06:33,166
获取当前的
存储在输入值中

147
00:06:33,166 --> 00:06:34,866
并将其添加到目标中。

148
00:06:35,900 --> 00:06:39,266
为此，我们可以添加另一个键值对

149
00:06:39,266 --> 00:06:42,466
对于我们传递给 createApp 的这个对象，

150
00:06:42,466 --> 00:06:44,733
这就是方法的关键，

151
00:06:44,733 --> 00:06:47,233
它现在拥有一个对象。

152
00:06:47,233 --> 00:06:50,133
在这里我们可以定义方法，

153
00:06:50,133 --> 00:06:51,366
功能，

154
00:06:51,366 --> 00:06:52,833
那应该是可调用的

155
00:06:52,833 --> 00:06:55,633
从 HTML 代码内部。

156
00:06:55,633 --> 00:06:59,200
例如，我们在这里
可以添加一个 addGoal 方法，

157
00:06:59,200 --> 00:07:00,366
在那里，

158
00:07:00,366 --> 00:07:05,233
然后接触目标和
添加到当前输入的值。

159
00:07:05,233 --> 00:07:07,666
我们可以用这个目标来做到这一点

160
00:07:07,666 --> 00:07:09,000
然后推，

161
00:07:09,000 --> 00:07:10,966
由于目标是一个数组，

162
00:07:10,966 --> 00:07:13,266
这个输入的值。

163
00:07:13,266 --> 00:07:17,033
如果你想知道为什么
this 指的是这个对象

164
00:07:17,033 --> 00:07:19,933
Vue 将建立
幕后的联系。

165
00:07:19,933 --> 00:07:21,966
它在这里为我们创造了一些魔力，

166
00:07:21,966 --> 00:07:23,333
虽然在整个课程中，

167
00:07:23,333 --> 00:07:27,666
我们将探索和
也明白那魔法。

168
00:07:27,666 --> 00:07:30,566
现在应该触发 addGoal

169
00:07:30,566 --> 00:07:32,700
每当单击此按钮时。

170
00:07:32,700 --> 00:07:36,966
而不是手动到达
到按钮元素

171
00:07:36,966 --> 00:07:39,866
并添加一个点击监听器，
就像我们之前做的那样，

172
00:07:39,866 --> 00:07:41,966
仅使用 JavaScript，

173
00:07:41,966 --> 00:07:43,433
使用 Vue，

174
00:07:43,433 --> 00:07:46,833
我们可以简单地添加
另一个特殊属性

175
00:07:46,833 --> 00:07:48,366
到按钮元素，

176
00:07:48,366 --> 00:07:51,933
V-on 属性。

177
00:07:51,933 --> 00:07:53,466
然后我们添加一个冒号，

178
00:07:53,466 --> 00:07:56,133
然后是事件的名称
我们想听的，

179
00:07:56,133 --> 00:07:58,500
在这种情况下，单击。

180
00:07:58,500 --> 00:08:00,266
然后作为一个值，

181
00:08:00,266 --> 00:08:03,733
我们指定名称
应该触发的方法

182
00:08:03,733 --> 00:08:04,766
当项目

183
00:08:04,766 --> 00:08:08,166
我们在其中添加了
单击特殊属性。

184
00:08:08,166 --> 00:08:09,166
所以在我们的例子中，

185
00:08:09,166 --> 00:08:11,566
addGoal，就这样。

186
00:08:12,866 --> 00:08:15,866
有了这个，Vue 将
确保 addGoal,

187
00:08:15,866 --> 00:08:16,700
这种方法，

188
00:08:16,700 --> 00:08:20,933
每当执行
单击此按钮

189
00:08:20,933 --> 00:08:22,600
然后它会自动

190
00:08:22,600 --> 00:08:24,500
给我们当前输入的值，

191
00:08:24,500 --> 00:08:28,233
并将其作为新值添加到目标。

192
00:08:28,233 --> 00:08:31,466
而现在只有
剩下的一件事。

193
00:08:31,466 --> 00:08:36,433
我们想输出我们的目标
在这个无序列表中。

194
00:08:36,433 --> 00:08:39,666
为此我们想要
在此处创建列表项。

195
00:08:39,666 --> 00:08:41,765
每个目标一个。

196
00:08:41,765 --> 00:08:44,200
正如我提到的，对于 Vue，

197
00:08:44,200 --> 00:08:47,233
我们定义了期望的最终结果，

198
00:08:47,233 --> 00:08:49,133
不是我们如何到达那里。

199
00:08:49,133 --> 00:08:51,800
所以再一次，我们想要
最后的列表项，

200
00:08:51,800 --> 00:08:53,700
这是我们想要的结果。

201
00:08:53,700 --> 00:08:55,933
但当然不止一个。

202
00:08:55,933 --> 00:08:58,400
而 Vue 得到 V-for 属性，

203
00:08:58,400 --> 00:09:00,466
我们可以在元素上添加

204
00:09:00,466 --> 00:09:04,233
多次复制此元素。

205
00:09:04,233 --> 00:09:06,100
在双引号之间，

206
00:09:06,100 --> 00:09:10,433
然后我们需要写“目标中的目标”

207
00:09:10,433 --> 00:09:14,133
最后循环通过
我们在这里的所有目标，

208
00:09:14,133 --> 00:09:17,033
并为每个目标创建一个列表项。

209
00:09:17,033 --> 00:09:19,300
我们可以实现这个目标，

210
00:09:19,300 --> 00:09:21,266
我们目前正在为此创建一个，

211
00:09:21,266 --> 00:09:23,466
在这个目标变量中。

212
00:09:23,466 --> 00:09:25,633
现在我们可以输出这个目标

213
00:09:25,633 --> 00:09:29,066
与 anot她的特别
Vue 理解的语法。

214
00:09:29,066 --> 00:09:31,666
那是双花括号，

215
00:09:31,666 --> 00:09:33,266
打开和关闭，

216
00:09:33,266 --> 00:09:34,566
而他们之间，

217
00:09:34,566 --> 00:09:35,766
目标。

218
00:09:35,766 --> 00:09:37,700
所以这里取这个名字。

219
00:09:38,966 --> 00:09:42,133
现在将复制
根据需要经常列出项目，

220
00:09:42,133 --> 00:09:45,900
然后为每个进球输入一个进球

221
00:09:45,900 --> 00:09:47,866
我们在这个目标数组中。

222
00:09:49,266 --> 00:09:51,933
如果我们现在保存所有内容并重新加载，

223
00:09:51,933 --> 00:09:53,933
你绝对什么也看不到。

224
00:09:53,933 --> 00:09:56,666
相反，你只看到
那个花括号的东西，

225
00:09:56,666 --> 00:09:58,433
我刚输入的。

226
00:09:58,433 --> 00:09:59,966
这样做的原因是

227
00:09:59,966 --> 00:10:02,433
这个 Vue 代码是正确的，

228
00:10:02,433 --> 00:10:06,933
但 Vue 不知道那在哪里
代码应该有效果，

229
00:10:06,933 --> 00:10:09,166
它应该应用在哪里。

230
00:10:09,166 --> 00:10:11,900
这就是为什么在这个创建的应用程序上，

231
00:10:11,900 --> 00:10:14,400
在这里，在右括号之后，

232
00:10:14,400 --> 00:10:16,066
我们需要调用 mount，

233
00:10:16,066 --> 00:10:19,333
并让 Vue 知道页面的哪一部分

234
00:10:19,333 --> 00:10:21,833
应该由那个 Vue 应用程序控制。

235
00:10:22,666 --> 00:10:25,100
方便的是，我在这里有一个 div，

236
00:10:25,100 --> 00:10:26,566
使用 ID 应用程序，

237
00:10:26,566 --> 00:10:28,666
其中包含所有标记

238
00:10:28,666 --> 00:10:30,400
使用 Vue 功能的

239
00:10:30,400 --> 00:10:32,433
我在最后几分钟解释过，

240
00:10:32,433 --> 00:10:35,833
我使用所有特殊的地方
属性，例如。

241
00:10:35,833 --> 00:10:39,533
这个与 ID 应用程序的差异
包含所有代码。

242
00:10:39,533 --> 00:10:44,100
所以应该是这个差异
由这个 Vue 应用程序控制。

243
00:10:44,100 --> 00:10:45,666
因此要安装，

244
00:10:45,666 --> 00:10:49,366
我们传递一个带有 CSS 选择器的字符串，

245
00:10:49,366 --> 00:10:51,600
在 Dom 中选择一个元素。

246
00:10:51,600 --> 00:10:55,633
既然我们有
该开发人员的 ID 应用程序在这里，

247
00:10:55,633 --> 00:11:00,400
我们可以使用 ID 选择器
对于这样的 ID 应用程序。

248
00:11:00,400 --> 00:11:02,666
使用哈希，然后是应用程序。

249
00:11:03,666 --> 00:11:07,300
如果我们现在保存并重新加载，

250
00:11:07,300 --> 00:11:09,366
现在，它看起来不一样了。

251
00:11:09,366 --> 00:11:12,000
如果我完成了一门课程，那就是添加，

252
00:11:12,000 --> 00:11:15,566
如果我学习 Vue，那将被添加。

253
00:11:15,566 --> 00:11:18,000
如果我想重置输入，

254
00:11:18,000 --> 00:11:21,466
我可以简单地设置这个输入
空字符串的值

255
00:11:21,466 --> 00:11:24,633
Vue 会自动
伸手去大教堂

256
00:11:24,633 --> 00:11:26,733
并进行必要的更新。

257
00:11:28,100 --> 00:11:29,000
再说一次，

258
00:11:29,000 --> 00:11:31,733
学Vue，一目了然。

259
00:11:31,733 --> 00:11:34,466
完成课程，它就被清除了。

260
00:11:34,466 --> 00:11:37,133
现在这是 Vue 接管。