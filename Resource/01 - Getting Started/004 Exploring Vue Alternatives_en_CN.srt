1
00:00:02,400 --> 00:00:04,360
也值得一提

2
00:00:04,360 --> 00:00:06,910
我们有 Vue 的替代品。

3
00:00:06,910 --> 00:00:09,970
Vue.js 当然是本课程的重点

4
00:00:09,970 --> 00:00:12,420
在这里，我们将了解有关 Vue 的所有信息。

5
00:00:12,420 --> 00:00:13,780
Vue 将变成

6
00:00:13,780 --> 00:00:17,290
一个完整的基于组件的 UI 框架。

7
00:00:17,290 --> 00:00:19,920
您将了解基于组件的含义

8
00:00:19,920 --> 00:00:21,820
全程无忧。

9
00:00:21,820 --> 00:00:23,640
它是一个框架，包括

10
00:00:23,640 --> 00:00:25,990
基本上你需要的所有核心功能

11
00:00:25,990 --> 00:00:28,640
构建现代 Web 应用程序。

12
00:00:28,640 --> 00:00:31,210
现在你已经看到它有一个缺点，

13
00:00:31,210 --> 00:00:33,560
那就是它不太受欢迎

14
00:00:33,560 --> 00:00:35,630
比 React 和 Angular。

15
00:00:35,630 --> 00:00:37,920
现在我们将在一秒钟内回到不利的一面。

16
00:00:37,920 --> 00:00:41,020
但当然，第一个重要的问题是，

17
00:00:41,020 --> 00:00:43,810
什么是 React，什么是 Angular？

18
00:00:43,810 --> 00:00:46,810
好吧，React 是 Vue 的一种替代方案。

19
00:00:46,810 --> 00:00:49,510
它基本上也是一个 JavaScript 框架，

20
00:00:49,510 --> 00:00:51,560
虽然正式，它只是一个图书馆

21
00:00:51,560 --> 00:00:54,910
因为它的功能实际上比 Vue 少。

22
00:00:54,910 --> 00:00:57,400
它只专注于渲染 UI

23
00:00:57,400 --> 00:01:00,100
它错过了一些功能，如路由

24
00:01:00,100 --> 00:01:02,640
Vue 开箱即用。

25
00:01:02,640 --> 00:01:05,550
顺便学习一下本课程中的路由是什么，

26
00:01:05,550 --> 00:01:09,200
因此 React.js 确实非常受欢迎。

27
00:01:09,200 --> 00:01:11,550
但它实际上也取决于相当多

28
00:01:11,550 --> 00:01:16,530
在社区包上，而 Vue 内置了所有东西。

29
00:01:16,530 --> 00:01:19,070
现在，Angular 是另一种选择，

30
00:01:19,070 --> 00:01:21,920
您可以使用的另一个框架，

31
00:01:21,920 --> 00:01:25,130
它实际上比 Vue 有更多的功能。

32
00:01:25,130 --> 00:01:27,270
所以它可以帮助您解决更多问题

33
00:01:27,270 --> 00:01:29,010
你可能拥有的。

34
00:01:29,010 --> 00:01:33,550
因此，它在企业界特别受欢迎，

35
00:01:33,550 --> 00:01:37,100
尽管大公司正在使用所有三个框架。

36
00:01:37,100 --> 00:01:39,390
有大公司在使用 React，

37
00:01:39,390 --> 00:01:41,750
有大公司在使用 Angular

38
00:01:41,750 --> 00:01:44,400
并且有大公司在使用 Vue。

39
00:01:44,400 --> 00:01:48,390
像 Vue 和 React 一样是基于组件的，

40
00:01:48,390 --> 00:01:50,370
它实际上使用 TypeScript。

41
00:01:50,370 --> 00:01:53,440
Vue 也支持这一点，但它是可选的。

42
00:01:53,440 --> 00:01:55,900
在 Angular 中，它基本上是强制性的。

43
00:01:55,900 --> 00:01:57,370
对于较小的项目，

44
00:01:57,370 --> 00:02:00,070
你可以说 Angular 可能是矫枉过正

45
00:02:00,070 --> 00:02:01,617
因为它的所有特点，

46
00:02:01,617 --> 00:02:04,140
但当然，这基本上总是下来

47
00:02:04,140 --> 00:02:06,750
根据个人喜好，我会说。

48
00:02:06,750 --> 00:02:10,600
总的来说，这三个都非常受欢迎并且被大量使用。

49
00:02:10,600 --> 00:02:14,440
Vue 在大公司中不太受欢迎

50
00:02:14,440 --> 00:02:17,600
但肯定有大公司在使用它。

51
00:02:17,600 --> 00:02:19,770
并附于本次讲座，

52
00:02:19,770 --> 00:02:22,640
您还可以找到更详细的比较文章

53
00:02:22,640 --> 00:02:24,140
你可以潜入其中，

54
00:02:24,140 --> 00:02:26,510
尽管您将从本文中获得最大收益

55
00:02:26,510 --> 00:02:28,560
如果你稍后再回来，

56
00:02:28,560 --> 00:02:30,590
一旦你了解了更多关于 Vue 的知识。

57
00:02:30,590 --> 00:02:33,230
现在，记住这些替代方案就足够了

58
00:02:33,230 --> 00:02:37,060
然后，一旦您对 Vue 有了更多了解，您就可以探索它们。

59
00:02:37,060 --> 00:02:39,010
因为好消息也是，

60
00:02:39,010 --> 00:02:41,230
如果你想切换

61
00:02:41,230 --> 00:02:42,670
换一种选择，

62
00:02:42,670 --> 00:02:45,120
一旦你学会了这三个之一，

63
00:02:45,120 --> 00:02:47,870
切换会更容易，因为虽然

64
00:02:47,870 --> 00:02:50,700
他们当然有你编写的不同代码，

65
00:02:50,700 --> 00:02:53,600
他们确实有相当相似的概念

66
00:02:53,600 --> 00:02:56,153
因此切换并不难。

67
00:02:57,217 --> 00:02:59,330
现在这些是 Vue 替代品

6
8
00:02:59,330 --> 00:03:02,250
现在我要说的理论就足够了。

69
00:03:02,250 --> 00:03:04,550
为什么我们现在不简单地开始

70
00:03:04,550 --> 00:03:06,160
通过编写一些 Vue 代码

71
00:03:06,160 --> 00:03:09,763
并初步了解 Vue 的工作原理。